language: cpp
script: make unit
dist: trusty

before_install:
  - eval "${MATRIX_EVAL}"

env:
  global:
    - CIBW_BUILD='cp37-* cp27-*'
    - CIBW_TEST_REQUIRES='pytest'
    - CIBW_BEFORE_BUILD='pip install "numpy>=1.16" && pip install "pandas>=0.24" && pip install "pytest>=4.3" && pip install "cmake==3.13.3" && pip install "pybind11>=2.4"'
    - CIBW_TEST_COMMAND='python -m pytest {project}/tests'


matrix:
  include:

    - os: linux
      if: tag != master-builds
      dist: bionic
      name: GCC 9
      python: 3.7

      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'ppa:deadsnakes/ppa'
          packages:
            - g++-9 python3.7
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user boto3
      script:
        - mkdir -p build/release
        - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ICU_EXTENSION=1 -DJDBC_DRIVER=1 ../.. && cmake --build .)
        - build/release/test/unittest "*"
        - python3.7 tools/shell/shell-test.py build/release/duckdb_cli
        - build/release/extension/icu/test/icu_test
        - python3.7 tools/rest/test_the_rest.py build/release/tools/rest
        - java -cp build/release/tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
        - (cd examples/embedded-c; make)
        - (cd examples/embedded-c++; make)
        - (cd examples/programmatic-querying; make)
        - (cd examples/jdbc; make)

      after_success:
        #- python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
        - python3 scripts/asset-upload.py libduckdb-linux-amd64.so=build/release/src/libduckdb*.so duckdb_cli-linux-amd64=build/release/duckdb_cli duckdb_jdbc-linux-amd64.jar=build/release/tools/jdbc/duckdb_jdbc.jar


    - os: osx
      if: tag != master-builds
      name: Xcode 11.3
      osx_image: xcode11.3

      before_install:
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
        - python3 /tmp/get-pip.py
        - python3 -m pip install --user boto3

      script:
        - (mkdir -p build/release && cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ICU_EXTENSION=1 -DJDBC_DRIVER=1 ../.. && cmake --build .)
        - build/release/test/unittest
        - python3 tools/shell/shell-test.py build/release/duckdb_cli
        - java -cp build/release/tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
        - build/release/extension/icu/test/icu_test

      after_success:
        #- python3 tools/upload-s3.py lib-osx build/release/src/libduckdb.dylib build/release/src/libduckdb_static.a build/release/duckdb_cli build/release/tools/jdbc/duckdb_jdbc.jar
        - python3 scripts/asset-upload.py libduckdb-osx-amd64.dylib=build/release/src/libduckdb*.dylib duckdb_cli-osx-amd64=build/release/duckdb_cli duckdb_jdbc-osx-amd64.jar=build/release/tools/jdbc/duckdb_jdbc.jar


    - os: windows
      if: tag != master-builds
      name: VS 2017
      filter_secrets: false

      language: c

      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install jdk8 --version 8.0.211 -y --force

      script:
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -DJDBC_DRIVER=1 -DBUILD_ICU_EXTENSION=1
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - cmake --build . --target shell --config Release
        - cmake --build . --target jdbc --config Release
        - cmake --build . --target icu_test --config Release
        - test/Release/unittest.exe
        - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe
        - C:/Program\ Files/Java/jdk1.8.0_211/bin/java -cp tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
        - extension/icu/test/Release/icu_test.exe

      after_success:
        #- C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-amd64 src/Release/duckdb.dll Release/duckdb_cli.exe tools/jdbc/duckdb_jdbc.jar
        - C:/Python37-x64/python.exe scripts/asset-upload.py libduckdb-windows-amd64.dll=src/Release/duckdb.dll duckdb_cli-windows-amd64.exe=Release/duckdb_cli.exe duckdb_jdbc-windows-amd64.jar=tools/jdbc/duckdb_jdbc.jar


# checks: debug mode (with sanitizers), coveralls, valgrind, vector sizes

    - os: linux
      if: tag != master-builds
      dist: xenial
      name: GCC 9 Debug

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - TREAT_WARNINGS_AS_ERRORS=1

    - os: osx
      name: Xcode 11.3 Debug
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      osx_image: xcode11.3


    - os: linux
      dist: xenial
      name: Code Coverage
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test

      before_install:
        - pip install --user cpp-coveralls

      script:
        - mkdir -p build/coverage
        - (cd build/coverage && cmake -E env CXXFLAGS="--coverage" cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make)
        - build/coverage/test/unittest

      after_success:
        - coveralls -b build/coverage -E '.*CMakeCXXCompilerId.cpp' --exclude tools --exclude benchmark --exclude examples --exclude third_party --exclude test --exclude src/common/enums --exclude src/parser/transform/helpers/nodetype_to_string.cpp --exclude build/coverage/third_party/libpg_query/grammar --gcov-options '\-lp'


    - os: linux
      dist: bionic
      name: Valgrind
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind

      script:
        - mkdir -p build/debug
        - (cd build/debug && cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_SANITIZER=FALSE ../.. && cmake --build .)
        - valgrind ./build/debug/test/unittest -s "Test TPC-H SF0.01"


    - os: linux
      dist: bionic
      name: GCC 9 (Vector Sizes)
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      python: 3.7

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      script:
        - python3 scripts/test_vector_sizes.py


# old compilers

    - os: linux
      name: Clang 6
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - TREAT_WARNINGS_AS_ERRORS=1
        - DISABLE_UNITY=1


    - os: linux
      name: GCC 4.9
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
      addons:
         apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9 binutils-2.26
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"


# amalgamations

    - os: linux
      dist: xenial
      name: GCC 9 (Amalgamation)
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user boto3

      script:
        - python scripts/amalgamation.py
        - mkdir -p build/release
        - (cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest "*"

      after_success:
        - (cd src/amalgamation; zip ../../build/duckdb.zip duckdb.*)
        # - python tools/upload-s3.py src-amalgamation build/duckdb.zip
        - python3 scripts/asset-upload.py duckdb_amalgamation.zip=build/duckdb.zip


    - os: osx
      name: Xcode 11.3 (Amalgamation)
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      osx_image: xcode11.3
      script:
        - python3 scripts/amalgamation.py
        - (mkdir -p build/release && cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest


    - os: windows
      name: VS 2017 (Amalgamation)
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      filter_secrets: false
      language: c
      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
      script:
        - C:/Python37-x64/python.exe scripts/amalgamation.py
        - cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - test/Release/unittest.exe


# weird platforms: 32 bit linux & windows, arm, solaris, openbsd


    - os: linux
      dist: xenial
      name: GCC 9 32 Bit
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9 libc6-dev-i386 g++-9-multilib gcc-9-multilib gcc-multilib g++-multilib lib32readline6-dev lib32readline6

      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user boto3
      script:
        - mkdir -p build/release
        - (cd build/release && cmake -DFORCE_32_BIT=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest "*"

      after_success:
        #- python tools/upload-s3.py lib-linux-i386 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli
        - python3 scripts/asset-upload.py libduckdb-linux-i386.so=build/release/src/libduckdb.so duckdb_cli-linux-i386=build/release/duckdb_cli


    - os: windows
      name: VS 2017 32 Bit
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      filter_secrets: false

      language: c

      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install curl -y --force

      script:
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=Win32
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - cmake --build . --target shell --config Release
        - test/Release/unittest.exe
        - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe

      after_success:
        #- C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-i386 src/Release/duckdb.dll Release/duckdb_cli.exe
        - C:/Python37-x64/python.exe scripts/asset-upload.py libduckdb-windows-i386.dll=src/Release/duckdb.dll duckdb_cli-windows-i386.exe=Release/duckdb_cli.exe duckdb_jdbc-windows-i386.jar=tools/jdbc/duckdb_jdbc.jar


    - os: linux
      dist: xenial
      name: GCC 5 (ARM64)
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      arch: arm64

      script:
        - mkdir -p build/debug
        - (cd build/debug && cmake -DEXPLICIT_EXCEPTIONS=TRUE -DCMAKE_BUILD_TYPE=Debug ../.. && cmake --build .)
        - build/debug/test/unittest -s "[tpch]"


    - os: linux
      dist: bionic
      name: Solaris VM
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
      sudo: true

      install:
        - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
        - echo -e "\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\n" | sudo tee -a /etc/apt/sources.list
        - sudo apt-get update > /dev/null
        - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync
        - wget -q "https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/Solaris10_1-13-2.ova"
        - VBoxManage import Solaris10_1-13-2.ova
        - rm Solaris10_1-13-2.ova
        - VBoxManage modifyvm "Solaris10_1-13" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114
        - VBoxManage startvm "Solaris10_1-13" --type headless
        - echo -e "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEArPN99L/D9jXUwtFjoAzhnzA5a7t/YJiSrcTm+hKSxPp/nklfu1Km\ntDbMBOrXsAqLRcMz5JZoF8G1jebXOO3u2LRB+INFsxqDV76TZjUC1y4SAX17h5UvstT3sn\naPPt+TzwX3PmF8ooN+L8hDIZpvty6m+7b09QRFx4l7+j30MgO+kjwNHUyocn7qokoyH2p4\nfzvtoWePNyL191O9GNg6LmjneG25nN/NBoFYc/Zu+XfDY3gMECNurGHVV3W4ZNpoqjpZWU\nFx4eG0tShBZ+pvuFPy669+H8b5laNEjPGYclInW8unW6T9nuaoQjc/metBwaODgkOsAR0u\nddRxR8nIUwAAA9C2NMXdtjTF3QAAAAdzc2gtcnNhAAABAQCs8330v8P2NdTC0WOgDOGfMD\nlru39gmJKtxOb6EpLE+n+eSV+7Uqa0NswE6tewCotFwzPklmgXwbWN5tc47e7YtEH4g0Wz\nGoNXvpNmNQLXLhIBfXuHlS+y1Peydo8+35PPBfc+YXyig34vyEMhmm+3Lqb7tvT1BEXHiX\nv6PfQyA76SPA0dTKhyfuqiSjIfanh/O+2hZ483IvX3U70Y2DouaOd4bbmc380GgVhz9m75\nd8NjeAwQI26sYdVXdbhk2miqOllZQXHh4bS1KEFn6m+4U/Lrr34fxvmVo0SM8ZhyUidby6\ndbpP2e5qhCNz+Z60HBo4OCQ6wBHS511HFHychTAAAAAwEAAQAAAQEAl3IwnZ0+z96bjG0m\nvAQLngXwgjIRfFieOKPvTpPtCagBEG5X8gSSDcTeKoAqlvDkvBYO3uAGDqeFf9jgJe3T9N\ncD3cW1xvw0fyVWlW1eK2cgRUXIYhV1SzfKHvBKx1eoauRieLGNHhHe8aB/iHFf2hx0BH9V\nSSiQogX2Fk8iAphr9qLuR+M0eMtsZmq9nNpk0iXiohw7b3xNb1QrewoeiXiSI4xANdbkmx\n7R2Jnm132toa+ofPZWbpRptYyzv5TWRhEob4GQSknEvS7NEep3cxnv71d1wQvCfhkMKLXH\nKrIck4X46fLa+65OV8Bq37x91kRagOl4VFBZBT61Y9+DoQAAAIEAltUA8Zx5ETlUOXdGCQ\n+ftbCLZlmlPGGabFdg/EKM+M96Q3sj7L2lIP0Htt5w/HmM3Hz9uLk/d/m20zPq8xkltwCo\nF4R80K5HA38Q26fPRpJzDhch+k7AYuQwjziPSH1uzP3BdQo74KVuyvaTk+9VoeeFslF13P\njflhvUmCyquNkAAACBANtkmGdXwaMHrFKAibQreQuQD9CBRFRDRYNWOP4nPOp7YyCY4xbf\n02kHfFUmf7UqvY36v+jTC4RJ1mJH9KVlqJOB/JLhb6Wrv3xuddcxbwaMwb6dGgsZM+iB7G\nqBlcHlrxnWi6bXXK9WpQWaLNYdE4MKgRvKTSq20glezRWDijznAAAAgQDJzyCedgs5ibpb\nhvtNy5TGXPyX2lI9qoMDV2LSJZhp5TPL/mZqITUrehs0siM9IQ4DqhL4DgKBkYOLI/W6mW\nCXkQVFkGGLovzFUMM/wpK1Ua20k+0XakblI11yK3fjd0XJ0K5FyQ1YzG9XXZ8EuZo/2p2A\n8Y/K54JYuMflOJVftQAAABZoYW5uZXNAZGFrYXIuZGEuY3dpLm5sAQID\n-----END OPENSSH PRIVATE KEY-----\n" > id_rsa_solaris
        - chmod 400 id_rsa_solaris
        - export SSHFLAGS="-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_solaris"
        - export SCMD="ssh $SSHFLAGS -p 2222 root@localhost"
        - sleep 60
        - while ! $SCMD ls ; do sleep 30 ; done
        - $SCMD 'bash -c "echo 'nameserver 8.8.8.8' > /etc/resolv.conf"'

      script:
        - python scripts/amalgamation.py > /dev/null
        - rsync -a -e "ssh $SSHFLAGS -p 2222" --exclude=.git --exclude=build --exclude=third_party/sqllogictest --exclude=third_party/imdb .  root@localhost:/duckdb
        - travis_wait 50 $SCMD 'rm -rf /duckdb/build && mkdir -p /duckdb/build && cd /duckdb/build && export PATH=/opt/csw/bin/:$PATH CXX=g++ CC=gcc  && cmake -DCMAKE_AR=/opt/csw/bin/gar -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'
        - $SCMD /duckdb/build/test/unittest "~[copy]~[file_system]~[.]"


    # - os: linux
    #   dist: bionic
    #   name: OpenBSD VM
    #   if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/
    #   sudo: true

    #   install:
    #     - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
    #     - echo -e "\ndeb [arch=amd64] https://download.virtualbox.org/virtualbox/debian bionic contrib\n" | sudo tee -a /etc/apt/sources.list
    #     - sudo apt-get update > /dev/null
    #     - sudo apt-get install -y linux-headers-$(uname -r) virtualbox-5.2 rsync
    #     - wget -q "https://homepages.cwi.nl/~hannes/86Cv27lf5353lJR/OpenBSD.ova"
    #     - VBoxManage import OpenBSD.ova
    #     - rm OpenBSD.ova
    #     - VBoxManage modifyvm "OpenBSD" --usb off --usbehci off --usbxhci off --cpus 2 --hwvirtex on --memory 6114
    #     - VBoxManage startvm "OpenBSD" --type headless
    #     - echo -e "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEA0I/POwsFY/l5DGvybl1amd9pqzP5ADPQGWupcNuKbSYq+sD4g5Jr\nqZ0vG9sULeYlZZFHzdbUqzdbK9rMZZOUwUwHbxViS2UlhCo0onB9bbzm6kQ2gSBaXxa8SC\nwllEdHq6c/kK50MZKVwqpBrxIJtGN08pNauhMPNMdniQZD5slkKrneTgGYnm30xNtkHStB\nY/btURWNlVd8Qedx8gSEV5628cAeKJAPOn4nrCYvy7uMWBOYqrqZii38uxdrhnZKKKENcA\ndUuFRdmFDK/0d+/0PeUYUacZm3HRU5F21440u51OdBMzBYe9AaQXQGrwKwY+YxlczlVh8g\n9XMWYBzJ3wAAA9B959FqfefRagAAAAdzc2gtcnNhAAABAQDQj887CwVj+XkMa/JuXVqZ32\nmrM/kAM9AZa6lw24ptJir6wPiDkmupnS8b2xQt5iVlkUfN1tSrN1sr2sxlk5TBTAdvFWJL\nZSWEKjSicH1tvObqRDaBIFpfFrxILCWUR0erpz+QrnQxkpXCqkGvEgm0Y3Tyk1q6Ew80x2\neJBkPmyWQqud5OAZiebfTE22QdK0Fj9u1RFY2VV3xB53HyBIRXnrbxwB4okA86fiesJi/L\nu4xYE5iqupmKLfy7F2uGdkoooQ1wB1S4VF2YUMr/R37/Q95RhRpxmbcdFTkXbXjjS7nU50\nEzMFh70BpBdAavArBj5jGVzOVWHyD1cxZgHMnfAAAAAwEAAQAAAQB6iVPfQ81p/MRDKRUq\nBM1bhKkH/qQ4mziUBu5psYN2N6ue4kvgueFpqUFpY2FKymKEd0QxyxvucLqvXIEk2P3YR/\nxCJtU2qPnO2iFMozz+gbNGRsejPEf8gFYlLVLy+KJCVySAtA7upUo6MmAfJUDwbFLkxvDS\nTKptfw70seqpJ/CdUXqrd/YAfwqGO0ZgQC59MDTGS1rXViRbTEMOxbWg9TMmvWb36vJG8i\nvSGimXL0gvhB7himZzK0z9tl8r3gHIHpiKy+67tzXyDdzXxpTJ7krBIwVgMgHwZpSy++c6\n9e6ag9LH217gWSDX4C0tAnHhjc5QqlCBwZVe/n2Kyg3pAAAAgQC1zeKHT3XLt9NfBVjhfq\nS3lMByGNCR90RS1vZe+wYVuChFCs7ztraWgMX9n7m3HvaGj+lqDPBD6mkoaYFCqKVr5GcH\nq1fij2sZeEpymhOUjX/aWGr9kdnxkvpSzYt33OU7hQIv34ViSXuyiEVb/SYXxqmwaYhCbW\noAlXqS57U3ZAAAAIEA58ImmEbbHDbA+mUZ1xugtb2heIQyVm+B1FtWtOY3B7LKgfgP5kaw\nhhVAlOfpxSyn/aNWdokE6JsFU/Vs/eiEXmn253ofF0J2kQuVD8+0m+yUMkbDYbfyc9FPsR\n1OS4cqjM8ET77EvLiqIHXO8aWr4eCOJxjDJLC0xVKOicgk/JUAAACBAOZghEZOuUgLjB1K\nQ0kMX+CTNvyKB44eY24kbp22KI4hsEw4BwyqPvCyRZsx7EBGXdGO0giVc41T6WJxwLVCbW\nmG1AC03KQ/lPXf/lzuwT4/N52hw+s4EmHlcPfoPyRFtbZuUyJqlhL4txWZdI31Ot0jxiQK\nxePoxUuMva2261ujAAAAFWhhbm5lc0BoZXJiZXJ0Mi5sb2NhbAECAwQF\n-----END OPENSSH PRIVATE KEY-----\n" > id_rsa_openbsd
    #     - chmod 400 id_rsa_openbsd
    #     - export SSHFLAGS="-o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa_openbsd"
    #     - export SCMD="ssh $SSHFLAGS -p 2222 root@localhost"
    #     - sleep 60
    #     - while ! $SCMD ls ; do sleep 30 ; done
    #     - $SCMD pkg_add gmake rsync-3.1.3

    #   script:
    #     - python scripts/amalgamation.py > /dev/null
    #     - rsync -a -e "ssh $SSHFLAGS -p 2222" --exclude=.git --exclude=build --exclude=third_party/sqllogictest .  root@localhost:/home/duckdb
    #     - travis_wait 60 $SCMD 'rm -rf /home/duckdb/build && mkdir -p /home/duckdb/build && cd /home/duckdb/build && cmake -DCMAKE_BUILD_TYPE=Debug -DAMALGAMATION_BUILD=1 .. && gmake -j2'
    #     - $SCMD /home/duckdb/build/test/unittest "~[copy]~[sqlitelogic]~[sqlserver]~[parquet]~[.]"


# APIs: jdbc/ r / python packages

    - os: linux
      dist: xenial
      name: JDBC Compliance
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      env:
        - JAVA_HOME='/usr/lib/jvm/java-8-openjdk-amd64'

      before_install:
        - sudo apt-get update > /dev/null
        - sudo apt-get install -y openjdk-8-jdk openjdk-8-jre

      script:
        - mkdir -p build/release
        - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release -DJDBC_DRIVER=1 ../.. && cmake --build .)
        - java -cp build/release/tools/jdbc/duckdb_jdbc.jar nl.cwi.da.duckdb.test.TestDuckDBJDBC
        - git clone https://github.com/cwida/jdbccts.git
        - (cd jdbccts && make DUCKDB_JAR=../build/release/tools/jdbc/duckdb_jdbc.jar test)


    - os: linux
      if: tag != master-builds
      name: R Package

      dist: xenial
      language: r
      r: devel

      before_install:
        - pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./configure
        - R CMD build .
        - R CMD INSTALL duckdb_*.tar.gz

      script:
        - (cd tests && R -f testthat.R)
        - R -f ../../examples/R/dbi.R
        - R -f ../../examples/R/dplyr.R

      after_success:
        - R -e "tools::write_PACKAGES(dir = '.', type = 'source')"
        - python ../upload-s3.py rstats/src/contrib duckdb_*.tar.gz PACKAGES*
        - python ../upload-s3.py rstats duckdb_*.tar.gz
        - python3 ../../scripts/asset-upload.py duckdb_r_src.tar.gz=duckdb_*.tar.gz


    - os: osx
      osx_image: xcode11.3
      name: R Package
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      language: r
      #r: devel

      before_install:
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
        - python3 /tmp/get-pip.py
        - python3 -m pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./configure
        - R CMD build .
        - R CMD INSTALL --build duckdb_*.tar.gz
        - R CMD INSTALL duckdb_*.tgz

      script:
        - (cd tests && R -f testthat.R)

      after_success:
        - R -e "tools::write_PACKAGES(dir = '.', type = 'mac.binary')"
        - python3 ../upload-s3.py rstats/bin/macosx/el-capitan/contrib/3.6 duckdb_*.tgz PACKAGES*
        - python3 ../upload-s3.py rstats duckdb_*.tgz
        - python3 ../../scripts/asset-upload.py duckdb_r_osx.tgz=duckdb_*.tgz


    - os: windows
      name: R Package
      filter_secrets: false
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      language: cpp

      before_script:
        - choco install r.project -y --version 3.6.0
        - wget "https://github.com/hannesmuehleisen/choco-rtools/raw/master/rtools.3.5.0.nupkg"
        - choco install rtools -s rtools.3.5.0.nupkg -f -y
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install curl -y --force

      script:
        - export "PATH=/c/Rtools/bin:$PATH"
        - cd tools/rpkg
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -f dependencies.R
        - sh configure
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD build .
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL --build --no-multiarch duckdb_*.tar.gz
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL duckdb_*.zip
        - (cd tests; C:/Program\ Files/R/R-3.6.0/bin/R.exe -f testthat.R)

      after_success:
        - C:/Python37-x64/python.exe ../upload-s3.py rstats duckdb_*.zip
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -e "tools::write_PACKAGES(dir = '.', type = 'win.binary')"
        - C:/Python37-x64/python.exe ../upload-s3.py rstats/bin/windows/contrib/3.6 duckdb_*.zip PACKAGES*
        - C:/Python37-x64/python.exe ../../scripts/asset-upload.py duckdb_r_windows.zip=duckdb_*.zip


    - os: linux
      if: tag != master-builds
      name: Python 3 Package
      dist: xenial
      language: python
      cache: pip
      env:
        - CIBW_BUILD='cp37-*'
      python: 3.7

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        - python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz
       # - python3 scripts/asset-upload.py duckdb_python_src.tar.gz=tools/pythonpkg/dist/duckdb-*.tar.gz tools/pythonpkg/wheelhouse/*.whl


    - os: linux
      name: Python 2 Package
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      dist: xenial
      language: python
      cache: pip
      env:
        - CIBW_BUILD='cp27-*'
      python: 2.7

      script:
        - pip install boto3 numpy pandas pytest
        - cd tools/pythonpkg
        - python setup.py install
        - python -m pytest tests
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball


    - os: osx
      name: Python Package
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      language: generic
      osx_image: xcode11.3

      before_install:
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
        - python3 /tmp/get-pip.py
        - python3 -m pip install cibuildwheel==0.10.2 boto3

      script:
        - cd tools/pythonpkg
        - python3 setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..

      after_success:
        - python3 tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl
       # - python3 scripts/asset-upload.py tools/pythonpkg/wheelhouse/*.whl


    - os: windows
      name: Python Package
      if: (type = push AND branch = master) OR type = pull_request OR tag =~ /^v\d+\.\d+\.\d+$/

      language: cpp
      filter_secrets: false
      # no python 27 because no C++11 support in its windows toolchain
      env:
        - CIBW_BUILD='cp37-*'

      before_install:
        - choco install python3 --version 3.7.3 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python37"
        - choco install python3 --version 3.7.3 --sidebyside -y --force --params "/InstallDir:C:\Python37-x64"
        - choco install python3 --version 3.6.8 --sidebyside -y --force --params "/InstallDir:C:\Python36-x64"
        - choco install python3 --version 3.6.8 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python36"
        - choco install python2 --version 2.7.16 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python27"
        - choco install python2 --version 2.7.16 --sidebyside -y --force --params "/InstallDir:C:\Python27-x64"
        - choco install curl -y --force
        - C:/Python37-x64/python.exe -m pip install --upgrade pip
        - C:/Python37-x64/python.exe -m pip install "cibuildwheel==0.10.2"
        - C:/Python37-x64/python.exe -m pip install "numpy>=1.16" "pandas>=0.24" "pytest>=4.3" "pybind11>=2.4"

      script:
        - cd tools/pythonpkg
        - C:/Python37-x64/python.exe setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - C:/Python37-x64/python.exe -m cibuildwheel --platform windows --output-dir wheelhouse duckdb_tarball
        - cd ../..

      after_success:
        - C:/Python37-x64/python.exe tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl
        # - C:/Python37-x64/python.exe scripts/asset-upload.py tools/pythonpkg/wheelhouse/*.whl


/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DESCRIBE = 376,
     DETACH = 377,
     DICTIONARY = 378,
     DIRECTED = 379,
     DISABLE_P = 380,
     DISCARD = 381,
     DISTINCT = 382,
     DO = 383,
     DOCUMENT_P = 384,
     DOMAIN_P = 385,
     DOUBLE_P = 386,
     DROP = 387,
     EACH = 388,
     ELSE = 389,
     ENABLE_P = 390,
     ENCODING = 391,
     ENCRYPTED = 392,
     END_P = 393,
     ENUM_P = 394,
     ESCAPE = 395,
     EVENT = 396,
     EXCEPT = 397,
     EXCLUDE = 398,
     EXCLUDING = 399,
     EXCLUSIVE = 400,
     EXECUTE = 401,
     EXISTS = 402,
     EXPLAIN = 403,
     EXTENSION = 404,
     EXTERNAL = 405,
     EXTRACT = 406,
     FALSE_P = 407,
     FAMILY = 408,
     FETCH = 409,
     FILTER = 410,
     FIRST_P = 411,
     FLOAT_P = 412,
     FOLLOWING = 413,
     FOR = 414,
     FORCE = 415,
     FOREIGN = 416,
     FORWARD = 417,
     FREEZE = 418,
     FROM = 419,
     FULL = 420,
     FUNCTION = 421,
     FUNCTIONS = 422,
     GENERATED = 423,
     GLOBAL = 424,
     GRANT = 425,
     GRANTED = 426,
     GREATEST = 427,
     GROUP_P = 428,
     GROUPING = 429,
     HANDLER = 430,
     HAVING = 431,
     HEADER_P = 432,
     HOLD = 433,
     HOUR_P = 434,
     IDENTITY_P = 435,
     IF_P = 436,
     ILIKE = 437,
     IMMEDIATE = 438,
     IMMUTABLE = 439,
     IMPLICIT_P = 440,
     IMPORT_P = 441,
     IN_P = 442,
     INCLUDING = 443,
     INCREMENT = 444,
     INDEX = 445,
     INDEXES = 446,
     INHERIT = 447,
     INHERITS = 448,
     INITIALLY = 449,
     INLINE_P = 450,
     INNER_P = 451,
     INOUT = 452,
     INPUT_P = 453,
     INSENSITIVE = 454,
     INSERT = 455,
     INSTEAD = 456,
     INT_P = 457,
     INTEGER = 458,
     INTERSECT = 459,
     INTERVAL = 460,
     INTO = 461,
     INVOKER = 462,
     IS = 463,
     ISNULL = 464,
     ISOLATION = 465,
     JOIN = 466,
     KEY = 467,
     LABEL = 468,
     LANGUAGE = 469,
     LARGE_P = 470,
     LAST_P = 471,
     LATERAL_P = 472,
     LEADING = 473,
     LEAKPROOF = 474,
     LEAST = 475,
     LEFT = 476,
     LEVEL = 477,
     LIKE = 478,
     LIMIT = 479,
     LISTEN = 480,
     LOAD = 481,
     LOCAL = 482,
     LOCALTIME = 483,
     LOCALTIMESTAMP = 484,
     LOCATION = 485,
     LOCK_P = 486,
     LOCKED = 487,
     LOGGED = 488,
     MAPPING = 489,
     MATCH = 490,
     MATERIALIZED = 491,
     MAXVALUE = 492,
     METHOD = 493,
     MINUTE_P = 494,
     MINVALUE = 495,
     MODE = 496,
     MONTH_P = 497,
     MOVE = 498,
     NAME_P = 499,
     NAMES = 500,
     NATIONAL = 501,
     NATURAL = 502,
     NCHAR = 503,
     NEW = 504,
     NEXT = 505,
     NO = 506,
     NONE = 507,
     NOT = 508,
     NOTHING = 509,
     NOTIFY = 510,
     NOTNULL = 511,
     NOWAIT = 512,
     NULL_P = 513,
     NULLIF = 514,
     NULLS_P = 515,
     NUMERIC = 516,
     OBJECT_P = 517,
     OF = 518,
     OFF = 519,
     OFFSET = 520,
     OIDS = 521,
     OLD = 522,
     ON = 523,
     ONLY = 524,
     OPERATOR = 525,
     OPTION = 526,
     OPTIONS = 527,
     OR = 528,
     ORDER = 529,
     ORDINALITY = 530,
     OUT_P = 531,
     OUTER_P = 532,
     OVER = 533,
     OVERLAPS = 534,
     OVERLAY = 535,
     OVERRIDING = 536,
     OWNED = 537,
     OWNER = 538,
     PARALLEL = 539,
     PARSER = 540,
     PARTIAL = 541,
     PARTITION = 542,
     PASSING = 543,
     PASSWORD = 544,
     PKFK = 545,
     PLACING = 546,
     PLANS = 547,
     POLICY = 548,
     POSITION = 549,
     PRAGMA_P = 550,
     PRECEDING = 551,
     PRECISION = 552,
     PREPARE = 553,
     PREPARED = 554,
     PRESERVE = 555,
     PRIMARY = 556,
     PRIOR = 557,
     PRIVILEGES = 558,
     PROCEDURAL = 559,
     PROCEDURE = 560,
     PROGRAM = 561,
     PUBLICATION = 562,
     QUOTE = 563,
     RAI = 564,
     RANGE = 565,
     READ_P = 566,
     REAL = 567,
     REASSIGN = 568,
     RECHECK = 569,
     RECURSIVE = 570,
     REF = 571,
     REFERENCES = 572,
     REFERENCING = 573,
     REFRESH = 574,
     REINDEX = 575,
     RELATIVE_P = 576,
     RELEASE = 577,
     RENAME = 578,
     REPEATABLE = 579,
     REPLACE = 580,
     REPLICA = 581,
     RESET = 582,
     RESTART = 583,
     RESTRICT = 584,
     RETURNING = 585,
     RETURNS = 586,
     REVOKE = 587,
     RIGHT = 588,
     ROLE = 589,
     ROLLBACK = 590,
     ROLLUP = 591,
     ROW = 592,
     ROWS = 593,
     RULE = 594,
     SAVEPOINT = 595,
     SCHEMA = 596,
     SCHEMAS = 597,
     SCROLL = 598,
     SEARCH = 599,
     SECOND_P = 600,
     SECURITY = 601,
     SELECT = 602,
     SELF = 603,
     SEQUENCE = 604,
     SEQUENCES = 605,
     SERIALIZABLE = 606,
     SERVER = 607,
     SESSION = 608,
     SESSION_USER = 609,
     SET = 610,
     SETOF = 611,
     SETS = 612,
     SHARE = 613,
     SHOW = 614,
     SIMILAR = 615,
     SIMPLE = 616,
     SKIP = 617,
     SMALLINT = 618,
     SNAPSHOT = 619,
     SOME = 620,
     SQL_P = 621,
     STABLE = 622,
     STANDALONE_P = 623,
     START = 624,
     STATEMENT = 625,
     STATISTICS = 626,
     STDIN = 627,
     STDOUT = 628,
     STORAGE = 629,
     STRICT_P = 630,
     STRIP_P = 631,
     SUBSCRIPTION = 632,
     SUBSTRING = 633,
     SYMMETRIC = 634,
     SYSID = 635,
     SYSTEM_P = 636,
     TABLE = 637,
     TABLES = 638,
     TABLESAMPLE = 639,
     TABLESPACE = 640,
     TEMP = 641,
     TEMPLATE = 642,
     TEMPORARY = 643,
     TEXT_P = 644,
     THEN = 645,
     TIME = 646,
     TIMESTAMP = 647,
     TO = 648,
     TRAILING = 649,
     TRANSACTION = 650,
     TRANSFORM = 651,
     TREAT = 652,
     TRIGGER = 653,
     TRIM = 654,
     TRUE_P = 655,
     TRUNCATE = 656,
     TRUSTED = 657,
     TYPE_P = 658,
     TYPES_P = 659,
     UNBOUNDED = 660,
     UNCOMMITTED = 661,
     UNDIRECTED = 662,
     UNENCRYPTED = 663,
     UNION = 664,
     UNIQUE = 665,
     UNKNOWN = 666,
     UNLISTEN = 667,
     UNLOGGED = 668,
     UNTIL = 669,
     UPDATE = 670,
     USER = 671,
     USING = 672,
     VACUUM = 673,
     VALID = 674,
     VALIDATE = 675,
     VALIDATOR = 676,
     VALUE_P = 677,
     VALUES = 678,
     VARCHAR = 679,
     VARIADIC = 680,
     VARYING = 681,
     VERBOSE = 682,
     VERSION_P = 683,
     VIEW = 684,
     VIEWS = 685,
     VOLATILE = 686,
     WHEN = 687,
     WHERE = 688,
     WHITESPACE_P = 689,
     WINDOW = 690,
     WITH = 691,
     WITHIN = 692,
     WITHOUT = 693,
     WORK = 694,
     WRAPPER = 695,
     WRITE_P = 696,
     XML_P = 697,
     XMLATTRIBUTES = 698,
     XMLCONCAT = 699,
     XMLELEMENT = 700,
     XMLEXISTS = 701,
     XMLFOREST = 702,
     XMLNAMESPACES = 703,
     XMLPARSE = 704,
     XMLPI = 705,
     XMLROOT = 706,
     XMLSERIALIZE = 707,
     XMLTABLE = 708,
     YEAR_P = 709,
     YES_P = 710,
     ZONE = 711,
     NOT_LA = 712,
     NULLS_LA = 713,
     WITH_LA = 714,
     POSTFIXOP = 715,
     UMINUS = 716
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DESCRIBE 376
#define DETACH 377
#define DICTIONARY 378
#define DIRECTED 379
#define DISABLE_P 380
#define DISCARD 381
#define DISTINCT 382
#define DO 383
#define DOCUMENT_P 384
#define DOMAIN_P 385
#define DOUBLE_P 386
#define DROP 387
#define EACH 388
#define ELSE 389
#define ENABLE_P 390
#define ENCODING 391
#define ENCRYPTED 392
#define END_P 393
#define ENUM_P 394
#define ESCAPE 395
#define EVENT 396
#define EXCEPT 397
#define EXCLUDE 398
#define EXCLUDING 399
#define EXCLUSIVE 400
#define EXECUTE 401
#define EXISTS 402
#define EXPLAIN 403
#define EXTENSION 404
#define EXTERNAL 405
#define EXTRACT 406
#define FALSE_P 407
#define FAMILY 408
#define FETCH 409
#define FILTER 410
#define FIRST_P 411
#define FLOAT_P 412
#define FOLLOWING 413
#define FOR 414
#define FORCE 415
#define FOREIGN 416
#define FORWARD 417
#define FREEZE 418
#define FROM 419
#define FULL 420
#define FUNCTION 421
#define FUNCTIONS 422
#define GENERATED 423
#define GLOBAL 424
#define GRANT 425
#define GRANTED 426
#define GREATEST 427
#define GROUP_P 428
#define GROUPING 429
#define HANDLER 430
#define HAVING 431
#define HEADER_P 432
#define HOLD 433
#define HOUR_P 434
#define IDENTITY_P 435
#define IF_P 436
#define ILIKE 437
#define IMMEDIATE 438
#define IMMUTABLE 439
#define IMPLICIT_P 440
#define IMPORT_P 441
#define IN_P 442
#define INCLUDING 443
#define INCREMENT 444
#define INDEX 445
#define INDEXES 446
#define INHERIT 447
#define INHERITS 448
#define INITIALLY 449
#define INLINE_P 450
#define INNER_P 451
#define INOUT 452
#define INPUT_P 453
#define INSENSITIVE 454
#define INSERT 455
#define INSTEAD 456
#define INT_P 457
#define INTEGER 458
#define INTERSECT 459
#define INTERVAL 460
#define INTO 461
#define INVOKER 462
#define IS 463
#define ISNULL 464
#define ISOLATION 465
#define JOIN 466
#define KEY 467
#define LABEL 468
#define LANGUAGE 469
#define LARGE_P 470
#define LAST_P 471
#define LATERAL_P 472
#define LEADING 473
#define LEAKPROOF 474
#define LEAST 475
#define LEFT 476
#define LEVEL 477
#define LIKE 478
#define LIMIT 479
#define LISTEN 480
#define LOAD 481
#define LOCAL 482
#define LOCALTIME 483
#define LOCALTIMESTAMP 484
#define LOCATION 485
#define LOCK_P 486
#define LOCKED 487
#define LOGGED 488
#define MAPPING 489
#define MATCH 490
#define MATERIALIZED 491
#define MAXVALUE 492
#define METHOD 493
#define MINUTE_P 494
#define MINVALUE 495
#define MODE 496
#define MONTH_P 497
#define MOVE 498
#define NAME_P 499
#define NAMES 500
#define NATIONAL 501
#define NATURAL 502
#define NCHAR 503
#define NEW 504
#define NEXT 505
#define NO 506
#define NONE 507
#define NOT 508
#define NOTHING 509
#define NOTIFY 510
#define NOTNULL 511
#define NOWAIT 512
#define NULL_P 513
#define NULLIF 514
#define NULLS_P 515
#define NUMERIC 516
#define OBJECT_P 517
#define OF 518
#define OFF 519
#define OFFSET 520
#define OIDS 521
#define OLD 522
#define ON 523
#define ONLY 524
#define OPERATOR 525
#define OPTION 526
#define OPTIONS 527
#define OR 528
#define ORDER 529
#define ORDINALITY 530
#define OUT_P 531
#define OUTER_P 532
#define OVER 533
#define OVERLAPS 534
#define OVERLAY 535
#define OVERRIDING 536
#define OWNED 537
#define OWNER 538
#define PARALLEL 539
#define PARSER 540
#define PARTIAL 541
#define PARTITION 542
#define PASSING 543
#define PASSWORD 544
#define PKFK 545
#define PLACING 546
#define PLANS 547
#define POLICY 548
#define POSITION 549
#define PRAGMA_P 550
#define PRECEDING 551
#define PRECISION 552
#define PREPARE 553
#define PREPARED 554
#define PRESERVE 555
#define PRIMARY 556
#define PRIOR 557
#define PRIVILEGES 558
#define PROCEDURAL 559
#define PROCEDURE 560
#define PROGRAM 561
#define PUBLICATION 562
#define QUOTE 563
#define RAI 564
#define RANGE 565
#define READ_P 566
#define REAL 567
#define REASSIGN 568
#define RECHECK 569
#define RECURSIVE 570
#define REF 571
#define REFERENCES 572
#define REFERENCING 573
#define REFRESH 574
#define REINDEX 575
#define RELATIVE_P 576
#define RELEASE 577
#define RENAME 578
#define REPEATABLE 579
#define REPLACE 580
#define REPLICA 581
#define RESET 582
#define RESTART 583
#define RESTRICT 584
#define RETURNING 585
#define RETURNS 586
#define REVOKE 587
#define RIGHT 588
#define ROLE 589
#define ROLLBACK 590
#define ROLLUP 591
#define ROW 592
#define ROWS 593
#define RULE 594
#define SAVEPOINT 595
#define SCHEMA 596
#define SCHEMAS 597
#define SCROLL 598
#define SEARCH 599
#define SECOND_P 600
#define SECURITY 601
#define SELECT 602
#define SELF 603
#define SEQUENCE 604
#define SEQUENCES 605
#define SERIALIZABLE 606
#define SERVER 607
#define SESSION 608
#define SESSION_USER 609
#define SET 610
#define SETOF 611
#define SETS 612
#define SHARE 613
#define SHOW 614
#define SIMILAR 615
#define SIMPLE 616
#define SKIP 617
#define SMALLINT 618
#define SNAPSHOT 619
#define SOME 620
#define SQL_P 621
#define STABLE 622
#define STANDALONE_P 623
#define START 624
#define STATEMENT 625
#define STATISTICS 626
#define STDIN 627
#define STDOUT 628
#define STORAGE 629
#define STRICT_P 630
#define STRIP_P 631
#define SUBSCRIPTION 632
#define SUBSTRING 633
#define SYMMETRIC 634
#define SYSID 635
#define SYSTEM_P 636
#define TABLE 637
#define TABLES 638
#define TABLESAMPLE 639
#define TABLESPACE 640
#define TEMP 641
#define TEMPLATE 642
#define TEMPORARY 643
#define TEXT_P 644
#define THEN 645
#define TIME 646
#define TIMESTAMP 647
#define TO 648
#define TRAILING 649
#define TRANSACTION 650
#define TRANSFORM 651
#define TREAT 652
#define TRIGGER 653
#define TRIM 654
#define TRUE_P 655
#define TRUNCATE 656
#define TRUSTED 657
#define TYPE_P 658
#define TYPES_P 659
#define UNBOUNDED 660
#define UNCOMMITTED 661
#define UNDIRECTED 662
#define UNENCRYPTED 663
#define UNION 664
#define UNIQUE 665
#define UNKNOWN 666
#define UNLISTEN 667
#define UNLOGGED 668
#define UNTIL 669
#define UPDATE 670
#define USER 671
#define USING 672
#define VACUUM 673
#define VALID 674
#define VALIDATE 675
#define VALIDATOR 676
#define VALUE_P 677
#define VALUES 678
#define VARCHAR 679
#define VARIADIC 680
#define VARYING 681
#define VERBOSE 682
#define VERSION_P 683
#define VIEW 684
#define VIEWS 685
#define VOLATILE 686
#define WHEN 687
#define WHERE 688
#define WHITESPACE_P 689
#define WINDOW 690
#define WITH 691
#define WITHIN 692
#define WITHOUT 693
#define WORK 694
#define WRAPPER 695
#define WRITE_P 696
#define XML_P 697
#define XMLATTRIBUTES 698
#define XMLCONCAT 699
#define XMLELEMENT 700
#define XMLEXISTS 701
#define XMLFOREST 702
#define XMLNAMESPACES 703
#define XMLPARSE 704
#define XMLPI 705
#define XMLROOT 706
#define XMLSERIALIZE 707
#define XMLTABLE 708
#define YEAR_P 709
#define YES_P 710
#define ZONE 711
#define NOT_LA 712
#define NULLS_LA 713
#define WITH_LA 714
#define POSTFIXOP 715
#define UMINUS 716




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "parser/parse_expr.hpp"
#include "utils/datetime.hpp"

#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1230 "third_party/libpg_query/src_backend_parser_gram.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1255 "third_party/libpg_query/src_backend_parser_gram.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  512
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   44677

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  480
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  340
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1565
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2626

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   716

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   468,     2,     2,
     473,   474,   466,   464,   477,   465,   475,   467,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   479,   476,
     460,   462,   461,   478,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   471,     2,   472,   469,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   463,   470
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    72,    77,    84,    89,
      96,   101,   108,   113,   120,   122,   125,   129,   132,   134,
     138,   141,   145,   147,   151,   154,   160,   164,   171,   176,
     183,   190,   197,   203,   209,   216,   226,   231,   237,   245,
     252,   257,   266,   271,   274,   279,   283,   290,   295,   298,
     301,   304,   307,   309,   312,   313,   315,   318,   321,   324,
     326,   330,   335,   338,   339,   342,   346,   349,   353,   360,
     367,   376,   383,   392,   399,   408,   415,   424,   433,   444,
     453,   464,   466,   467,   475,   477,   482,   487,   495,   498,
     500,   504,   509,   513,   514,   516,   517,   520,   524,   530,
     539,   545,   546,   552,   558,   566,   569,   570,   572,   574,
     576,   580,   583,   584,   586,   587,   589,   593,   595,   599,
     601,   605,   608,   611,   616,   622,   628,   637,   639,   640,
     644,   654,   667,   671,   672,   677,   684,   686,   689,   691,
     693,   694,   696,   699,   702,   704,   707,   710,   712,   715,
     719,   722,   725,   728,   731,   735,   739,   743,   745,   749,
     751,   752,   754,   757,   760,   763,   766,   769,   772,   775,
     778,   780,   782,   783,   793,   806,   825,   826,   829,   831,
     833,   835,   837,   839,   841,   845,   846,   848,   851,   853,
     855,   858,   861,   865,   867,   869,   872,   875,   877,   880,
     884,   890,   893,   899,   905,   908,   912,   914,   916,   919,
     922,   923,   928,   929,   933,   938,   943,   944,   948,   951,
     952,   956,   958,   960,   962,   964,   966,   968,   970,   972,
     974,   976,   980,   984,   986,   989,   992,   995,   998,  1001,
    1004,  1005,  1009,  1013,  1017,  1018,  1020,  1023,  1025,  1028,
    1031,  1034,  1037,  1042,  1045,  1048,  1050,  1054,  1056,  1060,
    1062,  1064,  1066,  1068,  1072,  1074,  1077,  1078,  1080,  1081,
    1083,  1087,  1088,  1091,  1092,  1096,  1100,  1102,  1108,  1112,
    1114,  1118,  1120,  1125,  1131,  1137,  1144,  1148,  1156,  1161,
    1173,  1175,  1179,  1182,  1185,  1188,  1189,  1193,  1195,  1197,
    1199,  1201,  1202,  1204,  1206,  1209,  1212,  1215,  1218,  1220,
    1221,  1223,  1226,  1233,  1238,  1245,  1250,  1257,  1266,  1268,
    1270,  1272,  1275,  1277,  1280,  1282,  1284,  1286,  1290,  1294,
    1298,  1302,  1305,  1308,  1310,  1314,  1316,  1318,  1320,  1322,
    1326,  1328,  1330,  1331,  1333,  1335,  1337,  1346,  1358,  1368,
    1370,  1372,  1376,  1377,  1379,  1383,  1385,  1386,  1388,  1389,
    1391,  1392,  1394,  1398,  1400,  1402,  1404,  1408,  1409,  1412,
    1415,  1416,  1419,  1420,  1422,  1423,  1425,  1427,  1429,  1433,
    1437,  1439,  1441,  1445,  1449,  1453,  1457,  1462,  1466,  1469,
    1471,  1473,  1475,  1477,  1479,  1483,  1485,  1487,  1491,  1495,
    1497,  1500,  1505,  1510,  1513,  1517,  1523,  1529,  1531,  1533,
    1543,  1553,  1555,  1558,  1563,  1568,  1573,  1576,  1579,  1583,
    1585,  1589,  1596,  1599,  1600,  1604,  1608,  1613,  1618,  1623,
    1628,  1632,  1635,  1637,  1639,  1640,  1642,  1644,  1645,  1647,
    1653,  1655,  1656,  1658,  1659,  1663,  1665,  1669,  1674,  1678,
    1680,  1682,  1683,  1686,  1689,  1690,  1693,  1696,  1698,  1700,
    1702,  1703,  1706,  1711,  1717,  1722,  1725,  1729,  1731,  1733,
    1735,  1737,  1740,  1743,  1745,  1747,  1749,  1751,  1753,  1755,
    1759,  1760,  1762,  1766,  1768,  1770,  1773,  1776,  1777,  1779,
    1783,  1785,  1786,  1788,  1791,  1795,  1798,  1803,  1806,  1810,
    1813,  1814,  1816,  1819,  1820,  1825,  1831,  1834,  1835,  1837,
    1841,  1844,  1848,  1851,  1855,  1858,  1862,  1864,  1869,  1873,
    1878,  1884,  1889,  1895,  1900,  1906,  1909,  1914,  1916,  1918,
    1919,  1921,  1926,  1932,  1937,  1938,  1941,  1944,  1947,  1949,
    1951,  1952,  1957,  1960,  1962,  1965,  1968,  1973,  1980,  1985,
    1986,  1989,  1996,  1999,  2001,  2005,  2010,  2011,  2014,  2015,
    2018,  2019,  2021,  2025,  2029,  2032,  2033,  2036,  2040,  2046,
    2053,  2056,  2060,  2064,  2069,  2070,  2072,  2074,  2076,  2078,
    2080,  2083,  2088,  2090,  2092,  2094,  2096,  2099,  2103,  2107,
    2108,  2110,  2112,  2114,  2116,  2118,  2121,  2124,  2127,  2130,
    2133,  2135,  2139,  2140,  2142,  2144,  2146,  2148,  2154,  2157,
    2159,  2161,  2163,  2165,  2170,  2172,  2175,  2178,  2180,  2184,
    2188,  2191,  2193,  2194,  2200,  2203,  2209,  2212,  2214,  2218,
    2222,  2223,  2225,  2227,  2229,  2231,  2233,  2235,  2239,  2243,
    2247,  2251,  2255,  2259,  2263,  2264,  2266,  2271,  2273,  2277,
    2281,  2287,  2290,  2293,  2297,  2301,  2305,  2309,  2313,  2317,
    2321,  2325,  2329,  2333,  2337,  2341,  2345,  2348,  2351,  2355,
    2359,  2362,  2365,  2369,  2375,  2380,  2387,  2391,  2397,  2402,
    2409,  2414,  2421,  2427,  2435,  2439,  2442,  2447,  2451,  2454,
    2458,  2462,  2467,  2471,  2476,  2480,  2485,  2491,  2498,  2505,
    2513,  2520,  2528,  2535,  2543,  2547,  2552,  2557,  2564,  2566,
    2568,  2572,  2575,  2578,  2582,  2586,  2590,  2594,  2598,  2602,
    2606,  2610,  2614,  2618,  2622,  2626,  2630,  2633,  2636,  2642,
    2649,  2656,  2664,  2666,  2668,  2671,  2674,  2679,  2681,  2683,
    2685,  2688,  2691,  2695,  2701,  2708,  2717,  2724,  2731,  2736,
    2741,  2743,  2745,  2747,  2753,  2755,  2757,  2762,  2764,  2769,
    2771,  2776,  2778,  2783,  2785,  2787,  2789,  2791,  2793,  2795,
    2802,  2807,  2812,  2817,  2822,  2829,  2835,  2841,  2847,  2852,
    2859,  2864,  2869,  2874,  2880,  2881,  2887,  2888,  2891,  2892,
    2894,  2898,  2902,  2905,  2908,  2909,  2916,  2918,  2919,  2923,
    2924,  2927,  2930,  2931,  2933,  2938,  2941,  2944,  2947,  2950,
    2953,  2958,  2962,  2968,  2970,  2972,  2974,  2976,  2978,  2980,
    2982,  2984,  2986,  2988,  2990,  2992,  2994,  2996,  2998,  3000,
    3002,  3004,  3009,  3011,  3016,  3018,  3023,  3025,  3028,  3030,
    3033,  3035,  3039,  3041,  3045,  3047,  3051,  3053,  3057,  3061,
    3063,  3067,  3071,  3072,  3074,  3076,  3078,  3080,  3082,  3084,
    3086,  3088,  3093,  3097,  3100,  3104,  3105,  3109,  3113,  3116,
    3119,  3121,  3122,  3125,  3128,  3132,  3135,  3137,  3139,  3143,
    3149,  3151,  3154,  3159,  3162,  3163,  3165,  3166,  3168,  3171,
    3174,  3177,  3181,  3187,  3189,  3190,  3192,  3195,  3196,  3199,
    3201,  3202,  3204,  3205,  3207,  3211,  3215,  3218,  3220,  3222,
    3224,  3228,  3230,  3233,  3235,  3239,  3241,  3243,  3245,  3248,
    3250,  3252,  3254,  3256,  3258,  3261,  3268,  3271,  3275,  3281,
    3288,  3290,  3292,  3294,  3296,  3298,  3300,  3302,  3304,  3306,
    3308,  3310,  3312,  3315,  3318,  3322,  3326,  3327,  3329,  3331,
    3333,  3335,  3337,  3339,  3345,  3349,  3350,  3352,  3354,  3356,
    3358,  3363,  3371,  3374,  3375,  3377,  3379,  3381,  3383,  3397,
    3414,  3416,  3419,  3420,  3422,  3423,  3425,  3426,  3429,  3430,
    3432,  3433,  3440,  3449,  3456,  3465,  3472,  3481,  3483,  3486,
    3491,  3495,  3501,  3503,  3504,  3506,  3508,  3509,  3511,  3513,
    3515,  3517,  3519,  3521,  3523,  3525,  3527,  3529,  3531,  3533,
    3537,  3539,  3541,  3543,  3545,  3547,  3549,  3552,  3554,  3556,
    3559,  3563,  3567,  3569,  3573,  3577,  3580,  3584,  3588,  3592,
    3596,  3598,  3600,  3602,  3604,  3608,  3614,  3616,  3618,  3620,
    3622,  3626,  3629,  3631,  3636,  3642,  3648,  3653,  3660,  3662,
    3664,  3666,  3668,  3670,  3672,  3673,  3675,  3679,  3681,  3682,
    3690,  3692,  3695,  3699,  3702,  3703,  3706,  3707,  3710,  3715,
    3718,  3720,  3722,  3724,  3727,  3731,  3734,  3738,  3743,  3746,
    3748,  3750,  3752,  3756,  3766,  3778,  3791,  3806,  3810,  3815,
    3820,  3821,  3829,  3840,  3843,  3847,  3848,  3853,  3855,  3857,
    3859,  3861,  3863,  3865,  3867,  3869,  3871,  3873,  3875,  3877,
    3879,  3881,  3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,
    3899,  3901,  3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,
    3919,  3921,  3923,  3925,  3927,  3929,  3931,  3933,  3935,  3937,
    3939,  3941,  3943,  3945,  3947,  3949,  3951,  3953,  3955,  3957,
    3959,  3961,  3963,  3965,  3967,  3969,  3971,  3973,  3975,  3977,
    3979,  3981,  3983,  3985,  3987,  3989,  3991,  3993,  3995,  3997,
    3999,  4001,  4003,  4005,  4007,  4009,  4011,  4013,  4015,  4017,
    4019,  4021,  4023,  4025,  4027,  4029,  4031,  4033,  4035,  4037,
    4039,  4041,  4043,  4045,  4047,  4049,  4051,  4053,  4055,  4057,
    4059,  4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,  4077,
    4079,  4081,  4083,  4085,  4087,  4089,  4091,  4093,  4095,  4097,
    4099,  4101,  4103,  4105,  4107,  4109,  4111,  4113,  4115,  4117,
    4119,  4121,  4123,  4125,  4127,  4129,  4131,  4133,  4135,  4137,
    4139,  4141,  4143,  4145,  4147,  4149,  4151,  4153,  4155,  4157,
    4159,  4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,  4177,
    4179,  4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,
    4199,  4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,
    4219,  4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,
    4239,  4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,
    4259,  4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,
    4279,  4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,
    4299,  4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,
    4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,
    4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,
    4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,
    4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,
    4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,
    4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,
    4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,
    4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,
    4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,
    4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,
    4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,
    4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,
    4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,
    4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,
    4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,
    4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,
    4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,
    4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,
    4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,
    4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,
    4719,  4721,  4723,  4725,  4727,  4729
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     481,     0,    -1,   482,    -1,   482,   476,   483,    -1,   483,
      -1,   774,    -1,   521,    -1,   484,    -1,   804,    -1,   775,
      -1,   585,    -1,   813,    -1,   531,    -1,   764,    -1,   517,
      -1,   530,    -1,   495,    -1,   800,    -1,   578,    -1,   519,
      -1,   776,    -1,   767,    -1,   498,    -1,   793,    -1,   516,
      -1,   761,    -1,   496,    -1,   602,    -1,   528,    -1,   584,
      -1,   795,    -1,   805,    -1,   787,    -1,   808,    -1,   811,
      -1,    -1,    28,   382,   655,   492,    -1,    28,   382,   181,
     147,   655,   492,    -1,    28,   190,   746,   492,    -1,    28,
     190,   181,   147,   746,   492,    -1,    28,   349,   746,   492,
      -1,    28,   349,   181,   147,   746,   492,    -1,    28,   429,
     746,   492,    -1,    28,   429,   181,   147,   746,   492,    -1,
     487,    -1,   485,   487,    -1,   355,   111,   690,    -1,   132,
     111,    -1,   328,    -1,   328,   523,   524,    -1,   355,   525,
      -1,   355,   168,   577,    -1,   491,    -1,   488,   477,   491,
      -1,    22,   556,    -1,    22,   181,   253,   147,   556,    -1,
      22,    73,   556,    -1,    22,    73,   181,   253,   147,   556,
      -1,    28,   497,   754,   486,    -1,    28,   497,   754,   132,
     253,   258,    -1,    28,   497,   754,   355,   253,   258,    -1,
      28,   497,   754,   355,   371,   527,    -1,    28,   497,   754,
     355,   544,    -1,    28,   497,   754,   327,   544,    -1,    28,
     497,   754,   355,   374,   754,    -1,    28,   497,   754,    22,
     168,   577,    35,   180,   534,    -1,    28,   497,   754,   485,
      -1,    28,   497,   754,   132,   180,    -1,    28,   497,   754,
     132,   180,   181,   147,    -1,   132,   497,   181,   147,   754,
     582,    -1,   132,   497,   754,   582,    -1,    28,   497,   754,
     494,   403,   667,   666,   490,    -1,    28,   497,   754,   493,
      -1,    22,   546,    -1,    28,    83,   748,   532,    -1,   420,
      83,   748,    -1,   132,    83,   181,   147,   748,   582,    -1,
     132,    83,   748,   582,    -1,   355,   233,    -1,   355,   413,
      -1,   355,   544,    -1,   327,   544,    -1,   493,    -1,   417,
     690,    -1,    -1,   539,    -1,   355,   539,    -1,    22,   539,
      -1,   132,   554,    -1,   489,    -1,   492,   477,   489,    -1,
     272,   473,   488,   474,    -1,   355,   104,    -1,    -1,   107,
     748,    -1,   107,   298,   748,    -1,   107,    26,    -1,   107,
     298,    26,    -1,    28,   341,   748,   323,   393,   748,    -1,
      28,   382,   655,   323,   393,   748,    -1,    28,   382,   181,
     147,   655,   323,   393,   748,    -1,    28,   349,   746,   323,
     393,   748,    -1,    28,   349,   181,   147,   746,   323,   393,
     748,    -1,    28,   429,   746,   323,   393,   748,    -1,    28,
     429,   181,   147,   746,   323,   393,   748,    -1,    28,   190,
     746,   323,   393,   748,    -1,    28,   190,   181,   147,   746,
     323,   393,   748,    -1,    28,   382,   655,   323,   497,   748,
     393,   748,    -1,    28,   382,   181,   147,   655,   323,   497,
     748,   393,   748,    -1,    28,   382,   655,   323,    83,   748,
     393,   748,    -1,    28,   382,   181,   147,   655,   323,    83,
     748,   393,   748,    -1,    73,    -1,    -1,   502,   200,   206,
     500,   499,   505,   507,    -1,   602,    -1,   281,   508,   422,
     602,    -1,   473,   512,   474,   602,    -1,   473,   512,   474,
     281,   508,   422,   602,    -1,   111,   423,    -1,   746,    -1,
     746,    35,   754,    -1,   473,   514,   474,   663,    -1,   268,
      83,   748,    -1,    -1,   607,    -1,    -1,   754,   740,    -1,
     515,   462,   690,    -1,   473,   509,   474,   462,   690,    -1,
     268,    81,   501,   128,   415,   355,   513,   663,    -1,   268,
      81,   501,   128,   254,    -1,    -1,   754,   510,   511,   620,
     621,    -1,   695,   510,   511,   620,   621,    -1,   473,   690,
     474,   510,   511,   620,   621,    -1,   330,   743,    -1,    -1,
     416,    -1,   381,    -1,   515,    -1,   509,   477,   515,    -1,
      71,   756,    -1,    -1,   756,    -1,    -1,   503,    -1,   512,
     477,   503,    -1,   504,    -1,   513,   477,   504,    -1,   506,
      -1,   514,   477,   506,    -1,   754,   740,    -1,   295,   754,
      -1,   295,   754,   462,   792,    -1,   295,   754,   473,   718,
     474,    -1,    90,   576,   349,   746,   518,    -1,    90,   576,
     349,   181,   253,   147,   746,   518,    -1,   522,    -1,    -1,
     146,   748,   520,    -1,    90,   576,   382,   815,    35,   146,
     748,   520,   814,    -1,    90,   576,   382,   181,   253,   147,
     815,    35,   146,   748,   520,   814,    -1,   473,   717,   474,
      -1,    -1,    28,   349,   746,   522,    -1,    28,   349,   181,
     147,   746,   522,    -1,   525,    -1,   522,   525,    -1,   436,
      -1,   459,    -1,    -1,     4,    -1,   464,     4,    -1,   465,
       4,    -1,   527,    -1,    35,   669,    -1,    54,   524,    -1,
     103,    -1,   251,   103,    -1,   189,   526,   524,    -1,   237,
     524,    -1,   240,   524,    -1,   251,   237,    -1,   251,   240,
      -1,   282,    53,   756,    -1,   349,   244,   756,    -1,   369,
     523,   524,    -1,   328,    -1,   328,   523,   524,    -1,    53,
      -1,    -1,   752,    -1,   464,   752,    -1,   465,   752,    -1,
      18,   529,    -1,    46,   529,    -1,   369,   529,    -1,    77,
     529,    -1,   138,   529,    -1,   335,   529,    -1,   439,    -1,
     395,    -1,    -1,    90,   576,   382,   746,   473,   563,   474,
     551,   543,    -1,    90,   576,   382,   181,   253,   147,   746,
     473,   563,   474,   551,   543,    -1,    90,   576,   575,   309,
     746,   268,   746,   473,   164,   754,   317,   746,   477,   393,
     754,   317,   746,   474,    -1,    -1,   532,   555,    -1,   570,
      -1,   819,    -1,   714,    -1,   524,    -1,   753,    -1,   252,
      -1,   473,   522,   474,    -1,    -1,   753,    -1,   251,    21,
      -1,   329,    -1,    56,    -1,   355,   258,    -1,   355,   111,
      -1,    83,   748,   538,    -1,   538,    -1,   550,    -1,    71,
     756,    -1,   253,   258,    -1,   258,    -1,   410,   562,    -1,
     301,   212,   562,    -1,    65,   473,   690,   474,   545,    -1,
     111,   691,    -1,   168,   577,    35,   180,   534,    -1,   317,
     746,   565,   573,   541,    -1,   554,   535,    -1,   268,   415,
     536,    -1,   540,    -1,   567,    -1,   540,   567,    -1,   567,
     540,    -1,    -1,   272,   473,   557,   474,    -1,    -1,   268,
      77,   132,    -1,   268,    77,   116,   338,    -1,   268,    77,
     300,   338,    -1,    -1,   473,   548,   474,    -1,   251,   192,
      -1,    -1,    83,   748,   571,    -1,   571,    -1,    76,    -1,
      84,    -1,   112,    -1,   180,    -1,   191,    -1,   371,    -1,
     374,    -1,    26,    -1,   568,    -1,   548,   477,   568,    -1,
     417,   190,   559,    -1,   113,    -1,   253,   113,    -1,   194,
     114,    -1,   194,   183,    -1,   436,   544,    -1,   436,   266,
      -1,   438,   266,    -1,    -1,   473,   558,   474,    -1,   553,
     188,   547,    -1,   553,   144,   547,    -1,    -1,   760,    -1,
     253,   113,    -1,   113,    -1,   194,   183,    -1,   194,   114,
      -1,   253,   419,    -1,   251,   192,    -1,   754,   667,   542,
     566,    -1,   164,   754,    -1,   393,   754,    -1,   539,    -1,
     557,   477,   539,    -1,   561,    -1,   558,   477,   561,    -1,
     754,    -1,   556,    -1,   574,    -1,   546,    -1,   760,   462,
     533,    -1,   760,    -1,   436,   552,    -1,    -1,   572,    -1,
      -1,   754,    -1,   473,   569,   474,    -1,    -1,   566,   537,
      -1,    -1,   268,   116,   536,    -1,   760,   462,   533,    -1,
     760,    -1,   760,   475,   760,   462,   533,    -1,   760,   475,
     760,    -1,   564,    -1,   569,   477,   564,    -1,   667,    -1,
     755,   757,   468,   403,    -1,   356,   755,   757,   468,   403,
      -1,    65,   473,   690,   474,   532,    -1,   410,   473,   569,
     474,   562,   532,    -1,   410,   549,   532,    -1,   301,   212,
     473,   569,   474,   562,   532,    -1,   301,   212,   549,   532,
      -1,   161,   212,   473,   569,   474,   317,   746,   565,   573,
     541,   532,    -1,   560,    -1,   572,   477,   560,    -1,   235,
     165,    -1,   235,   286,    -1,   235,   361,    -1,    -1,   223,
     746,   553,    -1,   407,    -1,   124,    -1,   348,    -1,   290,
      -1,    -1,   388,    -1,   386,    -1,   227,   388,    -1,   227,
     386,    -1,   169,   388,    -1,   169,   386,    -1,   413,    -1,
      -1,    29,    -1,    53,   111,    -1,   132,   579,   181,   147,
     581,   582,    -1,   132,   579,   581,   582,    -1,   132,   580,
     181,   147,   747,   582,    -1,   132,   580,   747,   582,    -1,
     132,   583,   748,   268,   756,   582,    -1,   132,   583,   181,
     147,   748,   268,   756,   582,    -1,   382,    -1,   349,    -1,
     429,    -1,   236,   429,    -1,   190,    -1,   161,   382,    -1,
      72,    -1,    87,    -1,   371,    -1,   389,   344,   285,    -1,
     389,   344,   123,    -1,   389,   344,   387,    -1,   389,   344,
      80,    -1,    20,   238,    -1,   141,   398,    -1,   149,    -1,
     161,   104,   440,    -1,   307,    -1,   341,    -1,   352,    -1,
     756,    -1,   581,   477,   756,    -1,    56,    -1,   329,    -1,
      -1,   293,    -1,   339,    -1,   398,    -1,   502,   415,   801,
     355,   513,   645,   802,   507,    -1,    88,   597,   746,   565,
     595,   586,   591,   600,   587,   523,   592,    -1,    88,   473,
     763,   474,   393,   591,   600,   523,   592,    -1,   164,    -1,
     393,    -1,   589,   118,   753,    -1,    -1,   599,    -1,   588,
     477,   599,    -1,   417,    -1,    -1,    35,    -1,    -1,   306,
      -1,    -1,   596,    -1,   473,   601,   474,    -1,   784,    -1,
     524,    -1,   466,    -1,   473,   588,   474,    -1,    -1,   760,
     593,    -1,   436,   266,    -1,    -1,   596,   598,    -1,    -1,
      49,    -1,    -1,    49,    -1,   266,    -1,   163,    -1,   117,
     590,   753,    -1,   258,   590,   753,    -1,    92,    -1,   177,
      -1,   308,   590,   753,    -1,   140,   590,   753,    -1,   160,
     308,   569,    -1,   160,   308,   466,    -1,   160,   253,   258,
     569,    -1,   160,   258,   569,    -1,   136,   753,    -1,   784,
      -1,   753,    -1,   372,    -1,   373,    -1,   594,    -1,   601,
     477,   594,    -1,   604,    -1,   603,    -1,   473,   604,   474,
      -1,   473,   603,   474,    -1,   606,    -1,   605,   617,    -1,
     605,   616,   637,   623,    -1,   605,   616,   622,   638,    -1,
     607,   605,    -1,   607,   605,   617,    -1,   607,   605,   616,
     637,   623,    -1,   607,   605,   616,   622,   638,    -1,   606,
      -1,   603,    -1,   347,   615,   742,   610,   645,   663,   632,
     636,   699,    -1,   347,   614,   743,   610,   645,   663,   632,
     636,   699,    -1,   644,    -1,   382,   655,    -1,   605,   409,
     613,   605,    -1,   605,   204,   613,   605,    -1,   605,   142,
     613,   605,    -1,   436,   608,    -1,   459,   608,    -1,   436,
     315,   608,    -1,   609,    -1,   608,   477,   609,    -1,   748,
     758,    35,   473,   763,   474,    -1,   206,   611,    -1,    -1,
     388,   612,   746,    -1,   386,   612,   746,    -1,   227,   388,
     612,   746,    -1,   227,   386,   612,   746,    -1,   169,   388,
     612,   746,    -1,   169,   386,   612,   746,    -1,   413,   612,
     746,    -1,   382,   746,    -1,   746,    -1,   382,    -1,    -1,
      26,    -1,   127,    -1,    -1,   127,    -1,   127,   268,   473,
     717,   474,    -1,    26,    -1,    -1,   617,    -1,    -1,   274,
      53,   618,    -1,   619,    -1,   618,   477,   619,    -1,   690,
     417,   714,   621,    -1,   690,   620,   621,    -1,    36,    -1,
     120,    -1,    -1,   458,   156,    -1,   458,   216,    -1,    -1,
     624,   625,    -1,   625,   624,    -1,   624,    -1,   625,    -1,
     622,    -1,    -1,   224,   626,    -1,   224,   626,   477,   627,
      -1,   154,   631,   628,   630,   269,    -1,   154,   631,   630,
     269,    -1,   265,   627,    -1,   265,   628,   630,    -1,   690,
      -1,    26,    -1,   690,    -1,   692,    -1,   464,   629,    -1,
     465,   629,    -1,   752,    -1,     4,    -1,   337,    -1,   338,
      -1,   156,    -1,   250,    -1,   173,    53,   633,    -1,    -1,
     634,    -1,   633,   477,   634,    -1,   690,    -1,   635,    -1,
     473,   474,    -1,   176,   690,    -1,    -1,   639,    -1,   159,
     311,   269,    -1,   637,    -1,    -1,   640,    -1,   639,   640,
      -1,   641,   642,   643,    -1,   159,   415,    -1,   159,   251,
     212,   415,    -1,   159,   358,    -1,   159,   212,   358,    -1,
     263,   745,    -1,    -1,   257,    -1,   362,   232,    -1,    -1,
     423,   473,   717,   474,    -1,   644,   477,   473,   717,   474,
      -1,   164,   646,    -1,    -1,   647,    -1,   646,   477,   647,
      -1,   655,   650,    -1,   655,   650,   656,    -1,   658,   651,
      -1,   217,   658,   651,    -1,   603,   650,    -1,   217,   603,
     650,    -1,   648,    -1,   473,   648,   474,   649,    -1,   473,
     648,   474,    -1,   647,    91,   211,   647,    -1,   647,   652,
     211,   647,   654,    -1,   647,   211,   647,   654,    -1,   647,
     247,   652,   211,   647,    -1,   647,   247,   211,   647,    -1,
      35,   754,   473,   747,   474,    -1,    35,   754,    -1,   754,
     473,   747,   474,    -1,   754,    -1,   649,    -1,    -1,   649,
      -1,    35,   473,   664,   474,    -1,    35,   754,   473,   664,
     474,    -1,   754,   473,   664,   474,    -1,    -1,   165,   653,
      -1,   221,   653,    -1,   333,   653,    -1,   196,    -1,   277,
      -1,    -1,   417,   473,   747,   474,    -1,   268,   690,    -1,
     746,    -1,   746,   466,    -1,   269,   746,    -1,   269,   473,
     746,   474,    -1,   384,   750,   473,   717,   474,   657,    -1,
     324,   473,   690,   474,    -1,    -1,   695,   662,    -1,   338,
     164,   473,   660,   474,   662,    -1,   695,   661,    -1,   659,
      -1,   660,   477,   659,    -1,    35,   473,   664,   474,    -1,
      -1,   459,   275,    -1,    -1,   433,   690,    -1,    -1,   665,
      -1,   664,   477,   665,    -1,   754,   667,   666,    -1,    71,
     756,    -1,    -1,   669,   668,    -1,   356,   669,   668,    -1,
     669,    34,   471,   752,   472,    -1,   356,   669,    34,   471,
     752,   472,    -1,   669,    34,    -1,   356,   669,    34,    -1,
     668,   471,   472,    -1,   668,   471,   752,   472,    -1,    -1,
     671,    -1,   673,    -1,   675,    -1,   679,    -1,   685,    -1,
     686,   688,    -1,   686,   473,   752,   474,    -1,   673,    -1,
     676,    -1,   680,    -1,   685,    -1,   755,   672,    -1,   755,
     757,   672,    -1,   473,   717,   474,    -1,    -1,   202,    -1,
     203,    -1,   363,    -1,    48,    -1,   312,    -1,   157,   674,
      -1,   131,   297,    -1,   109,   672,    -1,   108,   672,    -1,
     261,   672,    -1,    51,    -1,   473,   752,   474,    -1,    -1,
     677,    -1,   678,    -1,   677,    -1,   678,    -1,    50,   684,
     473,   717,   474,    -1,    50,   684,    -1,   681,    -1,   682,
      -1,   681,    -1,   682,    -1,   683,   473,   752,   474,    -1,
     683,    -1,    63,   684,    -1,    62,   684,    -1,   424,    -1,
     246,    63,   684,    -1,   246,    62,   684,    -1,   248,   684,
      -1,   426,    -1,    -1,   392,   473,   752,   474,   687,    -1,
     392,   687,    -1,   391,   473,   752,   474,   687,    -1,   391,
     687,    -1,   205,    -1,   459,   391,   456,    -1,   438,   391,
     456,    -1,    -1,   454,    -1,   242,    -1,   106,    -1,   179,
      -1,   239,    -1,   689,    -1,   454,   393,   242,    -1,   106,
     393,   179,    -1,   106,   393,   239,    -1,   106,   393,   689,
      -1,   179,   393,   239,    -1,   179,   393,   689,    -1,   239,
     393,   689,    -1,    -1,   345,    -1,   345,   473,   752,   474,
      -1,   692,    -1,   690,    11,   667,    -1,   690,    71,   756,
      -1,   690,    40,   391,   456,   690,    -1,   464,   690,    -1,
     465,   690,    -1,   690,   464,   690,    -1,   690,   465,   690,
      -1,   690,   466,   690,    -1,   690,   467,   690,    -1,   690,
     468,   690,    -1,   690,   469,   690,    -1,   690,   460,   690,
      -1,   690,   461,   690,    -1,   690,   462,   690,    -1,   690,
      15,   690,    -1,   690,    16,   690,    -1,   690,    17,   690,
      -1,   690,   713,   690,    -1,   713,   690,    -1,   690,   713,
      -1,   690,    32,   690,    -1,   690,   273,   690,    -1,   253,
     690,    -1,   457,   690,    -1,   690,   223,   690,    -1,   690,
     223,   690,   140,   690,    -1,   690,   457,   223,   690,    -1,
     690,   457,   223,   690,   140,   690,    -1,   690,   182,   690,
      -1,   690,   182,   690,   140,   690,    -1,   690,   457,   182,
     690,    -1,   690,   457,   182,   690,   140,   690,    -1,   690,
     360,   393,   690,    -1,   690,   360,   393,   690,   140,   690,
      -1,   690,   457,   360,   393,   690,    -1,   690,   457,   360,
     393,   690,   140,   690,    -1,   690,   208,   258,    -1,   690,
     209,    -1,   690,   208,   253,   258,    -1,   690,   253,   258,
      -1,   690,   256,    -1,   709,   279,   709,    -1,   690,   208,
     400,    -1,   690,   208,   253,   400,    -1,   690,   208,   152,
      -1,   690,   208,   253,   152,    -1,   690,   208,   411,    -1,
     690,   208,   253,   411,    -1,   690,   208,   127,   164,   690,
      -1,   690,   208,   253,   127,   164,   690,    -1,   690,   208,
     263,   473,   720,   474,    -1,   690,   208,   253,   263,   473,
     720,   474,    -1,   690,    47,   741,   691,    32,   690,    -1,
     690,   457,    47,   741,   691,    32,   690,    -1,   690,    47,
     379,   691,    32,   690,    -1,   690,   457,    47,   379,   691,
      32,   690,    -1,   690,   187,   730,    -1,   690,   457,   187,
     730,    -1,   690,   715,   710,   603,    -1,   690,   715,   710,
     473,   690,   474,    -1,   111,    -1,   692,    -1,   691,    11,
     667,    -1,   464,   691,    -1,   465,   691,    -1,   691,   464,
     691,    -1,   691,   465,   691,    -1,   691,   466,   691,    -1,
     691,   467,   691,    -1,   691,   468,   691,    -1,   691,   469,
     691,    -1,   691,   460,   691,    -1,   691,   461,   691,    -1,
     691,   462,   691,    -1,   691,    15,   691,    -1,   691,    16,
     691,    -1,   691,    17,   691,    -1,   691,   713,   691,    -1,
     713,   691,    -1,   691,   713,    -1,   691,   208,   127,   164,
     691,    -1,   691,   208,   253,   127,   164,   691,    -1,   691,
     208,   263,   473,   720,   474,    -1,   691,   208,   253,   263,
     473,   720,   474,    -1,   736,    -1,   751,    -1,   478,   740,
      -1,    10,   740,    -1,   473,   690,   474,   740,    -1,   731,
      -1,   694,    -1,   603,    -1,   603,   739,    -1,   147,   603,
      -1,   750,   473,   474,    -1,   750,   473,   718,   616,   474,
      -1,   750,   473,   425,   719,   616,   474,    -1,   750,   473,
     718,   477,   425,   719,   616,   474,    -1,   750,   473,    26,
     718,   616,   474,    -1,   750,   473,   127,   718,   616,   474,
      -1,   750,   473,   466,   474,    -1,   693,   697,   698,   702,
      -1,   696,    -1,   693,    -1,   696,    -1,    72,   159,   473,
     690,   474,    -1,    96,    -1,    99,    -1,    99,   473,   752,
     474,    -1,   100,    -1,   100,   473,   752,   474,    -1,   228,
      -1,   228,   473,   752,   474,    -1,   229,    -1,   229,   473,
     752,   474,    -1,    97,    -1,   101,    -1,   354,    -1,   416,
      -1,    95,    -1,    98,    -1,    59,   473,   690,    35,   667,
     474,    -1,   151,   473,   721,   474,    -1,   280,   473,   723,
     474,    -1,   294,   473,   725,   474,    -1,   378,   473,   726,
     474,    -1,   397,   473,   690,    35,   667,   474,    -1,   399,
     473,    52,   729,   474,    -1,   399,   473,   218,   729,   474,
      -1,   399,   473,   394,   729,   474,    -1,   399,   473,   729,
     474,    -1,   259,   473,   690,   477,   690,   474,    -1,    70,
     473,   717,   474,    -1,   172,   473,   717,   474,    -1,   220,
     473,   717,   474,    -1,   437,   173,   473,   617,   474,    -1,
      -1,   155,   473,   433,   690,   474,    -1,    -1,   435,   700,
      -1,    -1,   701,    -1,   700,   477,   701,    -1,   754,    35,
     703,    -1,   278,   703,    -1,   278,   754,    -1,    -1,   473,
     704,   705,   616,   706,   474,    -1,   754,    -1,    -1,   287,
      53,   717,    -1,    -1,   310,   707,    -1,   338,   707,    -1,
      -1,   708,    -1,    47,   708,    32,   708,    -1,   405,   296,
      -1,   405,   158,    -1,    94,   337,    -1,   690,   296,    -1,
     690,   158,    -1,   337,   473,   717,   474,    -1,   337,   473,
     474,    -1,   473,   717,   477,   690,   474,    -1,    33,    -1,
     365,    -1,    26,    -1,     8,    -1,   712,    -1,   464,    -1,
     465,    -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,
     460,    -1,   461,    -1,   462,    -1,    15,    -1,    16,    -1,
      17,    -1,     8,    -1,   270,   473,   716,   474,    -1,   711,
      -1,   270,   473,   716,   474,    -1,   711,    -1,   270,   473,
     716,   474,    -1,   223,    -1,   457,   223,    -1,   182,    -1,
     457,   182,    -1,   711,    -1,   754,   475,   716,    -1,   690,
      -1,   717,   477,   690,    -1,   719,    -1,   718,   477,   719,
      -1,   690,    -1,   759,    13,   690,    -1,   759,    14,   690,
      -1,   667,    -1,   720,   477,   667,    -1,   722,   164,   690,
      -1,    -1,     3,    -1,   454,    -1,   242,    -1,   106,    -1,
     179,    -1,   239,    -1,   345,    -1,   753,    -1,   690,   724,
     727,   728,    -1,   690,   724,   727,    -1,   291,   690,    -1,
     691,   187,   691,    -1,    -1,   690,   727,   728,    -1,   690,
     728,   727,    -1,   690,   727,    -1,   690,   728,    -1,   717,
      -1,    -1,   164,   690,    -1,   159,   690,    -1,   690,   164,
     717,    -1,   164,   717,    -1,   717,    -1,   603,    -1,   473,
     717,   474,    -1,    58,   735,   732,   734,   138,    -1,   733,
      -1,   732,   733,    -1,   432,   690,   390,   690,    -1,   134,
     690,    -1,    -1,   690,    -1,    -1,   754,    -1,   754,   739,
      -1,   475,   749,    -1,   475,   466,    -1,   471,   690,   472,
      -1,   471,   738,   479,   738,   472,    -1,   690,    -1,    -1,
     737,    -1,   739,   737,    -1,    -1,   740,   737,    -1,    39,
      -1,    -1,   743,    -1,    -1,   744,    -1,   743,   477,   744,
      -1,   690,    35,   760,    -1,   690,     3,    -1,   690,    -1,
     466,    -1,   746,    -1,   745,   477,   746,    -1,   754,    -1,
     754,   739,    -1,   748,    -1,   747,   477,   748,    -1,   754,
      -1,   760,    -1,   755,    -1,   754,   739,    -1,   752,    -1,
       4,    -1,   753,    -1,     6,    -1,     7,    -1,   750,   753,
      -1,   750,   473,   718,   616,   474,   753,    -1,   670,   753,
      -1,   686,   753,   688,    -1,   686,   473,   752,   474,   753,
      -1,   686,   473,   478,   474,   478,   688,    -1,   400,    -1,
     152,    -1,   258,    -1,     9,    -1,     5,    -1,     3,    -1,
     816,    -1,   817,    -1,     3,    -1,   816,    -1,   818,    -1,
     754,    -1,   754,   757,    -1,   475,   749,    -1,   757,   475,
     749,    -1,   473,   747,   474,    -1,    -1,   755,    -1,     3,
      -1,   816,    -1,   817,    -1,   818,    -1,   819,    -1,   298,
     748,   762,    35,   763,    -1,   473,   720,   474,    -1,    -1,
     602,    -1,   498,    -1,   584,    -1,   800,    -1,    90,   341,
     754,   765,    -1,    90,   341,   181,   253,   147,   754,   765,
      -1,   765,   766,    -1,    -1,   530,    -1,   767,    -1,   517,
      -1,   811,    -1,    90,   773,   190,   770,   771,   268,   746,
     769,   473,   514,   474,   772,   663,    -1,    90,   773,   190,
     770,   181,   253,   147,   559,   268,   746,   769,   473,   514,
     474,   772,   663,    -1,   754,    -1,   417,   768,    -1,    -1,
      79,    -1,    -1,   559,    -1,    -1,   436,   544,    -1,    -1,
     410,    -1,    -1,    28,   382,   655,   355,   341,   748,    -1,
      28,   382,   181,   147,   655,   355,   341,   748,    -1,    28,
     349,   746,   355,   341,   748,    -1,    28,   349,   181,   147,
     746,   355,   341,   748,    -1,    28,   429,   746,   355,   341,
     748,    -1,    28,   429,   181,   147,   746,   355,   341,   748,
      -1,    66,    -1,   148,   779,    -1,   148,   783,   777,   779,
      -1,   148,   427,   779,    -1,   148,   473,   782,   474,   779,
      -1,   427,    -1,    -1,   784,    -1,   524,    -1,    -1,   602,
      -1,   498,    -1,   584,    -1,   800,    -1,   813,    -1,     3,
      -1,   816,    -1,   817,    -1,   818,    -1,   780,    -1,   753,
      -1,   785,    -1,   782,   477,   785,    -1,    31,    -1,    30,
      -1,   400,    -1,   152,    -1,   268,    -1,   781,    -1,   786,
     778,    -1,   780,    -1,   783,    -1,   355,   788,    -1,   355,
     227,   788,    -1,   355,   353,   788,    -1,   789,    -1,   810,
     164,    94,    -1,   391,   456,   791,    -1,   341,   753,    -1,
     810,   393,   792,    -1,   810,   462,   792,    -1,   810,   393,
     111,    -1,   810,   462,   111,    -1,   784,    -1,   524,    -1,
     753,    -1,     3,    -1,   686,   753,   688,    -1,   686,   473,
     752,   474,   753,    -1,   524,    -1,   111,    -1,   227,    -1,
     790,    -1,   792,   477,   790,    -1,   226,   794,    -1,   753,
      -1,   418,   797,   799,   777,    -1,   418,   797,   799,   777,
     746,    -1,   418,   797,   799,   777,   804,    -1,   418,   473,
     798,   474,    -1,   418,   473,   798,   474,   746,   758,    -1,
     783,    -1,   427,    -1,   163,    -1,   165,    -1,     3,    -1,
     165,    -1,    -1,   796,    -1,   798,   477,   796,    -1,   163,
      -1,    -1,   502,   116,   164,   801,   803,   802,   507,    -1,
     655,    -1,   655,   754,    -1,   655,    35,   754,    -1,   433,
     690,    -1,    -1,   417,   646,    -1,    -1,   783,   777,    -1,
     783,   777,   746,   758,    -1,   327,   807,    -1,   810,    -1,
      26,    -1,   806,    -1,   391,   456,    -1,   395,   210,   222,
      -1,   809,   810,    -1,   809,   391,   456,    -1,   809,   395,
     210,   222,    -1,   809,    26,    -1,   359,    -1,   121,    -1,
     754,    -1,   810,   475,   754,    -1,    90,   576,   429,   746,
     565,   772,    35,   602,   812,    -1,    90,   273,   325,   576,
     429,   746,   565,   772,    35,   602,   812,    -1,    90,   576,
     315,   429,   746,   473,   569,   474,   772,    35,   602,   812,
      -1,    90,   273,   325,   576,   315,   429,   746,   473,   569,
     474,   772,    35,   602,   812,    -1,   436,    65,   271,    -1,
     436,    57,    65,   271,    -1,   436,   227,    65,   271,    -1,
      -1,    90,   576,   382,   815,    35,   602,   814,    -1,    90,
     576,   382,   181,   253,   147,   815,    35,   602,   814,    -1,
     436,   104,    -1,   436,   251,   104,    -1,    -1,   746,   565,
     551,   543,    -1,    18,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,
      -1,    28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,
      -1,    41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,
      -1,    53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    60,    -1,    61,    -1,    64,    -1,    66,    -1,    67,
      -1,    68,    -1,    69,    -1,    74,    -1,    75,    -1,    76,
      -1,    77,    -1,    78,    -1,    80,    -1,    81,    -1,    82,
      -1,    84,    -1,    85,    -1,    86,    -1,    87,    -1,    88,
      -1,    89,    -1,    92,    -1,    93,    -1,    94,    -1,   102,
      -1,   103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,
      -1,   110,    -1,   112,    -1,   114,    -1,   115,    -1,   116,
      -1,   117,    -1,   118,    -1,   119,    -1,   121,    -1,   122,
      -1,   123,    -1,   125,    -1,   126,    -1,   129,    -1,   130,
      -1,   131,    -1,   132,    -1,   133,    -1,   135,    -1,   136,
      -1,   137,    -1,   139,    -1,   140,    -1,   141,    -1,   143,
      -1,   144,    -1,   145,    -1,   146,    -1,   148,    -1,   149,
      -1,   150,    -1,   153,    -1,   155,    -1,   156,    -1,   158,
      -1,   160,    -1,   162,    -1,   166,    -1,   167,    -1,   168,
      -1,   169,    -1,   171,    -1,   175,    -1,   177,    -1,   178,
      -1,   179,    -1,   180,    -1,   181,    -1,   183,    -1,   184,
      -1,   185,    -1,   186,    -1,   188,    -1,   189,    -1,   190,
      -1,   191,    -1,   192,    -1,   193,    -1,   195,    -1,   198,
      -1,   199,    -1,   200,    -1,   201,    -1,   207,    -1,   210,
      -1,   212,    -1,   213,    -1,   214,    -1,   215,    -1,   216,
      -1,   219,    -1,   222,    -1,   225,    -1,   226,    -1,   227,
      -1,   230,    -1,   231,    -1,   232,    -1,   233,    -1,   234,
      -1,   235,    -1,   236,    -1,   237,    -1,   238,    -1,   239,
      -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,
      -1,   245,    -1,   249,    -1,   250,    -1,   251,    -1,   254,
      -1,   255,    -1,   257,    -1,   260,    -1,   262,    -1,   263,
      -1,   264,    -1,   266,    -1,   267,    -1,   270,    -1,   271,
      -1,   272,    -1,   275,    -1,   278,    -1,   281,    -1,   282,
      -1,   283,    -1,   284,    -1,   285,    -1,   286,    -1,   287,
      -1,   288,    -1,   289,    -1,   292,    -1,   293,    -1,   295,
      -1,   296,    -1,   298,    -1,   299,    -1,   300,    -1,   302,
      -1,   303,    -1,   304,    -1,   305,    -1,   306,    -1,   307,
      -1,   308,    -1,   310,    -1,   311,    -1,   313,    -1,   314,
      -1,   315,    -1,   316,    -1,   318,    -1,   319,    -1,   320,
      -1,   321,    -1,   322,    -1,   323,    -1,   324,    -1,   325,
      -1,   326,    -1,   327,    -1,   328,    -1,   329,    -1,   331,
      -1,   332,    -1,   334,    -1,   335,    -1,   336,    -1,   338,
      -1,   339,    -1,   340,    -1,   341,    -1,   342,    -1,   343,
      -1,   344,    -1,   345,    -1,   346,    -1,   349,    -1,   350,
      -1,   351,    -1,   352,    -1,   353,    -1,   355,    -1,   357,
      -1,   358,    -1,   359,    -1,   361,    -1,   362,    -1,   364,
      -1,   366,    -1,   367,    -1,   368,    -1,   369,    -1,   370,
      -1,   371,    -1,   372,    -1,   373,    -1,   374,    -1,   375,
      -1,   376,    -1,   377,    -1,   380,    -1,   381,    -1,   383,
      -1,   385,    -1,   386,    -1,   387,    -1,   388,    -1,   389,
      -1,   395,    -1,   396,    -1,   398,    -1,   401,    -1,   402,
      -1,   403,    -1,   404,    -1,   405,    -1,   406,    -1,   408,
      -1,   411,    -1,   412,    -1,   413,    -1,   414,    -1,   415,
      -1,   418,    -1,   419,    -1,   420,    -1,   421,    -1,   422,
      -1,   426,    -1,   428,    -1,   429,    -1,   430,    -1,   431,
      -1,   434,    -1,   437,    -1,   438,    -1,   439,    -1,   440,
      -1,   441,    -1,   442,    -1,   454,    -1,   455,    -1,   456,
      -1,    47,    -1,    48,    -1,    50,    -1,    51,    -1,    62,
      -1,    63,    -1,    70,    -1,   108,    -1,   109,    -1,   147,
      -1,   151,    -1,   157,    -1,   172,    -1,   174,    -1,   197,
      -1,   202,    -1,   203,    -1,   205,    -1,   220,    -1,   246,
      -1,   248,    -1,   252,    -1,   259,    -1,   261,    -1,   276,
      -1,   280,    -1,   294,    -1,   297,    -1,   312,    -1,   337,
      -1,   356,    -1,   363,    -1,   378,    -1,   391,    -1,   392,
      -1,   397,    -1,   399,    -1,   423,    -1,   424,    -1,   443,
      -1,   444,    -1,   445,    -1,   446,    -1,   447,    -1,   448,
      -1,   449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,
      -1,    43,    -1,    49,    -1,    72,    -1,    79,    -1,    91,
      -1,    98,    -1,   163,    -1,   165,    -1,   182,    -1,   196,
      -1,   208,    -1,   209,    -1,   211,    -1,   221,    -1,   223,
      -1,   247,    -1,   256,    -1,   277,    -1,   279,    -1,   333,
      -1,   360,    -1,   384,    -1,   427,    -1,    26,    -1,    30,
      -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,
      -1,    36,    -1,    39,    -1,    52,    -1,    58,    -1,    59,
      -1,    65,    -1,    71,    -1,    73,    -1,    83,    -1,    90,
      -1,    95,    -1,    96,    -1,    97,    -1,    99,    -1,   100,
      -1,   101,    -1,   111,    -1,   113,    -1,   120,    -1,   124,
      -1,   127,    -1,   128,    -1,   134,    -1,   138,    -1,   142,
      -1,   152,    -1,   154,    -1,   159,    -1,   161,    -1,   164,
      -1,   170,    -1,   173,    -1,   176,    -1,   187,    -1,   194,
      -1,   204,    -1,   206,    -1,   217,    -1,   218,    -1,   224,
      -1,   228,    -1,   229,    -1,   253,    -1,   258,    -1,   265,
      -1,   268,    -1,   269,    -1,   273,    -1,   274,    -1,   290,
      -1,   291,    -1,   301,    -1,   309,    -1,   317,    -1,   330,
      -1,   347,    -1,   348,    -1,   354,    -1,   365,    -1,   379,
      -1,   382,    -1,   390,    -1,   393,    -1,   394,    -1,   400,
      -1,   407,    -1,   409,    -1,   410,    -1,   416,    -1,   417,
      -1,   425,    -1,   432,    -1,   433,    -1,   435,    -1,   436,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   450,   450,   466,   478,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   518,     9,    18,    27,    36,
      45,    54,    63,    72,    85,    87,    93,    94,    99,   103,
     107,   118,   126,   130,   139,   148,   157,   166,   175,   184,
     192,   200,   209,   218,   227,   236,   253,   262,   271,   280,
     290,   303,   318,   327,   335,   350,   358,   368,   378,   385,
     392,   400,   407,   418,   419,   424,   428,   433,   438,   446,
     447,   452,   456,   457,     7,    13,    19,    25,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    38,    55,    56,    83,    84,
      85,    86,    87,    88,    92,    93,    98,   103,   104,   105,
     106,   107,   112,   119,   120,   121,   138,   145,   152,   162,
     172,   184,   193,   202,   221,   228,   233,   235,   237,   239,
     242,   247,   248,   252,   253,   254,   255,   260,   264,   265,
     270,   277,   282,   283,   284,   285,   286,   287,   288,   289,
     295,   296,   300,   305,   312,   319,   326,   338,   339,   340,
     341,   345,   350,   351,   352,   357,   362,   363,   364,   365,
     366,   367,   372,   391,   408,   429,   433,   440,   441,   445,
     449,   450,   451,   455,   459,   467,   468,   473,   474,   478,
     486,   487,   492,   493,   497,   502,   506,   510,   515,   523,
     524,   528,   529,   535,   546,   559,   573,   587,   601,   615,
     638,   642,   649,   653,   661,   666,   673,   682,   683,   684,
     685,   686,   688,   689,   690,   691,   692,   699,   706,   707,
     712,   713,     9,    19,    29,    39,    49,    59,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    90,    91,    92,    93,    94,    95,    96,   101,   102,
     107,   108,   109,   114,   115,   116,     7,     1,    30,    53,
      54,    59,    63,    68,    72,    80,    81,    85,    86,    91,
      92,    96,    97,   102,   103,   104,   105,   106,   111,   119,
     123,   128,   129,   134,   138,   143,   147,   151,   155,   159,
     163,   167,   171,   175,   179,   183,   187,   191,   195,   203,
     209,   210,   211,   216,   220,    47,    48,    52,    53,    68,
      69,    76,    84,    92,   100,   108,   116,   127,   128,   155,
     169,   184,   185,   204,   208,   212,   229,   236,   243,   253,
     254,   257,   269,   280,   288,   293,   298,   303,   308,   316,
     324,   329,   334,   341,   342,   346,   347,   348,   355,   356,
     360,   361,   365,   366,   370,   374,   375,   378,   387,   398,
     399,   400,   403,   404,   405,   409,   410,   411,   412,   416,
     417,   421,   423,   439,   441,   446,   449,   454,   455,   463,
     483,   484,   486,   491,   492,   496,   497,   500,   501,   526,
     527,   531,   532,   536,   537,   541,   554,   555,   559,   560,
     564,   565,   569,   570,   574,   585,   586,   587,   588,   592,
     593,   598,   599,   600,   609,   615,   633,   634,   638,   639,
     645,   650,   658,   665,   673,   708,   733,   737,   763,   767,
     779,   792,   806,   817,   832,   838,   843,   849,   856,   857,
     865,   869,   873,   879,   886,   891,   892,   893,   894,   898,
     899,   911,   912,   917,   924,   931,   938,   961,   974,   975,
     990,  1000,  1012,  1017,  1018,  1021,  1022,  1025,  1026,  1031,
    1032,  1037,  1041,  1047,  1068,  1076,  1088,  1093,  1100,  1105,
    1111,  1116,  1125,  1127,  1130,  1134,  1135,  1136,  1137,  1138,
    1139,  1144,  1164,  1165,  1166,  1167,  1178,  1184,  1192,  1193,
    1199,  1204,  1209,  1214,  1219,  1224,  1229,  1234,  1240,  1246,
    1252,  1259,  1281,  1290,  1294,  1302,  1306,  1314,  1326,  1347,
    1351,  1357,  1361,  1374,  1382,  1392,  1394,  1396,  1398,  1400,
    1402,  1407,  1408,  1415,  1424,  1432,  1441,  1452,  1460,  1461,
    1462,  1466,  1468,  1470,  1472,  1474,  1476,  1478,  1483,  1488,
    1494,  1502,  1507,  1514,  1521,  1525,  1529,  1565,  1566,  1568,
    1576,  1591,  1593,  1595,  1597,  1599,  1601,  1603,  1605,  1607,
    1609,  1611,  1613,  1615,  1617,  1620,  1622,  1624,  1627,  1629,
    1631,  1633,  1636,  1641,  1648,  1653,  1660,  1665,  1673,  1678,
    1687,  1695,  1703,  1711,  1729,  1737,  1745,  1753,  1761,  1769,
    1785,  1793,  1801,  1809,  1817,  1825,  1833,  1837,  1841,  1845,
    1849,  1857,  1865,  1873,  1881,  1901,  1923,  1934,  1941,  1966,
    1968,  1970,  1972,  1974,  1976,  1978,  1980,  1982,  1984,  1986,
    1988,  1990,  1992,  1994,  1996,  1998,  2000,  2002,  2004,  2008,
    2012,  2016,  2030,  2031,  2032,  2044,  2059,  2071,  2073,  2075,
    2086,  2110,  2123,  2127,  2133,  2140,  2147,  2157,  2164,  2192,
    2227,  2238,  2239,  2246,  2252,  2256,  2260,  2264,  2268,  2272,
    2276,  2280,  2284,  2288,  2292,  2296,  2300,  2304,  2308,  2312,
    2314,  2318,  2327,  2332,  2339,  2354,  2361,  2365,  2369,  2373,
    2377,  2384,  2392,  2407,  2408,  2412,  2413,  2421,  2422,  2426,
    2427,  2432,  2440,  2442,  2456,  2459,  2486,  2487,  2490,  2491,
    2502,  2520,  2527,  2536,  2553,  2598,  2606,  2614,  2622,  2630,
    2651,  2652,  2653,  2656,  2657,  2658,  2661,  2662,  2665,  2666,
    2667,  2668,  2669,  2670,  2671,  2672,  2673,  2674,  2675,  2676,
    2679,  2681,  2686,  2688,  2693,  2695,  2697,  2699,  2701,  2703,
    2717,  2719,  2723,  2727,  2734,  2738,  2744,  2748,  2757,  2768,
    2769,  2773,  2777,  2784,  2785,  2786,  2787,  2788,  2789,  2790,
    2791,  2801,  2805,  2812,  2819,  2820,  2836,  2840,  2845,  2849,
    2864,  2869,  2873,  2876,  2879,  2880,  2881,  2884,  2891,  2901,
    2915,  2916,  2920,  2931,  2932,  2935,  2936,  2939,  2943,  2950,
    2954,  2958,  2966,  2977,  2978,  2982,  2983,  2987,  2988,  2991,
    2992,  3002,  3003,  3007,  3008,  3011,  3027,  3035,  3043,  3065,
    3066,  3077,  3081,  3108,  3110,  3115,  3117,  3127,  3129,  3140,
    3144,  3148,  3152,  3156,  3165,  3172,  3204,  3208,  3214,  3222,
    3234,  3238,  3242,  3248,  3249,  3265,  3266,  3267,  3272,  3273,
    3274,  3277,  3278,  3281,  3283,  3288,  3289,  3292,  3300,  3301,
    3302,  3303,  3304,     7,    18,    19,    23,    24,    25,    26,
       7,    16,    34,    41,    46,    47,    48,    49,     8,    33,
      62,    66,    67,    72,    73,    78,    79,    83,    84,    89,
      90,     7,    16,    25,    34,    43,    52,     5,     9,    16,
      26,    33,    44,    45,    50,    51,    52,    57,    58,    59,
      60,    61,    65,    66,    67,    68,    73,    74,    79,    83,
      91,    92,    97,    98,    99,   105,   110,   118,   119,    10,
      16,    22,    32,    33,    41,    52,    64,    72,    80,    87,
      97,    99,   105,   109,   113,   128,   135,   136,   137,   141,
     142,     7,    16,     8,    22,    36,    48,    56,    70,    71,
      72,    73,    74,    87,    88,    93,    94,    98,    99,     7,
      21,    25,    32,    43,    44,    50,    51,     9,    19,     2,
       7,    14,    24,    25,    32,     3,     9,    15,    21,    29,
      29,    31,    32,     8,    21,    34,    52,    74,    75,    76,
      77,    11,    24,    41,    42,    43,    48,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DIRECTED", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P",
  "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR",
  "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION",
  "FUNCTIONS", "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GREATEST",
  "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEAST", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED",
  "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO",
  "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PKFK", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED",
  "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "PUBLICATION", "QUOTE", "RAI", "RANGE", "READ_P", "REAL",
  "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING",
  "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE",
  "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT", "RETURNING",
  "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW",
  "ROWS", "RULE", "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH",
  "SECOND_P", "SECURITY", "SELECT", "SELF", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM_P",
  "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P",
  "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNDIRECTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN",
  "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID",
  "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC",
  "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt", "CreateRAIStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptDirection",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "type_function_name", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "PrepareStmt",
  "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "show_or_describe", "var_name", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
      60,    62,    61,   715,    43,    45,    42,    47,    37,    94,
     716,    91,    93,    40,    41,    46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   480,   481,   482,   482,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   484,   484,   484,   484,
     484,   484,   484,   484,   485,   485,   486,   486,   487,   487,
     487,   487,   488,   488,   489,   489,   489,   489,   489,   489,
     489,   489,   489,   489,   489,   489,   489,   489,   489,   489,
     489,   489,   489,   489,   489,   489,   489,   489,   489,   489,
     489,   489,   489,   490,   490,   491,   491,   491,   491,   492,
     492,   493,   494,   494,   495,   495,   495,   495,   496,   496,
     496,   496,   496,   496,   496,   496,   496,   496,   496,   496,
     496,   497,   497,   498,   499,   499,   499,   499,   499,   500,
     500,   501,   501,   501,   502,   502,   503,   504,   504,   505,
     505,   505,   506,   506,   506,   507,   507,   508,   508,   509,
     509,   510,   510,   511,   511,   512,   512,   513,   513,   514,
     514,   515,   516,   516,   516,   517,   517,   518,   518,   519,
     519,   519,   520,   520,   521,   521,   522,   522,   523,   523,
     523,   524,   524,   524,   524,   525,   525,   525,   525,   525,
     525,   525,   525,   525,   525,   525,   525,   525,   525,   526,
     526,   527,   527,   527,   528,   528,   528,   528,   528,   528,
     529,   529,   529,   530,   530,   531,   532,   532,   533,   533,
     533,   533,   533,   533,   534,   534,   535,   536,   536,   536,
     536,   536,   537,   537,   537,   537,   538,   538,   538,   538,
     538,   538,   538,   538,   539,   540,   541,   541,   541,   541,
     541,   542,   542,   543,   543,   543,   543,   544,   545,   545,
     546,   546,   547,   547,   547,   547,   547,   547,   547,   547,
     548,   548,   549,   550,   550,   550,   550,   551,   551,   551,
     551,   552,   553,   553,   553,   554,   555,   555,   555,   555,
     555,   555,   556,   556,   556,   557,   557,   558,   558,   559,
     560,   560,   560,   561,   561,   562,   562,   563,   563,   564,
     565,   565,   566,   566,   567,   568,   568,   568,   568,   569,
     569,   570,   570,   570,   571,   571,   571,   571,   571,   571,
     572,   572,   573,   573,   573,   573,   574,   575,   575,   575,
     575,   575,   576,   576,   576,   576,   576,   576,   576,   576,
     577,   577,   578,   578,   578,   578,   578,   578,   579,   579,
     579,   579,   579,   579,   579,   579,   579,   579,   579,   579,
     579,   580,   580,   580,   580,   580,   580,   580,   581,   581,
     582,   582,   582,   583,   583,   583,   584,   585,   585,   586,
     586,   587,   587,   588,   588,   589,   589,   590,   590,   591,
     591,   592,   592,   593,   593,   593,   593,   593,   594,   595,
     595,   596,   596,   597,   597,   598,   598,   598,   598,   598,
     598,   598,   598,   598,   598,   598,   598,   598,   598,   599,
     600,   600,   600,   601,   601,   602,   602,   603,   603,   604,
     604,   604,   604,   604,   604,   604,   604,   605,   605,   606,
     606,   606,   606,   606,   606,   606,   607,   607,   607,   608,
     608,   609,   610,   610,   611,   611,   611,   611,   611,   611,
     611,   611,   611,   612,   612,   613,   613,   613,   614,   614,
     615,   615,   616,   616,   617,   618,   618,   619,   619,   620,
     620,   620,   621,   621,   621,   622,   622,   622,   622,   623,
     623,   624,   624,   624,   624,   625,   625,   626,   626,   627,
     628,   628,   628,   629,   629,   630,   630,   631,   631,   632,
     632,   633,   633,   634,   634,   635,   636,   636,   637,   637,
     638,   638,   639,   639,   640,   641,   641,   641,   641,   642,
     642,   643,   643,   643,   644,   644,   645,   645,   646,   646,
     647,   647,   647,   647,   647,   647,   647,   647,   648,   648,
     648,   648,   648,   648,   649,   649,   649,   649,   650,   650,
     651,   651,   651,   651,   651,   652,   652,   652,   652,   653,
     653,   654,   654,   655,   655,   655,   655,   656,   657,   657,
     658,   658,   659,   660,   660,   661,   661,   662,   662,   663,
     663,   664,   664,   665,   666,   666,   667,   667,   667,   667,
     667,   667,   668,   668,   668,   669,   669,   669,   669,   669,
     669,   669,   670,   670,   670,   670,   671,   671,   672,   672,
     673,   673,   673,   673,   673,   673,   673,   673,   673,   673,
     673,   674,   674,   675,   675,   676,   676,   677,   678,   679,
     679,   680,   680,   681,   682,   683,   683,   683,   683,   683,
     683,   684,   684,   685,   685,   685,   685,   686,   687,   687,
     687,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   689,   689,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   692,   692,   692,   692,   692,   692,   692,   692,
     692,   692,   693,   693,   693,   693,   693,   693,   693,   694,
     694,   695,   695,   696,   696,   696,   696,   696,   696,   696,
     696,   696,   696,   696,   696,   696,   696,   696,   696,   696,
     696,   696,   696,   696,   696,   696,   696,   696,   696,   696,
     696,   696,   696,   697,   697,   698,   698,   699,   699,   700,
     700,   701,   702,   702,   702,   703,   704,   704,   705,   705,
     706,   706,   706,   707,   707,   708,   708,   708,   708,   708,
     709,   709,   709,   710,   710,   710,   711,   711,   712,   712,
     712,   712,   712,   712,   712,   712,   712,   712,   712,   712,
     713,   713,   714,   714,   715,   715,   715,   715,   715,   715,
     716,   716,   717,   717,   718,   718,   719,   719,   719,   720,
     720,   721,   721,   722,   722,   722,   722,   722,   722,   722,
     722,   723,   723,   724,   725,   725,   726,   726,   726,   726,
     726,   726,   727,   728,   729,   729,   729,   730,   730,   731,
     732,   732,   733,   734,   734,   735,   735,   736,   736,   737,
     737,   737,   737,   738,   738,   739,   739,   740,   740,   741,
     741,   742,   742,   743,   743,   744,   744,   744,   744,   745,
     745,   746,   746,   747,   747,   748,   749,   750,   750,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   752,   753,   754,   754,   754,   755,   755,
     755,   756,   756,   757,   757,   758,   758,   759,   760,   760,
     760,   760,   760,   761,   762,   762,   763,   763,   763,   763,
     764,   764,   765,   765,   766,   766,   766,   766,   767,   767,
     768,   769,   769,   770,   770,   771,   771,   772,   772,   773,
     773,   774,   774,   774,   774,   774,   774,   775,   776,   776,
     776,   776,   777,   777,   778,   778,   778,   779,   779,   779,
     779,   779,   780,   780,   780,   780,   781,   781,   782,   782,
     783,   783,   784,   784,   784,   784,   785,   786,   786,   787,
     787,   787,   788,   788,   788,   788,   789,   789,   789,   789,
     790,   790,   791,   791,   791,   791,   791,   791,   791,   792,
     792,   793,   794,   795,   795,   795,   795,   795,   796,   796,
     796,   796,   796,   797,   797,   798,   798,   799,   799,   800,
     801,   801,   801,   802,   802,   803,   803,   804,   804,   805,
     806,   806,   807,   807,   807,   808,   808,   808,   808,   809,
     809,   810,   810,   811,   811,   811,   811,   812,   812,   812,
     812,   813,   813,   814,   814,   814,   815,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     6,     4,     6,
       4,     6,     4,     6,     1,     2,     3,     2,     1,     3,
       2,     3,     1,     3,     2,     5,     3,     6,     4,     6,
       6,     6,     5,     5,     6,     9,     4,     5,     7,     6,
       4,     8,     4,     2,     4,     3,     6,     4,     2,     2,
       2,     2,     1,     2,     0,     1,     2,     2,     2,     1,
       3,     4,     2,     0,     2,     3,     2,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    18,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     2,     5,     5,     2,     3,     1,     1,     2,     2,
       0,     4,     0,     3,     4,     4,     0,     3,     2,     0,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       0,     3,     3,     3,     0,     1,     2,     1,     2,     2,
       2,     2,     4,     2,     2,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     1,
       1,     0,     1,     1,     2,     2,     2,     2,     1,     0,
       1,     2,     6,     4,     6,     4,     6,     8,     1,     1,
       1,     2,     1,     2,     1,     1,     1,     3,     3,     3,
       3,     2,     2,     1,     3,     1,     1,     1,     1,     3,
       1,     1,     0,     1,     1,     1,     8,    11,     9,     1,
       1,     3,     0,     1,     3,     1,     0,     1,     0,     1,
       0,     1,     3,     1,     1,     1,     3,     0,     2,     2,
       0,     2,     0,     1,     0,     1,     1,     1,     3,     3,
       1,     1,     3,     3,     3,     3,     4,     3,     2,     1,
       1,     1,     1,     1,     3,     1,     1,     3,     3,     1,
       2,     4,     4,     2,     3,     5,     5,     1,     1,     9,
       9,     1,     2,     4,     4,     4,     2,     2,     3,     1,
       3,     6,     2,     0,     3,     3,     4,     4,     4,     4,
       3,     2,     1,     1,     0,     1,     1,     0,     1,     5,
       1,     0,     1,     0,     3,     1,     3,     4,     3,     1,
       1,     0,     2,     2,     0,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       0,     1,     3,     1,     1,     2,     2,     0,     1,     3,
       1,     0,     1,     2,     3,     2,     4,     2,     3,     2,
       0,     1,     2,     0,     4,     5,     2,     0,     1,     3,
       2,     3,     2,     3,     2,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     6,     4,     0,
       2,     6,     2,     1,     3,     4,     0,     2,     0,     2,
       0,     1,     3,     3,     2,     0,     2,     3,     5,     6,
       2,     3,     3,     4,     0,     1,     1,     1,     1,     1,
       2,     4,     1,     1,     1,     1,     2,     3,     3,     0,
       1,     1,     1,     1,     1,     2,     2,     2,     2,     2,
       1,     3,     0,     1,     1,     1,     1,     5,     2,     1,
       1,     1,     1,     4,     1,     2,     2,     1,     3,     3,
       2,     1,     0,     5,     2,     5,     2,     1,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     4,     1,     3,     3,
       5,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     3,     3,
       2,     2,     3,     5,     4,     6,     3,     5,     4,     6,
       4,     6,     5,     7,     3,     2,     4,     3,     2,     3,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     1,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     5,     6,
       6,     7,     1,     1,     2,     2,     4,     1,     1,     1,
       2,     2,     3,     5,     6,     8,     6,     6,     4,     4,
       1,     1,     1,     5,     1,     1,     4,     1,     4,     1,
       4,     1,     4,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     4,     4,     5,     0,     5,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     3,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     3,     2,     1,     1,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     3,     5,     6,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     5,     3,     0,     1,     1,     1,     1,
       4,     7,     2,     0,     1,     1,     1,     1,    13,    16,
       1,     2,     0,     1,     0,     1,     0,     2,     0,     1,
       0,     6,     8,     6,     8,     6,     8,     1,     2,     4,
       3,     5,     1,     0,     1,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     3,     3,     2,     3,     3,     3,     3,
       1,     1,     1,     1,     3,     5,     1,     1,     1,     1,
       3,     2,     1,     4,     5,     5,     4,     6,     1,     1,
       1,     1,     1,     1,     0,     1,     3,     1,     0,     7,
       1,     2,     3,     2,     0,     2,     0,     2,     4,     2,
       1,     1,     1,     2,     3,     2,     3,     4,     2,     1,
       1,     1,     3,     9,    11,    12,    14,     3,     4,     4,
       0,     7,    10,     2,     3,     0,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     125,   202,     0,  1041,  1040,   202,  1017,   202,   404,   339,
       0,  1110,     0,   202,     0,   125,     0,     0,     0,     0,
     202,   471,     0,  1109,   202,     0,  1084,     0,     0,     0,
       0,     0,     2,     4,     7,    16,    26,    22,     0,    24,
      14,    19,     6,    28,    15,    12,    18,    29,    10,    27,
     438,   425,   473,   437,   124,   441,    25,    13,    21,     5,
       9,    20,  1023,    32,    23,    30,    17,     8,    31,    33,
       0,    34,    11,   201,   200,   194,     0,     0,     0,     0,
       0,   195,   197,   403,   125,     0,     0,     0,     0,     0,
     333,   332,  1009,   338,   331,     0,   965,  1127,  1128,  1129,
    1130,  1131,  1132,  1133,  1134,    96,  1135,  1136,  1137,  1138,
    1139,  1140,  1141,  1142,  1143,  1144,  1145,  1411,  1412,  1413,
    1414,  1146,  1147,  1148,  1149,  1150,  1151,  1152,  1415,  1416,
    1153,  1154,  1155,  1156,  1157,  1417,  1158,  1159,  1160,  1161,
    1162,  1163,  1164,  1165,  1166,  1167,  1168,  1169,  1170,  1171,
    1172,  1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1418,
    1419,  1181,  1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,
    1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,  1199,
    1200,  1201,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1420,
    1209,  1210,  1211,  1421,  1212,  1213,  1214,  1422,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,  1222,  1423,  1424,  1223,  1224,
    1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,  1233,  1234,
    1235,  1236,  1237,  1238,  1239,  1425,  1240,  1241,  1242,  1243,
    1426,  1427,  1428,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    1251,  1429,  1252,  1253,  1254,  1255,  1256,  1257,  1258,  1259,
    1260,  1261,  1262,  1263,  1264,  1265,  1266,  1267,  1268,  1269,
    1270,  1271,  1430,  1431,  1272,  1273,  1274,  1432,  1275,  1276,
    1277,  1433,  1278,  1434,  1279,  1280,  1281,  1282,  1283,  1284,
    1285,  1286,  1287,  1435,  1288,  1436,  1289,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1437,  1300,  1301,
    1438,  1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,
    1311,  1312,  1313,  1439,  1314,  1315,  1316,  1317,  1318,  1319,
    1320,  1321,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,
    1330,  1331,  1332,  1333,  1334,  1440,  1335,  1336,  1337,  1338,
    1339,  1340,  1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,
    1349,  1441,  1350,  1351,  1352,  1353,  1354,  1442,  1355,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,
    1367,  1443,  1368,  1369,  1370,  1371,  1372,  1373,  1374,  1375,
    1444,  1445,  1376,  1377,  1446,  1378,  1447,  1379,  1380,  1381,
    1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,
    1392,  1393,  1394,  1395,  1448,  1449,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1450,  1451,
    1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,  1408,
    1409,  1410,    94,   945,   966,   967,     0,   354,   355,     0,
     363,     0,   352,     0,   373,   365,   374,   366,   349,   367,
     356,   348,     0,   375,   350,     0,     0,     0,   198,  1302,
     163,   339,   125,     0,  1028,  1029,  1027,  1018,  1023,  1030,
    1031,   964,  1072,  1071,   152,   985,  1101,  1444,  1376,  1111,
    1102,  1099,  1100,   199,   470,   468,     0,   932,  1255,  1338,
    1348,  1444,  1049,  1052,     0,   196,     0,   442,   573,   941,
    1083,     0,  1088,     0,  1316,   446,   449,   976,   447,   438,
       0,     0,     1,   125,     0,     0,     0,   467,   467,     0,
     467,     0,   430,   438,   433,   437,     0,  1022,  1097,  1108,
    1444,  1376,  1105,  1228,     0,     0,  1228,     0,  1228,     0,
    1228,     0,   987,   988,   986,     0,   989,   301,   337,   336,
     335,   334,   339,  1228,   993,   328,   330,     0,   329,     0,
       0,   327,     0,     0,  1004,    97,    95,   361,   362,     0,
     353,   351,     0,  1228,   372,   971,   368,  1228,   372,   943,
    1228,     0,     0,   159,     0,  1020,  1032,  1461,  1462,  1463,
    1464,  1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,  1473,
    1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1448,
    1483,  1047,     0,  1048,  1038,  1026,  1033,  1034,  1035,   125,
       0,     0,     0,     0,  1103,     0,     0,     0,   965,   950,
     952,   953,   860,   963,   927,  1412,  1413,  1414,   916,     0,
    1415,  1416,  1417,  1463,   797,   784,   793,   798,   785,   787,
     794,  1418,  1419,   738,  1196,  1420,  1421,   961,  1422,  1423,
    1426,  1427,  1428,  1429,   789,   791,  1430,  1431,     0,   962,
    1433,  1434,  1284,  1436,  1437,  1439,  1440,   795,  1442,  1443,
    1444,  1445,  1446,  1447,   960,   796,  1449,     0,     0,     0,
     938,     0,   927,   769,     0,   612,   613,   635,   636,   614,
     641,   642,   644,   615,     0,   937,   677,   814,   768,   780,
       0,     0,   767,   762,   453,   933,     0,   763,   949,   951,
     917,   947,   966,   970,   453,   931,  1050,  1055,  1051,     0,
       0,     0,     0,     0,   575,   574,   924,     0,   925,   942,
    1082,  1080,  1081,  1079,  1078,  1085,     0,  1087,  1023,   872,
       0,   448,     0,     0,     0,   428,   427,     3,     0,     0,
    1090,     0,   465,   466,     0,     0,     0,     0,     0,     0,
       0,     0,   521,   487,   488,   490,   518,   522,   530,     0,
     434,     0,   976,  1106,     0,     0,     0,   112,   112,     0,
       0,     0,     0,     0,    89,    38,    82,     0,     0,     0,
       0,   177,   190,     0,     0,     0,     0,     0,   187,     0,
       0,   170,    40,   164,   166,     0,   112,     0,    36,     0,
       0,     0,    42,     0,     0,   400,     0,     0,   990,     0,
    1228,   158,  1228,   301,     0,   301,     0,  1003,  1006,   364,
     360,   358,   357,   359,     0,   370,   371,     0,   343,     0,
     972,     0,     0,   345,     0,     0,     0,     0,   125,     0,
     171,  1043,  1044,  1042,     0,     0,  1025,   174,   191,  1037,
    1046,  1036,  1045,  1024,  1019,  1061,  1060,  1069,   153,   876,
       0,   874,   947,     0,   968,   623,   652,   630,   652,   652,
     619,   619,   632,   620,   621,   657,     0,   652,   619,   624,
       0,   622,   660,   660,   647,   879,   604,   605,   606,   607,
     633,   634,   608,   639,   640,   609,   674,     0,   619,   969,
     125,  1104,  1112,     0,   765,   651,   638,   915,     0,     0,
     646,   645,     0,     0,     0,     0,     0,   628,   627,   626,
     771,   882,     0,   625,     0,     0,     0,     0,   652,   652,
     650,   700,     0,   629,     0,     0,   895,     0,   901,     0,
       0,     0,   656,     0,   654,     0,     0,   701,   681,   682,
     769,   872,     0,   764,   770,   956,     0,     0,   674,   936,
     860,     0,   857,   858,   859,     0,     0,     0,   930,     0,
     868,     0,     0,   715,   866,     0,   718,     0,     0,     0,
       0,   854,   855,   856,   848,   849,   850,   851,   852,   853,
     864,   847,   697,     0,     0,   816,     0,   696,     0,     0,
     537,     0,   954,   918,   537,  1063,  1067,  1068,  1066,     0,
    1062,  1054,  1053,  1058,  1056,  1059,  1057,     0,   923,     0,
     978,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,  1492,
    1493,  1494,  1495,  1496,  1497,  1498,  1499,  1500,  1501,  1502,
    1503,  1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,
    1513,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,   920,   919,   946,   979,   980,   981,   982,
     926,  1076,     0,  1073,   534,     0,   450,     0,     0,  1096,
       0,   119,     0,  1091,     0,   445,   444,   474,   475,   481,
     443,   507,   508,     0,     0,     0,     0,   527,   525,   498,
     491,   497,     0,     0,   495,     0,   499,   677,   520,   432,
     485,   486,   489,   431,     0,   523,     0,   533,   521,   490,
       0,  1098,  1107,     0,     0,     0,     0,     0,     0,  1228,
       0,     0,     0,    73,    54,   251,     0,   111,     0,     0,
       0,     0,     0,     0,     0,    81,    78,    79,    80,     0,
       0,     0,     0,   175,   176,   189,     0,   180,   181,   178,
     182,   183,     0,     0,   168,   169,     0,     0,     0,     0,
     167,     0,     0,     0,     0,     0,     0,     0,     0,   390,
     309,     0,   299,     0,     0,     0,     0,     0,   339,   996,
     994,   992,   995,   997,     0,     0,   155,   157,     0,   298,
     270,     0,  1008,     0,  1228,  1005,   289,     0,   372,   369,
     973,     0,   372,   944,     0,   372,   162,  1228,   301,     0,
    1021,  1039,   172,   192,   173,   193,     0,   154,     0,     0,
       0,   604,   600,   596,   663,   664,   665,   662,   675,   661,
       0,   610,   666,   984,     0,   616,   619,   983,     0,   928,
       0,     0,   914,   910,     0,     0,     0,     0,     0,     0,
     883,   886,   887,   888,   885,   889,   884,     0,     0,   890,
       0,     0,     0,     0,     0,   649,   648,     0,   846,   857,
     858,   859,   854,   855,   856,   848,   849,   850,   851,   852,
     853,   870,     0,     0,     0,     0,     0,     0,     0,     0,
     739,     0,     0,   841,     0,   872,   900,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   872,   906,     0,
     927,     0,     0,     0,     0,   957,   678,   692,   693,   694,
     698,   935,     0,   929,     0,     0,   679,   706,     0,   907,
     734,     0,   722,     0,   714,     0,   720,   724,   702,   717,
       0,   699,     0,   930,   869,     0,   867,     0,   689,   690,
     691,   683,   684,   685,   686,   687,   688,   695,   845,   843,
     844,     0,     0,     0,   824,     0,     0,   719,  1221,  1255,
       0,   464,   464,   464,   452,   462,   934,     0,   590,     0,
       0,     0,     0,   772,   473,   590,     0,   674,   576,   921,
     924,   976,  1086,  1074,  1075,   873,   975,   125,     0,  1094,
       0,     0,     0,   131,   114,     0,  1092,     0,   147,   537,
       0,   927,     0,   479,   480,     0,   484,  1440,  1335,     0,
       0,     0,     0,   500,   528,     0,   519,     0,   950,   501,
     949,   502,   505,   506,   496,   529,   939,   531,     0,   524,
     436,   435,   535,     0,    39,     0,  1228,    56,     0,     0,
     283,     0,     0,   284,     0,     0,   206,   242,   206,    93,
    1228,   372,  1228,   372,  1131,  1197,  1349,     0,    52,    85,
       0,   275,   105,     0,   260,   306,    75,    90,    98,     0,
       0,    41,   165,   179,   184,   101,   188,   185,  1013,   186,
     112,     0,    37,     0,    99,     0,  1011,     0,     0,    43,
     103,  1015,   389,     0,   300,     0,   399,   379,   380,   390,
       0,   301,   993,     0,     0,     0,     0,     0,   292,   290,
     320,     0,   297,   291,   299,     0,     0,   246,     0,  1125,
       0,     0,     0,     0,     0,   342,   974,   344,     0,   346,
       0,     0,  1070,   875,   877,   878,   601,   597,     0,     0,
       0,     0,     0,     0,     0,     0,   880,   617,   469,     0,
       0,     0,   911,     0,     0,   810,     0,   786,   788,   618,
     800,     0,   631,   811,   812,   790,   792,     0,   861,     0,
       0,     0,   801,   741,   742,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   757,   756,   802,   840,     0,     0,   898,   899,
     803,   659,   658,   660,   660,     0,     0,   905,     0,     0,
       0,   808,   766,   873,   643,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   723,   716,     0,   721,   725,     0,
       0,     0,   710,     0,     0,   708,   735,   704,     0,     0,
     736,     0,     0,     0,   779,   464,   464,   464,   464,   461,
     463,     0,     0,     0,     0,  1335,     0,   559,   536,   538,
     546,   559,   564,   781,   588,   782,     0,   941,     0,   510,
     473,   473,   473,   778,     0,     0,   472,   510,     0,  1064,
     923,     0,  1077,     0,  1095,     0,   136,   118,   138,   137,
       0,   145,     0,   927,     0,   136,   120,     0,   139,     0,
    1094,     0,   151,   476,     0,   862,   484,     0,   478,   504,
     503,     0,   494,   526,   492,     0,   532,     0,     0,     0,
     250,     0,     0,     0,   206,     0,     0,   316,     0,   303,
      74,     0,     0,     0,    48,     0,    66,    58,    44,    72,
       0,     0,    77,     0,    70,    87,    88,    86,    91,     0,
     234,   216,   247,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   421,   422,   170,   420,
     310,     0,     0,  1008,   991,     0,     0,   158,   301,     0,
     274,   270,     0,   268,   267,   269,     0,  1126,   163,     0,
    1121,  1007,     0,     0,     0,  1002,   372,     0,     0,     0,
     602,     0,   668,   669,   670,   671,   672,   673,     0,   667,
     611,   637,     0,   913,   909,     0,   783,   881,     0,   871,
     893,   892,   740,   752,   753,   754,   894,     0,     0,     0,
     749,   750,   751,   743,   744,   745,   746,   747,   748,   755,
     903,   902,   896,   897,   655,   653,     0,   805,   806,   807,
     904,   842,   674,   958,   680,     0,     0,   707,   908,   726,
       0,     0,     0,   703,   861,     0,     0,     0,     0,     0,
     712,     0,     0,     0,   827,   822,   823,     0,     0,     0,
       0,   455,   454,   460,   559,   564,     0,     0,   438,     0,
     546,     0,   558,   544,   557,     0,     0,   570,   568,     0,
     570,     0,   570,     0,   540,     0,   560,   542,   557,     0,
     580,     0,   942,   589,     0,   517,     0,     0,     0,     0,
     773,   517,     0,   922,   451,  1093,     0,  1089,     0,     0,
       0,   126,   123,   113,     0,     0,   148,   136,   127,     0,
     477,   482,   483,   493,   940,   106,   206,     0,     0,    55,
       0,   318,   262,   296,   277,     0,     0,     0,   207,     0,
     282,     0,    47,    67,     0,    63,     0,    92,     0,     0,
       0,     0,     0,    50,    62,     0,    45,     0,   372,   372,
      53,   261,   213,  1284,     0,   848,   849,   211,   305,   208,
     311,   210,   212,   619,   209,   308,   102,  1014,     0,   100,
       0,  1012,   109,   107,   104,  1016,   402,   382,     0,     0,
    1228,     0,  1008,   156,   298,     0,   326,   246,   321,     0,
    1125,  1123,     0,  1120,     0,     0,     0,     0,   347,     0,
       0,   598,   603,   676,   912,   799,   809,   891,     0,     0,
       0,     0,   804,   959,   732,   730,   727,     0,   728,   711,
       0,     0,   709,   705,     0,   737,   813,     0,   829,   826,
     459,   458,   457,   456,   545,   543,   948,     0,   548,   555,
       0,   539,     0,   569,   565,     0,   566,     0,     0,   567,
       0,     0,   541,     0,   555,     0,   587,   473,     0,     0,
     818,   776,   777,   774,   473,   955,   818,  1065,   135,   115,
       0,   116,   146,     0,     0,     0,     0,   140,   376,     0,
     314,    57,     0,   296,     0,   206,   279,   278,   281,   276,
     280,   285,     0,     0,     0,     0,     0,   263,     0,     0,
       0,   227,     0,     0,   296,   302,   223,   224,   340,     0,
       0,     0,    59,    49,    46,    51,    60,     0,     0,    61,
      64,   595,    76,    69,   619,   619,     0,     0,     0,     0,
     378,   391,   385,   170,     0,     0,     0,     0,   298,     0,
       0,     0,  1125,     0,     0,   203,     0,   243,     0,   160,
    1124,     0,  1113,     0,     0,  1000,  1001,     0,     0,   599,
     758,     0,     0,     0,   729,   733,   731,   713,   815,     0,
     473,   583,     0,   586,   547,     0,     0,   549,     0,     0,
     551,   553,     0,     0,     0,     0,   591,     0,     0,     0,
     945,     0,     0,   509,   511,   514,   513,   516,     0,   440,
       0,   439,     0,     0,     0,   149,     0,   142,   142,     0,
     128,   863,     0,   206,     0,   295,   315,   241,     0,     0,
     225,     0,   231,     0,   265,   266,   264,   226,   296,   301,
     228,   341,     0,    68,     0,    84,   619,     0,   307,   110,
     108,   423,     0,   397,   405,   410,   388,     0,   388,     0,
     407,   411,   388,   406,   388,   401,   402,     0,  1008,  1120,
       0,     0,   270,   163,  1122,   259,   252,   253,   254,   255,
     256,   257,   258,   273,   272,   244,   245,     0,     0,     0,
       0,  1002,     0,   759,     0,   760,     0,   832,   588,     0,
       0,   582,     0,   556,   572,     0,   552,   550,     0,   561,
       0,   595,     0,   563,   773,   515,     0,   817,   819,     0,
     775,     0,   122,     0,   590,     0,     0,   144,   144,   130,
       0,   301,   317,     0,   287,   294,   286,     0,     0,   222,
       0,   229,   325,   215,   594,     0,    71,     0,   312,   392,
       0,   395,     0,   394,   398,   393,   387,     0,   418,     0,
       0,     0,     0,     0,     0,   377,   381,     0,  1114,     0,
    1120,   246,  1125,     0,  1117,     0,     0,     0,  1008,   761,
     828,     0,     0,     0,   581,   584,     0,   554,     0,     0,
     592,   593,   562,   512,     0,     0,   117,   142,   121,   150,
     141,   481,   143,   481,     0,   325,   271,     0,     0,   249,
     215,     0,   240,     0,    65,    83,   313,   424,     0,   383,
     419,   408,   413,     0,   417,   415,   414,   409,   412,     0,
     298,  1115,   204,   161,  1118,  1119,     0,     0,   590,  1411,
    1174,  1383,     0,   830,   833,   831,   825,     0,   571,   579,
     820,   821,   144,   484,   484,   590,   240,   288,   293,     0,
     230,   232,   322,   323,   324,     0,   236,   233,   237,     0,
     396,     0,   416,  1120,     0,     0,   998,     0,   837,   836,
     835,   839,   838,   585,     0,   577,   481,   133,   132,   129,
     206,   248,     0,     0,     0,   238,     0,   239,   214,   384,
    1116,     0,  1008,     0,     0,   484,   319,   219,     0,   218,
       0,   304,   235,     0,   590,   834,     0,   134,   217,   221,
     220,     0,   999,   578,     0,   205
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    31,    32,    33,    34,  1816,  1817,  1818,  1537,   794,
    2446,  1538,   795,   796,  1820,    35,    36,  1199,   464,  1473,
    1140,  2185,    38,  1771,  1478,  1775,  2315,  2007,  1770,  1777,
    2427,  2501,  1772,  1479,  2316,  1480,    39,    40,  1256,    41,
     583,    42,  1257,  1226,   875,   814,  1216,   867,    43,    75,
      44,    45,  1807,  2068,  2514,  1830,  2611,  2215,  2216,  1539,
    2566,  2567,  1809,  1867,  1208,  2560,  1588,  2383,  1543,  1526,
    2217,  1597,  2325,  2096,  1540,  2038,  1589,  2202,  2433,  1265,
    1590,  2434,  2195,  1591,  1240,  1260,  2040,  2568,  1544,  1241,
    2069,  1195,  1592,  2512,  1593,   563,    94,  2220,    46,   455,
     456,   574,   848,   457,   465,    48,  1579,  2243,  2518,  2244,
    2457,  1573,  2240,  2454,  2351,  1244,  2241,    85,  2365,  2519,
    1848,  2352,   466,   693,    51,    52,    53,   511,   505,   506,
    1020,  1444,  1731,   764,   486,   487,   521,  1756,  1147,  1148,
    1486,  1788,  1172,  1173,   773,   774,  1160,  1164,  1165,  1499,
    1492,  1153,  1995,  2303,  2304,  2305,  2170,  1168,  1169,   776,
     777,   778,  1177,  1509,    55,  1448,  1738,  1739,  1740,  1972,
    1973,  1987,  1983,  2154,  2290,  1741,  2162,  2585,  1742,  2281,
    2282,  2401,  1990,  1749,  2295,  2296,  2345,   905,  1293,   906,
     694,   907,  1305,   695,   943,   909,   696,   697,   698,   912,
     699,   700,   701,   702,   926,   703,   704,   962,  1301,  1302,
     749,  1359,   706,   707,   708,  1744,   709,  1015,  1434,  2309,
    2417,  2418,  1724,  1955,  2138,  2280,  2483,  2543,  2544,   710,
    1431,  1010,  1011,   711,  2071,  1013,  1352,  1378,   880,   881,
     917,  1327,  1328,  1355,  1651,  1362,  1367,  1678,  1679,  1379,
    1400,   712,  1312,  1313,  1633,   928,   713,   738,  1039,   974,
     924,  1395,   724,   714,   715,  1505,   498,  2286,   579,  1124,
     716,   717,   718,   719,   720,   721,  2502,   850,   754,   883,
    1541,    56,   623,   545,    57,   828,  1251,    58,  2266,  2107,
     838,  1267,  1601,    95,    59,    60,    61,   528,   870,   467,
     871,   872,   612,    62,   876,   614,   615,    63,   492,   493,
     877,  1031,   878,    64,   473,    65,   745,   502,   746,   748,
     469,   761,  1766,  1469,    67,    68,   480,   481,    69,    70,
     494,    71,  2262,   470,  1870,   834,   434,   435,   723,  1129
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2251
static const int yypact[] =
{
    4124,   -65,   541, -2251, -2251,   -65, -2251,   -65,    42,  2185,
   30615, -2251,  4321,   -65, 34701,   639,   298, 34701, 34701, 31069,
     -65,   234, 35155, -2251,   -65, 31523,    26,  -145, 35609, 34701,
     587,   346,  -139, -2251, -2251, -2251, -2251, -2251,    51, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
      90, -2251,    40,    96,   -34,   -63, -2251, -2251, -2251, -2251,
   -2251, -2251,    68, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   31977, -2251, -2251, -2251, -2251, -2251, 36063, 34701, 36517, 32431,
   36971, -2251, -2251, -2251,   587, 34701,   432,   441,   313, 37425,
   -2251, -2251, -2251, -2251,   583,   456, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, 32885, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251,   265, -2251, -2251,   301,
   -2251,    73, -2251,   282, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251,   381, -2251, -2251, 37879, 38333, 38787, -2251, -2251,
     235,   353,   338, 17888, -2251, -2251, -2251, -2251,    68, -2251,
   -2251, -2251, -2251, -2251,  -141,   376, -2251,   288,   576, -2251,
   -2251, -2251,   412, -2251, -2251,   635,  7558,  7558, 39241,   298,
   39241,   455, -2251, -2251,   116, -2251, 18802, -2251,   471,   287,
   -2251,   186,   744,  9938, 34701,   484, -2251,   494,   484,   500,
     506,   -34, -2251,  4124,   832,   811, 31523,   410,   410,   990,
     410,   697,   823, -2251,  1803, -2251,   591, -2251, 34701, -2251,
     620,   875,   412,   933,   987,   777,   961,  4502,   975,  1016,
    1002,  1065, -2251, -2251, -2251,   642, -2251,   688, -2251, -2251,
   -2251, -2251,   353,   929, -2251, -2251, -2251,   724, -2251, 39695,
   40149, -2251, 34701,   886,  1107, -2251, -2251, -2251, -2251,   770,
   -2251, -2251,    74,  1053,    39,   755, -2251,  1073,    59, -2251,
    1092,   992,  9938, -2251,   861, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,  -145,
   -2251, -2251,   524, -2251, -2251, 23981, -2251, -2251, -2251,   338,
   23981,  9938, 43781,  1220, -2251,  1043, 34701,   801,    80, -2251,
   -2251, -2251, -2251, -2251, -2251,  1273,    87,  1290,  9938,   828,
      87,    87,   860,  1195, -2251, -2251, -2251,   112,   882,   887,
   -2251,    95,    95, -2251,  1071,   902,   931, -2251,    98,   960,
    1389,  1400,   102,   965,   984,   986,   727,    87,  9938, -2251,
     988,    95,   991,   997,   998,  1429,  1013, -2251,  1435,  1020,
     131,   164,  1022,  1025, -2251, -2251,   115,  9938,  9938,  9938,
   -2251,  6606, -2251,   287,   298, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251,  1029, -2251,   137,  4219, -2251,  1011, -2251, -2251,
    1229,  9938, -2251, -2251,    34, -2251,   139, -2251, -2251, -2251,
     287, -2251,   124, -2251,  1306,  1037, -2251, -2251, -2251,   232,
    1434, 23073, 23527, 34701, -2251, -2251,  9938, 22165, -2251,   287,
   -2251, -2251, -2251, -2251, -2251, -2251,   528, -2251,    68, 25054,
     558,   484, 34701, 34701,  1495, -2251, -2251, -2251, 31523, 34701,
   40603,  1180, -2251, -2251,   -34,   -34,  9938,   -34,   119,   520,
    8034, 10414,  1377,  1275,   143,   597,  1382, -2251,  1280,   697,
     823,  9938,   494, -2251,  1327, 34701, 28345,   760,   826,  1078,
    1157,  1079,   -40,  1470, -2251,  1080, -2251,  1161, 34701, 44221,
     166, -2251,  1503,   166,   166,   478,  1507,  1168,   175,  1318,
      -5,    66,  1080,  2250, -2251, 31523,    89,    37,  1080, 34701,
    1170,   422,  1080,  1171, 34701,  1132,   -46,  1422,  1482, 34701,
    1320,  2250,  1325,  1106,  1548,   688, 34701, -2251, 41057, -2251,
   -2251, -2251, -2251, -2251, 34701, -2251, -2251, 34701, -2251, 25621,
    1109, 34701, 34701, -2251, 34701, 34701,   636, 41511,   338, 27437,
   -2251, -2251, -2251, -2251,   348,   964, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,  1110, 25054,
     643, -2251,   844,  1077, -2251, -2251,  1159, -2251,  1159,  1159,
    1116,  1116,  1117, -2251, -2251, -2251,   727,  1159,  1116, -2251,
   44221, -2251,   321,   519, -2251, -2251,  1559, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251,   913,   665,   406, -2251,
     587, -2251, -2251,  9938,   287, -2251,  1122, 25054,  1172,  9938,
   -2251, -2251,  9938,  1129,  1596,  1596,  9938, -2251, -2251, -2251,
   -2251,   155,  1596, -2251,  9938,  9938,  1596,  1596,  1159,  1159,
   -2251, 25134,  9938, -2251, 21084,  9938, 12794,  8510,  9938,  1215,
    1227,  1596, -2251,  1596, -2251,  9938,  7082, 25134,  1600,  1600,
    3239,  4650,  1142,   287,   287, -2251,  1596,    77,    67, -2251,
     126, 43781,  9938,  9938,  9938,  9938, 25621,  1230,   109, 34701,
    9938,  1151,   999, -2251,  9938,  1368, -2251,  1154,  9938,  1242,
     173,  9938,  9938,  9938,  9938,  9938,  9938,  9938,  9938,  9938,
   -2251, -2251, 14687,   174,  1465,  1485,   -92,   208, 33339,  7558,
    1479,  5654, -2251,   128,  1479, -2251, -2251, -2251, -2251,   142,
   -2251, -2251, -2251, -2251,  1110, -2251,  1110,  1173, 21710,  1165,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, 34701,   186, 29253, -2251,  9938, -2251,   670,  1181,  1236,
     966,  1611, 34701, -2251, 19258,  1451, -2251,  1182, -2251, 24432,
    1451, -2251, -2251, 13259,  1299,  1446,  1392, -2251, -2251, -2251,
    1185, 25054, 10890, 10890, -2251,   613, 25054,   877, -2251, -2251,
   -2251, -2251, -2251, -2251,   544, -2251, 34701,   306,  1377,   597,
     680, -2251, -2251,  1118,  1190, 29707, 34701,  1452, 34701,  1412,
    1460, 34701,   189, -2251, -2251, -2251, 43781, -2251, 34701, 34701,
   41965, 42419, 26075, 34701, 25621, -2251, -2251, -2251, -2251, 34701,
     852, 34701,  4603, -2251, -2251, -2251,   166, -2251, -2251, -2251,
   -2251, -2251, 34701, 34701, -2251, -2251,   166, 34701, 34701,   166,
   -2251,  1274, 34701, 34701, 34701, 34701,  1276, 34701, 34701,  1367,
   -2251,   706, -2251,  1409,    41,  1248, 34701, 34701,  1355, -2251,
   -2251, -2251, -2251, -2251,  1205,  1533, -2251,  2250,  1536, 28799,
     589,  1108,  1249,  1416,  1433, -2251, -2251,  1420,    39, -2251,
   -2251, 25621,    59, -2251,  1421,   122, -2251,  1437,   688,  1658,
   -2251, -2251, -2251, -2251, -2251, -2251, 23981, -2251,  9938,  9938,
    9938,  1661,  1226,  1228,  1307,  1309,  1311, -2251,  1237,  1322,
    1596, -2251, -2251, -2251, 43781, -2251,   584, -2251,   731, -2251,
    9938,  9938,    31, -2251, 24504,   732,  9938,  1255,  1260,   742,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251,  1261,  1572, -2251,
    1268,   752,   761,  1271,  1279, -2251, -2251,  1858, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251,  1281,  1277, 24555,  1286, 12794, 12794,  6606,  1148,
   -2251, 12794,  1287, -2251,   774, 24445,  1294,  1289,  1298,  1308,
    1293,  1304, 24735,  8986,  9938,  8986,  8986, 24819,  1294,  1305,
   -2251,  9938,  1310,  1312,  1314, -2251, -2251,  2752,  2752,  2752,
   25134, -2251,  1324, -2251, 12794, 12794, -2251,   184,  6606, -2251,
   -2251,  1612, -2251,   831, -2251,  1316, -2251, -2251,  2003, -2251,
   21084, 25082,  9938,   110,  9938,  1151,  9938,  1390,  2752,  2752,
    2752,   236,   236,   150,   150,   150,   299,   208, -2251, -2251,
   -2251,  1321,  1328,  1330,  1504,  1013,  9938, -2251,   905,   932,
   34701,  2976,  3197,  3641, -2251, -2251, -2251, 16064,  1371,  9938,
    9938,  9938,  1326, -2251,   -62,  1371,  1596,    67, -2251, -2251,
    9938,   494, -2251, -2251, -2251, 25054, -2251,   587, 16064,  1372,
    1383,   248, 18345,  1541, -2251, 34701, -2251, 34701, -2251,    -1,
    1348, -2251,  9938, -2251, -2251,  1014,  1358,  1549,  1551,   967,
     967,   613,  1553, -2251, -2251,  1402, -2251,  9938,   969, -2251,
    1012, -2251, -2251, -2251, -2251,  1346, -2251, -2251,  1605, -2251,
   -2251, -2251, -2251,  1445,  1080,  9938,  1586, -2251,    62,  1370,
   -2251,  1697,   337, -2251,  1656, 34701, -2251,  1576, -2251,   364,
    1702,   122,  1703,   122, 25621, 25621, 25621,   787, -2251, -2251,
     298, -2251, -2251,   792, -2251,   355, -2251, -2251, -2251,  1461,
     423,  1080,  2250, -2251, -2251, -2251, -2251, -2251, -2251, -2251,
      91,   491,  1080,  1462, -2251,  1463, -2251,  1464,   512,  1080,
   -2251, -2251, -2251,   135, -2251, 34701, -2251, -2251, -2251,  1367,
   34701,   688, -2251,   -57, 34701, 34701, 34701, 34701, -2251, -2251,
   -2251,  1384,  1385, -2251, 43781,   -55,  1593,  1595, 34701,  1425,
    1079,  1833, 34701,  1723, 34701, -2251, -2251, -2251, 34701, -2251,
    1725,   587, -2251, -2251, 25054, 25054,  1405,  1228,  1596,   105,
      78,    20,  1532,  1596,  1637,  1406, -2251, -2251, -2251,   796,
   25036,  9938, -2251,  1743, 43781, -2251,  4830, -2251, -2251, -2251,
   -2251,  9938, -2251, -2251, -2251, -2251, -2251,  9938, -2251, 21084,
    9938,  1718, -2251,  1873,  1873,  4650, 43781, 12794, 12794, 12794,
   12794,   271,   991, 12794, 12794, 12794, 12794, 12794, 12794, 12794,
   12794, 12794, 13735,   451, -2251, -2251,  9938,  9938,  1726,  1718,
   -2251, -2251, -2251,   366,   366, 43781,  1413,  1294,  1414,  1415,
    9938, -2251,   287,  4951, -2251,  1408,   298,  9938,  2817,  3030,
    9938,   805,  9938,  1729, -2251, -2251,  1424, -2251, -2251, 43781,
    9938,  1427,  2938, 12794, 12794,  2992, -2251,  3472,  9938,  6606,
   -2251,  1621,  1466, 19714, -2251,  1520,  1520,  1520,  1520, -2251,
   -2251, 34701, 34701, 34701, 16520,  1739, 15607, 33793,  1431,   556,
   -2251, 33793, 34247, -2251,  1453, -2251,  1438,   287,  9938,  1731,
     -56,   -56,  1621, -2251,  9462,  1436, -2251,  1731,  1442, -2251,
   25054,  1447, -2251,  1443,  1431,  9938,  1588, -2251, -2251, -2251,
    1500, -2251,   812, -2251,  1842,  1588, -2251,   813, -2251, 19258,
    1372,  9938,   287, -2251,  1454, -2251,  1358,   177, -2251, -2251,
   -2251,  1655, -2251, -2251, -2251, 34701, -2251, 34701,  5178,  1778,
   -2251, 34701, 30161, 34701, -2251, 34701,   838,   746,  1455, -2251,
     746,  1772,   138,  1079,   175,  2819,   372, -2251, -2251, -2251,
    1538, 34701, -2251, 34701, -2251, -2251, -2251, -2251, -2251, 26075,
   -2251, -2251, -2251, 25621, 20629, 25621, 34701, 34701, 34701, 34701,
   34701, 34701, 34701, 34701, 34701, 34701, -2251, -2251,    66, -2251,
   -2251,   135,  1473,  1249,  1482, 42873,   842,  2250,  1478,  1918,
   -2251,   589, 28799, -2251, -2251, -2251,  1879, -2251,   235,   134,
   -2251, -2251,   587,  1490, 34701,  1547,   122, 34701,  1596,  1498,
   -2251,  1501, -2251, -2251, -2251, -2251, -2251, -2251,  1493, -2251,
   -2251, -2251,  9938, 25054, -2251,  1502, -2251, 25054, 21546, -2251,
   25054,  1726, -2251,   897,   897,   897,  1701,  1808,   169,  1505,
     897,   897,   897,   192,   192,   107,   107,   107,  1873,   451,
   25054, 25054, -2251, -2251, -2251, -2251,  1506, -2251, -2251, -2251,
    1294, -2251,    67, -2251,   279,  9938,  9938,  3739, -2251, 25169,
    9938, 43781,   864,  3739,   182,  9938,  3232,  3629,  9938,  9938,
    3672, 21564,  1508,  9938, 43327, -2251, -2251, 34701, 34701, 34701,
   34701, -2251, -2251, -2251, 33793, 34247,   287,  1511, 15150,   556,
    1512, 34701, -2251, -2251,  1515, 16064,  1763,  1700, -2251, 16064,
    1700,   745,  1700,  1770,  1610, 20170, -2251, -2251,  1516,  1722,
   -2251,  5654,   624, 25054,  1945,  1823,  1527,  1529,  1530,  9938,
     298,  1823,   298, -2251, -2251, 25054,  7558, -2251,   587,  1687,
   34701,   287,   -54, -2251,  1550, 34701, -2251,  1588, 25054, 21084,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251, 30161,   870, -2251,
     900,   746, -2251,  1579, -2251,   179,  1824,    33, -2251, 25621,
    2093,   684, -2251,  1838,  1768, -2251,   166, -2251,  9938,   684,
    1774,   178, 34701, -2251, -2251,  2753, -2251, 43781,   122,   122,
   -2251, -2251, -2251,  1454, 44221,   348,   964, -2251, -2251, -2251,
   -2251, -2251, -2251,   406, -2251,  1566, -2251, -2251,  1640, -2251,
    1642, -2251, -2251, -2251, -2251, -2251,  1563,    50, 34701,  2002,
    1785,  1568,  1249, -2251, 28799,  1278,   440,  1595, -2251,   111,
    1425, -2251,  1940,  1613,  1883,  1780, 34701,  1578, -2251,  2017,
    1581, -2251, -2251, -2251, 25054, -2251, -2251, -2251, 12794,  1891,
    1583, 43781, -2251, -2251,  3739,  3739, 25169,   906, -2251,  3739,
    9938,  9938,  3739,  3739,  9938, -2251, -2251, 21583,  1773, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251,   287, 26529, 33793,  1589,
   34701,   556, 16064, -2251, -2251,  1509, -2251, 16064,  1848, -2251,
   16064, 27891, -2251, 34701,  1590, 34701, -2251,   -62, 11366,  9938,
    1626, -2251, -2251, -2251,  1621, -2251,  1626, -2251,  1037, -2251,
     248, -2251, -2251,  1981, 16976,  1937,  9938, -2251, -2251,  1597,
     746, -2251,  1753,  1579,  1599, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251,   908,  1603, 34701, 34701, 12794, -2251,   684,   201,
     129, -2251,  1868, 34701,  1579, -2251, -2251, -2251, -2251,  1971,
    2048,  1938, -2251, -2251, 25054, -2251, -2251,  1596,  1596, -2251,
   -2251,  2015, -2251, -2251,   406,   545, 20629, 34701, 34701, 25621,
   -2251,  2412, -2251,    66,  1969,   910,   587,  1941, 28799,  2054,
    1616, 34701,  1425,  1297,  1297, -2251,  1754, -2251,  1755, -2251,
   -2251,   216, -2251, 34701, 34701, -2251, -2251, 16976,   587, -2251,
    3865, 12794, 43781,   919, -2251,  3739,  3739,  3739, -2251,  2038,
    1621, -2251,   921,  2059, -2251, 34701,   937, -2251,  9938,  1622,
   -2251, -2251, 16064,  1509,  1625,   945, -2251, 43781, 34701,   954,
   43781,  1628,  6130,  1623, -2251, -2251, 25054, 25054, 34701, -2251,
    1633, -2251,  1677, 34701,  9938, -2251,   972,  2037,   211,   -25,
   25054, -2251, 34701, -2251, 25621, -2251,   746, -2251, 25621,  9938,
   -2251,  1210,  1701,  2074, -2251, -2251, -2251, -2251,  1579,   688,
   -2251, -2251,  1932, -2251, 34701,  1696,   590,  1712, -2251, -2251,
   -2251, -2251,   973, 17432, -2251, -2251,  2081,   298,  2081,   685,
   -2251, -2251,  2081, -2251,  2081, -2251,  1563,   298,  1249,  1613,
   34701,   587,   589,   235, -2251, -2251, -2251, -2251, -2251, -2251,
   -2251, -2251, -2251, -2251, -2251, -2251, -2251,  2056,  1851,  2060,
    1802,  1547,   979,  3865,  1010, -2251,  9938,   307,  1453, 26529,
    1651, -2251,  1030, -2251, 25054, 34701, -2251, -2251,  9938, -2251,
   34701,  2015,  1032, -2251, -2251, -2251, 11366,  1649, -2251,  2092,
   -2251,   587, -2251, 21621,  1371, 16976, 34701, 34701, 34701, -2251,
    1777,   688,   746,  1036, -2251,  1671, -2251, 21640,  1876, -2251,
    1955, -2251,  1906,  1672, -2251,  9938, -2251,  1745, -2251, -2251,
   25621, -2251, 26983, -2251, -2251, -2251, -2251,   298, -2251,   298,
    1894, 34701, 22619,   298,   298, -2251, -2251,  2114, -2251,  1683,
    1613,  1595,  1425,  1886, -2251,  1888, 34701,  1698,  1249, -2251,
    1294, 11842, 11842,  1699, -2251, -2251, 34701, -2251,  1044,  1045,
   -2251, -2251, -2251, -2251, 34701,  1704, -2251,  2037, -2251, -2251,
   -2251,   218, -2251,   218, 19258,  1906, -2251, 25621, 20629,  1921,
    1672,   515,  1910,  2250, -2251, 25054, -2251, -2251,  1046, -2251,
   -2251, -2251, -2251, 34701,  1705, -2251,  1705, -2251, -2251,   587,
   28799, -2251, -2251, -2251, -2251, -2251,  1706, 16976,  1371, 14211,
    1843,   108, 24485, -2251, -2251, -2251, -2251,  1052, -2251,  1855,
   -2251, -2251, 34701,  1358,  1358,   188,  1910, -2251, -2251,  1989,
   -2251, -2251, -2251, -2251, -2251,   114,  1919, -2251,  1920,  1397,
   -2251, 26983,  1705,  1613,  1793,  1060, -2251,  2157, -2251, -2251,
   -2251, -2251, -2251, -2251,  1719, -2251,   218, -2251, -2251, -2251,
   -2251, -2251,   458,   458,  2075, -2251,  1781, -2251, -2251, -2251,
   -2251, 34701,  1249, 12318,  9938,  1358,   746, -2251,  2176, -2251,
     145, -2251, -2251,  1881,  1371, -2251, 21658, -2251, -2251, -2251,
   -2251, 34701, -2251, -2251,  1727, -2251
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2251, -2251, -2251,  1686, -2251, -2251, -2251,   384, -2251,   995,
   -2251,   373,  -343,   678, -2251, -2251, -2251,  -738,    27, -2251,
   -2251, -2251, -2251,   198,   430, -2251,  -215, -1576,    36, -2251,
   -2068, -2175, -2251,  -293, -2066, -1397, -2251,  -786,   357, -2251,
   -1784, -2251,  -534,  -774,  -594,  -799, -2251,   168, -2251,  1021,
    -784, -2251, -1485, -2055,  -295, -2251,  -376, -2251,  -109, -1480,
    -345,  -331, -2251, -1992,  -734, -2251,  1444,   -30, -2251,   707,
   -2251, -1780, -2251, -2251,   696, -2251,  -760, -2251, -2251, -1465,
     370,  -274, -1928, -2007,   659,  -531, -2251,  -330,   402, -1474,
   -2251,   719, -2251,  -265, -2251, -2251,  -396, -1816, -2251, -2251,
   -2251,  1398,  -542, -2251,    29, -2251, -2251, -2251, -2251, -2251,
   -1434,   664,  -122, -2251,  -205, -2251, -2251, -2251, -2251,  -325,
     397, -2251,    22,   272,   -28,    17,    35,    25,    53,  1510,
    1526, -2251,  -557,   903, -2251, -2251,  -518,   -39, -2251,   773,
   -2156, -1738,  -319,  1081,  1489,  1483, -2251,   762,  1099, -1033,
   -1014, -2251,   507, -2251,  -150, -2251,   266,  -282,  1091, -2251,
    1494, -2251, -2251, -2251, -2251,  -936,   803, -1659,   536, -1643,
   -1516,   311,   302,  -565,    -9,    49, -2251, -2251,   552,  -108,
   -2251, -2251,  -106, -1420, -2046,  -117,  -116,  -928,  1003,  -779,
   -2251, -2251,  -613,  -498, -2251, -2251, -2251,  -243,    72, -2251,
   -2251,   156,   445, -2251,   106,  1203,  -525,  -632,  -926,  -448,
    2998,  1069,  1302, -1292, -2251, -2045, -1046, -2251, -2251,   120,
   -2251,  -197, -2251,  -195, -2251, -2251, -2251,  -181, -2250,  1291,
   -2251,  -937, -2251,  3151,   817, -2251, -1338,  -350,  -980, -1187,
   -1646, -2251, -2251, -2251, -2251, -2251, -2251,  -984, -1411,  -248,
     890, -2251, -2251,   994, -2251, -2251, -2251,  -711,   849,  -494,
    -658,   901, -2251,  -464,  1317, -2251,    65,  -445,    94,  -751,
   -1392, -2251,  2133,   -15,   -10,   655,  -431,  -888,  -721, -2251,
    -692, -2251, -2251,  -847, -2251,   728, -2251,  -782, -2251,   -78,
   -2251, -2251, -1794, -2251, -2251, -2251, -2251,  -283, -2251,  -296,
    -329, -2251, -2251,    18,  -605,  1457, -2251, -2251,   939, -2251,
    1031, -2251,   593, -2251, -2251, -2251,  1189, -2251, -2251, -2251,
      32,  1570,   550, -2251,  1200, -2251, -2251, -2251, -2251, -2251,
     312,  -781, -2135,    83, -1968,  -793,  1895,  -432,  -332, -1772
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1467
static const yytype_int16 yytable[] =
{
     433,   472,   510,   813,   433,   739,   779,   474,   433,   479,
     873,   578,   479,   522,  1230,   499,   825,  1351,   433,   433,
    1213,   866,    49,   725,   576,    54,  1194,    37,  1130,    47,
    1306,   617,    66,   468,   973,  1757,   853,  1229,   937,   938,
      54,  1454,  1249,  1810,  1250,  1125,  1252,  1253,  2020,   964,
    1201,  1806,  1385,  1386,  1825,  1746,  1827,  1205,   953,  2089,
     479,  1181,  2074,  1942,  1279,   584,   499,   433,   499,   499,
     499,   524,  1711,  1307,   497,   499,  1746,  1969,  1234,   554,
    1778,  2097,   508,    72,  2100,  -968,   633,  2250,  1455,   525,
    -426,    83,  -652,  -968,  -968,   845,  -429,   916,  1270,  1986,
    -619,  1613,  2283,  -632,   432,  2255,   544,  -657,   460,    54,
    1856,   542,   475,   543,   633,   845,   546, -1466,  1656,  2299,
    -647,  1291,   507,   507,   908, -1466, -1466,  1184,   539,  -969,
    1501,   618,  2259,  -948,   611,  1028,  -660,  -969,  -969,  2317,
     471,   534,   471,   537,   471,   541,  2199,   471,  1393,  1393,
     547,  1504,  -846,   750,   840,  1743,   826,  1125,  1320,  -846,
     471,   981,  1197,  1447,  1197,  1631,   585,   514,  -386,  -660,
     860,   535,  1232,  1294,  1838,   633,  1743,   569,   845,  -170,
    -426,  2348,   517,   617,  -170,   619,  -429,   633,   617,   740,
     987,   500,   980,  1206,   812,   981,   818,   841,   822,  2013,
    1428,  2392,   772,  1656,  1029,  1577,  1214,  1429,  -865,  1217,
    1218,  1863,   519,  1309,  2183,  -865,     3,     4,   519,   981,
    1413,   989,  2317,  1187,   987,  1984,  1023,  2256,  1206,  2429,
    2592, -1467,   856,  2225,  2468,  1025,   860,   471,  2101,   775,
    1018,   633,  2336,  2257,   518,  1435,  1295,   981,   987,  2042,
    2428,   515,  2412,  2503,  1483,   989,  2619,  1882,   557,  1885,
     484,  1321,  1309,  1130,  1752,  2323,  2579,  1922,  1527,  1245,
    1206,   964,    50,  2387,   916,  1151,   987,   937,   938,   989,
     730,  2388,  2426,   618,  2374,   953,  2340,    50,   618,  2577,
     981,   433,   559,  2196,  1391,  2127,  2119,   768,  2249,   617,
     617,   908,   509,   471,  1262,  1127,  1296,   989,  1137,  1297,
     981,  1899,  1130,    21,   519,  2334,  2151,  1883,  2043,  2031,
    2155,   620,  1986,   874,  1700,  1855,   523,  2028,   503,  2030,
      73,   482,   621,  2021,  1322,  2531,  1228,   513,  1484,   987,
    2032,   972,  1746,  1026,  1746,  2553,   512,  2554,    25,   741,
     989,   742,  1282,  2615,  2283,  1414,    50,   633,  -426,   842,
    1415,   485,  2197,  1190,  -429,  1298, -1467,   770,   846,  1152,
     989, -1467,   562,  1207,    74,   916,  1626,  2586,  1235,   910,
    2317,  1436,   532,  1246,  2335,  2102,  1811,  2337,   846,    27,
    2430,  2044,  2333,  2022,  1323,   566,  1416,  1324,  1907,   618,
     618,  1745,   908,  2620,  2580,  1128,  1272, -1467,  1207,  2105,
    2441,  2258,  1298,   576,   526,  1754,  1269,  1127,  1204,  2184,
    -426,  1288,  1745,  1298,  1275,  1517,  -429,   617,   461,  2552,
    2605,  1180,  2120,  1204,  1578,   510,   762,   895,  2600,    30,
    2547,  2188,  1743,  2389,  1743,   575,   433,   433,  2144,   520,
    1207,   846,  2200,  2558,   997,   570,   916,  1501,  1230,  1027,
    1178,   843,  1656,  1311,  2074,  1133,   516,  2242,  1204,  1750,
    1751,  2575,  1192,  1351,   727,  2273,  1779,  1791,   479,  2532,
     479,   613,  1233,   908,  1839,   780,   499,    54,  1394,  1713,
    2117,  -846,  2317,  2287,   433,   527,  1812,  1179,  2291,   501,
    1325,  2293,  1224,   567,  2533,  2284,   499,  1846,  1847,   731,
    1204,  1019,  1545,   925,  2607,    84,   847,  1128,   499,   744,
    1606,  1299,    86,  2250,  1908,  1225,  -426,   618,   524,  2593,
     611,  1759,  -429,  1417,  1909,    49,   852,   763,    54,  1430,
      37,  2190,    47,  1780, -1467,    66,   525,  -865,  1785,   499,
     499,   581,   499,  -968,  1127,  1383,   910,   751,  1396,  2201,
    -652,   734,  1280,  1507,  -426,   760,  -426,  1613,   936,   959,
    -429,   942,  -429,  1308,  2467,  -657,  1671,  1880,   732,  1125,
      87,  1219,  1315,  1746,  2253, -1466,  1319,  1746,  -647,  2472,
     960,   626,  2471,   782,  1331,  1332,    72,  -969,   507,   736,
     869,  -948,   959,   737,   961,   869,  1524,  1364,  1366,  1326,
     977,  1224,  1021,   743,  2245,  1456,   922,  2481,  2187,  1009,
    1763,  1748,  1553,   960,   831,   833,  2394,   835,  2254,  1768,
     864,   865,  1556,  2406,  1225,  1559,   789,   963,   552,  -170,
    -170, -1467,  2227,  2228,    54,  2482,   564,  1976,  1004,  1005,
    1006,  1007,  1008,  1009,  1128,  1206,  1206,   910,  1668,  1669,
    1670,  1671,  1525,   510,  1769,  1779,  1527,  1901,  1508,     3,
       4,   916,  1004,  1005,  1006,  1007,  1008,  1009,  1552,   975,
    2562,  2189,   736,  1743,  2538,    21,   737,  1743,  1745,   978,
    1745,  1813,  1814,  1627,   911,  1923,   864,   865,   908,   568,
    1814,  1022,  1006,  1007,  1008,  1009,  1895,   555,   582,  2608,
    2326,   571,  1351,  2218,  1030,  1220,   869,   869,  1221,  1815,
      25,  1977,  1692,   499,  1206,   572,  1605,  2055,  1902,   461,
    1607,    76,  1154,  1609,    50,   509,  2074,  2219,   910,    90,
    1762,    91,   433,   433,   624,  1206,   930,   931,   499,   499,
    1143,   768,  1978,  1230,  1524,  1746,  1154,  1926,   736,   959,
    1746,    27,   737,  1238,  1837,  1746,    93,  1979,  1746,  2294,
    1127,  1155,  1127,   950,    28,   499,  1196,  1980,   913,   916,
     960,  1145,  1146,   523,  1150,    50,   625,  2609,   499,   948,
     949,  1554,  1746,  1859,   961,  1155,  1557,    29,  1037,   525,
     525,  2563,   525,  1981,   959,   499,   908,   760,  2614,   499,
    1803,    30,  2174,  2610,  1242,  2587,  2588,  1834,   548,   499,
     549,   770,  1840,  1782,  1141,   960,   499,   550,  1266,   551,
    1835,  1156,  1841,  1197,   575,  1207,  1207,   575,  2432,  1127,
    1514,   433,   433,  1198,   433,   575,   507,   499,  2436,   622,
    1183,   768,  1583,  1845,   617,  1743,   769,  -977,  -977,  2034,
    1743,  1864,   771,  1212,  1231,  1743,  1871,  2617,  1743,  1551,
    1128,   911,  1128,   556,   786,  1746,  2564,   613,  1157,   936,
     787,   849,    77,    54,  1236,  1732,  1733,   626,  1562,  1982,
      78,    50,  1743,  1569,  1254,  1204,  1204,  1785,   557,  1197,
    1746,  1263,  1157,   627,  1207,   632,  2070,   747,  1656,  1200,
    1977,   729, -1467, -1467, -1467,  1666,  1667,  1668,  1669,  1670,
    1671,   770,  1278,    79,  2459,  1207,  1329,   940,  2463,  1745,
    2464,   558,   559,  1745,    21,  1158,  1755,   735,  2460,  1128,
    2035,  1978,   544,  2461,  1353,    54,  1273,   542,  1274,   543,
    1502,  1503,   546,   910,   618,   913,  2157,   959,  1703,  1158,
    1629,   752,   771,   970,  1204,   560,  1980,   753,  1284,    25,
      80,  1789,   911,   633,   755,  1743,   633,  -472,   960,   575,
     756,  1309,  -472,  1704,   788,  1204,    21,  2524,  2526,  1822,
     561,  1824,   963,  2462,   930,   931,   758,  2036,   858,  2037,
    1743,   859,  1131,   950,  2498,  1132,  2123,  1746,   499,   786,
      27,  2167,   562,  2347,  1457,   787,  2053,   759,   936,  1294,
    1271,    25,  1338,    28,  1687,  1595,    81,  1596,    82,  1339,
    1340,  1341,  1134,  1746,   458,  1135,   523,   523,   786,   523,
    2046,   483,  2029,   766,   787,   495,    29,  -472,  1701,  2572,
    1853,  1924,  1925,   911,  1335,  1336,   913,   936,  2447,  1271,
      30,   910,    27,   936,   781,  1271,   462,   914,  1249,   916,
    1250,  1309,  1252,  1253,  2086,    28,   783,  1470,  1982,  2045,
     785,  2054,  1351,  1445,  2109,   784,   972,   786,  -472,  1705,
    1289,  1290,  1295,   787,  1706,   736,   908,  -948,    29,   737,
     797,  1745,  1127,  1127,  1127,  2606,  1745,  1743,   798,   916,
    1276,  1745,   463,  1135,  1745,  2011,   823,  1287,  2576,   788,
    1288,   499,   815,   499,   789,  1686,  1401,  1688,  1689,  2231,
      50,   916,  1476,  1743,  1481,  2589,   908,   913,  1745,  1303,
     786,  1545,  1304,  2075,  1466,  1746,   787,   852,   788,   819,
     744,  1402,  1296,   829,  1512,  1297,   632,  1135,   908,  1656,
     916,   824,  1474,  1657,  1658,  1659,   499,  1662,  1957,  1958,
    1959,  1960,  1884,  1886,  1887,  1196,   433,  1876,  1520,   791,
    1574,  1523,   827,  1575,   916,  2235,   837,   908,   433,  1529,
     433,  1533,    50,   433,  2622,   836,  1461,   788,  1463,   433,
     844,   433,  1128,  1128,  1128,  1628,  1635,   792,  1135,  1135,
     839,   908,   575,   433,  -500,  -500,  1639,   575,   433,  1135,
     851,  1745,   433,   433,   433,   433,  1643,   433,   433,  1135,
     849,  1707,  1996,  1997,  1998,  1644,   499,  1582,  1135,   854,
    2067,  1506,  1708,   857,   914,  1743,  1745,  1471,  1675,  1594,
     788,  1135,  1403,  1992,  1598,   920,  2053,  1404,  1298,   789,
     855,  1828,  1405,  1399,  1829,   921,  1832,  2191,   911,  1833,
    1891,   869,   793,  1135,   923,  2203,   882,   918,  -623,  1938,
    1518,  1130,  1135,  1599,  1784,  1291,  2009,  2014,   789,  2010,
    2015,  1725,  1528,  1726,  1531,  -630,   786,  1542,   786,  1785,
    1309,   929,   787,  1546,   787,  1548,  -504,  -504,  2070,   916,
     790,  1581,  2033,    21,   791,  1575,  2092,  1555,  1727,  1575,
    1728,  2206,  1558,  2375,  1034,  1036,  1563,  1564,  1565,  1566,
     510,  1570,  1571,   932,  2108,  1660,   908,   789,  2128,   816,
    1930,  1304,   792,   791,  2192,   914,  2346,  1575,    25,  -503,
    -503,   910,   913,  1745,   933,   934,  1661, -1467, -1467, -1467,
     935,  1666,  1667,  1668,  1669,  1670,  1671,  1299,   939,  2411,
     510,   817,  2411,  2376,  2193,    30,   911,  1575,  2208,  1745,
    2274,  2377,  2327,  1304,  2368,  2328,  1300,  1575,   820,    27,
     789,   910,   791,  2395,  -620,  2398,  1304,  1127,  2399,  1406,
    1353,  1127,    28,  1127,   941,  -621,   788,   793,   788,  2378,
    1407,  2403,    50,   910,   852,  2156,   916,  2159,  1662,  2409,
     821,   765,  2410,   767,  2251,    29,   914,   726,  2413,   728,
     499,  2410,   799,   944,  -624,  1130,   793,  1747,   945,  1472,
    -622,  1513,   910,   908,   510,   791,  2424,  2449,  1014,  2425,
    2450,   800,  2223,  2478,   918,    21,  2425,   946,  1747,   947,
     913,   952,  1773,  2438,   954,  1776,   910,  1481,  2211,  2366,
     955,   956,  2146,   792,  1342,  1343,  1344,  2379,  1345,  1346,
    1347,  1348,  1349,  1350,  2479,   793,   957,  1304,  2380,   544,
      25,  1745,    54,   958,   542,   965,   543,  1128,   966,   546,
     801,  1128,   976,  1128,  2487,  1729,  2492,   852,  1016,  2410,
    2506,  2212,  1018,  2507,  1019,  1242,  2232,  2233,  2548,  2549,
    2570,   852,  1135,  2571,    86,  1831,  2583,  2213,  1032,  2410,
    1138,    27,   916,    50,  2602,  1144,   769,  2425,   793,   916,
     771,  1174,  2178,  1176,    28, -1010,   789,  2353,   789,  1182,
    1203,  1202,  1204,  1209,  1211,   918,  1215,  1210,  1849,   908,
    1222,  1223,  1227,  1237,  1239,  1242,   908,    29,  1243,  1247,
     499,  1785,  1248,  1255,  1242,   499,   499,   499,  1258,  1259,
    2070,    30,    87,  1261,  1271,   925,   802,  1286,   433,   936,
     942,   910,   499,  1292,   499,  1310,   916,  1560,   575,  1567,
    1976,   791,  1316,   791,  1311,   633,  1368,  1127,  1663,  1664,
    1665,   981,  1666,  1667,  1668,  1669,  1670,  1671,  1369,  1381,
    2214,  1392,  1627,   908,  1398,    21,  1409,  1410,    88,  1561,
     970,  1568,  2435,  1599,   803,  1412,   918,   804,  1432,  1353,
    1433,   914,  2067,  1447,  1460,  1852,  1475,  1458,   805,  2301,
    1857,  1858,  1860,  1468,  1467,   518,  2310,  1494,  1495,  1482,
      25,  1496,  1497,  1515,  1519,  1521,   911,  1873,  2381,  1875,
     970,  2382,  1522,  1572,  1977,  1576,   882,  1580,  1584,   806,
    1585,  1933,  1952,  1586,  1602,  1600,  1603,  1399,  1604,  1608,
    1610,   510,  1868,  1611,   793,  1616,   793,  1618,   910,  1619,
    1620,    27,  1621,  1720,  1622,  1978,   911,  1128,   510,   632,
    1623,   916,  1656,  1956,    28,  1624,  1657,  1658,  1659,  1737,
    1979,   499,   499,   499,  1966,   808,  1747,  1974,   911,  1637,
    1980,  1974,  1988,  1627,  1638,  1640,  1641,    29,   908,    50,
    1737,    90,  1642,    91,   509,  1645,   809,   916,  2455,   914,
     913,    30,  1649,  1646,  1681,  1648,  1981,   911,  2353,  2453,
    1652,  1674,  2397,  1680,  1682,    92,   811,  1683,    93,  1481,
    1230,  1135,   916,  2330,   908,   916,  1702,  2288,  1684,  1691,
    1697,   911,  1723,  1718,  1694,   499,  1695,   433,  1696,  1709,
     913,  1242,  1196,  1242,  1719,  1266,  1961,  1962,  1963,   908,
    1753,  1721,   908,  1722,  1748,  1765,  1767,  1127,  2442,  1774,
    1781,   433,   913,  2059,   910,  2435,  1787,  1793,  -505,  2072,
    -506,   910,  1792,  1795,  2146,   915,   433,   433,   433,   433,
     433,   433,   433,   433,   433,   433,  1849,  1796,  1797,  1799,
    2402,   913,  1982,  1801,  1802,   499,  1805,  2520,  1808,  1821,
    1823,   918,  1196,  2402,  1836,  1842,  1843,  1844,  1861,  1865,
    2024,  1869,  1862,  1866,  1266,   913,   980,   499,  1872,   981,
    1874,  2598,  1877,   982,   983,   984,  1878,  1298,   910,  1889,
    1890,  1894,  1677,    50,  1656,  1676,  1932,  1927,  1928,  1929,
     985,  2025,  1127,  1940,  2103,   519,  1127,  1941,   987,  1953,
    2505,  1944,  1730,  1967,  1994,   988,   911,  1128,  1975,  1661,
    2000,  1991,  1989,  2444,  2067,  2058,  2002,  2004,  2006,  2003,
    2091,   617,  2008,  2012,  2023,  2027,  2289,  2019,  2039,   989,
    2076,  2077,  2078,  2079,  2080,  2081,  2082,  2083,  2084,  2085,
    2041,  2057,  1278,   882,  2139,   517,  2088,   499,   499,   499,
     499,  2094,   972,  2095,  1974,  1988,  2099,  -473,  1974,   918,
    2488,  2149,  -473,  2104,  2106,  1747,  2520,  2113,  2180,  1747,
    2111,  1662,  2118,  2112,  2152,  2164,  2115,  2153,  2121,  2569,
    2122,  2160,  2136,   916,  2147,  2175,  2148,  2177,  2150,  2165,
     913,   970,  1128,   910,  2161,  2500,  1128,  2166,  2168,  2169,
    1773,  2171,   915,  2172,  2173,  1481,  1964,   518,  1968,  1353,
     908,   980,  2186,   911,   981,  2194,  2198,  1196,  1127,  2221,
     617,   618,  2140,  2141,  2142,  2143,  2222,  -473,  2236,   910,
    2179,  2181,  2226,  2237,    21,  2238,  2239,  2246,  2247,   914,
     990,  2248,  2230,   987,  2260,   991,  2480,  2263,  2264,  2261,
   -1467,  2267,  2268,  2269,   910,  2271,  2272,   910,  2489,  2292,
    2279,  2308,  2285,  2298,  2313,  2319,   992,   993,  -473,    25,
    2322,  2321,  2324,  1167,   989,  1127,  2329,   519,  1242,   914,
    2338,   994,  2341,  2342,  1594,  2343,  2344,  2367,  2370,  2371,
    2372,  2396,  2385,  2386,  2400,  2405,  2265,   913,  2408,  2421,
    2416,   914,  2414,   915,   882,   882,   882,  2420,  2426,  2440,
      27,   995,  2443,  2445,   996,  2448,  2456,  2252,  1128,  2476,
     618,  2473,  2474,    28,  2486,  2475,  2494,  2495,   997,   911,
     914,   998,  2504,  2508,  2337,  2510,   911,  1966,  1974,   617,
     433,  2511,  1747,  1710,    50,  2513,    29,  1747,  2516,  2529,
    1747,  1966,  2523,  2297,   914,  2300,  2530,  2534,  2203,  2535,
      30,  1663,  1664,  1665,  2204,  1666,  1667,  1668,  1669,  1670,
    1671,  2537,  2559,  2546,  2318,  1128,  2205,  1954,  2565,  2584,
    2578,  2591,  1575,  2574,   915, -1467,  2601,  2594,  2596,  2603,
   -1467,  2592,  2604,   911,   575,   433,  2593,  2618,  2621,   757,
    2056,  2625,  2060,   499,  2206,  1547,  2207,  1819,  2182,  2016,
    2499,  2555,   520,   913,  2093,  2561,  2312,  2612,   999,  2229,
     913,  2072,  2439,  2597,  2384,  2590, -1467,   433,   433,  1804,
    1193,  1826,  2098,  2557,  1850,  2061,  2595,  1800,  1196,   618,
    2556,   433,  1268,  1851,  2465,  2517,  2599,  1737,  2087,   918,
    1024,  1737,  1491,  2390,   499,  1783,  1170,  2318,  1360,  1794,
    1511,  2208,  1136,  1171,  2001,   910,  2493,  2176,  2369,  1510,
    1175,  1764,  1970,   997,   510,   433,  2145,   913,  2339,   914,
      50,    50,  1747,  2158,  2407,   799,  1965,  2209,  2300,   918,
    2252,  2485,  2484,  2490,  1617,  2491,  2311,  2550,  2419,  2331,
    2551,  2545,  1786,   433,   800,  1716,  1632,  1437,   911,  1761,
    1854,   918,   499,  2477,  1714,  1000,  1281,  1612,  1001,  1002,
    1003,  1462,  1004,  1005,  1006,  1007,  1008,  1009,  1139,  2391,
    2017,  2349,  2350,  1464,   575,  1647,  1446,     0,   869,     0,
     918,     0,  2458,     0,   911,  2373,  2210,     0,     0,     0,
       0,  2211,  2466,   801,    86,     0,     0,     0,   616,     0,
     499,     0,     0, -1467,   918,     0,     0,    50,     0,   911,
       0,     0,   911,     0,     0, -1010,     0,     0,     0,     0,
       0,   722,   722,     0,     0,     0,   914,  2431,     0,  1966,
       0,     0,   913,  2470,  2212,   433,     0,     0,   722,   915,
    2297,     0,     0,     0,     0,     0,     0,  2422,     0,   882,
    2213,     0,    87,     0,     0,  2318,   575,   575,   575,     0,
       0,     0,     0,     0,  1737,  1653,  1654,     0,   913,  1737,
    1673,     0,  1737,     0,     0,  2469,     0,   869,     0,   802,
       0,     0,  2521,  2496,  2522,     0,     0,     0,  2527,  2528,
       0,  1242,  1242,   913,     0,  1493,   913,     0,    88,     0,
   -1467,  2354,     0,  1698,  1699,     0,   499,  1004,  1005,  1006,
    1007,  1008,  1009,     0,     0,     0,  2297,   722,     0,     0,
       0,     0,     0,     0,  2419,     0,     0,   803,     0,  2073,
     804,     0,     0,  2072,  1481,     0,     0,     0,     0,     0,
       0,   805,   914,  2214,  2355,     0,     0,   915,     0,   914,
     616,     0,     0,  1242,     0,   616,   722,   919,    50,     0,
    1196,     0,     0,     0,     0,     0,    89,  2318,     0,  2356,
       0,     0,   806,   722,     0,     0,     0,     0,     0,     0,
      50,  2536,   575,     0,     0,     0,     0,     0,  2357,     0,
       0,  2573,  2358,     0,     0,     0,   869,     0,     0,     0,
       0,     0,     0,   722,  1737,     0,   914,     0,     0,     0,
       0,    90,  2359,    91,   970,  2360,     0,     0,   808,     0,
     911,     0,   722,   722,   722,     0,   722,     0,     0,  2361,
       0,  2613,     0,     0,     0,    92,   918,     0,    93,   809,
       0,     0,     0,     0,     0,     0,   722,     0,     0,     0,
       0,   499,     0,     0,     0,     0,     0,     0,     0,   811,
       0,     0,     0,     0,     0,     0,   616,   616,     0,     0,
       0,   722,  1126,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    50,     0,     0,   882,     0,     0,     0,
       0,     0,     0,     0,   882,     0,     0,     0,  1360,  1360,
       0,   722,     0,  1360,   913,   722,   722,     0,     0,     0,
    2362,     0,     0,     0,     0,     0,   722,     0,  2363,     0,
       0,   914,     0,     0,     0,     0,  2624,     0,     0,     0,
       0,     0,     0,    50,   919,     0,  1360,  1360,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   918,     0,     0,     0,     0,   914,     0,  2234,
    2364,     0,     0,     0,     0,     0,  1903,  1904,  1905,  1906,
       0,     0,  1910,  1911,  1912,  1913,  1914,  1915,  1916,  1917,
    1918,  1919,   914,     0,  1126,   914,     0,     0,   868,     0,
       0,     0,     0,   868,   616,     0,     0,     0,     0,     0,
     980,     0,     0,   981,     0,     0,     0, -1467, -1467, -1467,
       0,     0,     0,     0,     0,     0,   918,     0,     0,     0,
       0,     0,  1946,  1947,     0,     0,     0,     0,   799,     0,
       0,     0,   987,     0,     0,   919,     0,   915,     0,   988,
       0,    50,     0,     0,     0,     0,     0,   800,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   722,     0,
       0,     0,     0,   989,   722,   632,     0,   722,  1656,     0,
       0,   722,  1657,  1658,  1659,     0,     0,   915,     0,   722,
     722,     0,     0,     0,     0,     0,     0,   722,     0,  1935,
     722,   722,   722,   722,   799,     0,   801,     0,     0,   915,
     722,   722,   868,     0,   868,   868,     0,     0,     0,     0,
       0,     0,     0,   800,     0,     0,   919,   722,   722,   722,
     722,  1126,     0,     0,     0,   722,     0,     0,   915,   722,
       0,  2073,     0,   722,     0,     0,   722,   722,   722,   722,
     722,   722,   722,   722,   722,     0,     0,   722,     0,     0,
       0,     0,   915,     0,   722,     0,   722,     0,     0,     0,
       0,  2049,   801,  2047,     0,     0,     0,   918,     0,     0,
    2048,     0,     0,   868,   990,     0,   868,   868,     0,   991,
       0,     0,   802,     0,     0,     0,   980,     0,     0,   981,
       0,     0,   918,   914,     0,   918,     0,     0,     0,  1360,
    1360,  1360,  1360,     0,     0,  1360,  1360,  1360,  1360,  1360,
    1360,  1360,  1360,  1360,  1360,   994, -1372,     0,   987,     0,
       0,     0,     0,     0,     0, -1467,     0,  2049,     0,     0,
     803,     0,     0,   804,     0,     0,     0,  1283,  1285,     0,
     980,     0,     0,   981,   805,     0,     0,     0,   802,   989,
       0,     0,     0,     0,     0,  1360,  1360,     0,     0,     0,
       0,     0,   997,     0,     0,  1661,     0,     0,     0,     0,
     722,     0,   987,     0,     0,   806,     0,   915,   632, -1467,
       0,  1656,     0,     0,     0,  1657,  1658,  1659,   722,     0,
       0,     0,     0,     0,     0,     0,   803,   722,   722,   804,
       0,     0,  1936,   989,     0,     0, -1372,  1317,  1318,     0,
     805,     0,  2050,     0,     0,  1330,     0,     0,  1945,  1333,
    1334,   808,     0,     0,     0,     0,     0,  1662,     0,     0,
       0,   919,     0,     0,  1370,     0,  1371,  1126,     0,  1126,
       0,   806,   809,     0,     0,     0,     0,     0,     0,  1382,
    1384,     0,   999,     0,     0,     0,     0,     0, -1372,     0,
   -1467,     0,   811,     0,     0, -1467,     0,     0,     0,     0,
   -1372,     0,  1948,     0,     0, -1372,     0,     0,     0,     0,
   -1372,     0,     0,     0,   915,     0,     0,   808,     0, -1372,
       0,     0, -1372,     0,     0,     0,     0,     0,     0,     0,
       0, -1467,     0,  2073,     0,     0,  1126,     0,   809,     0,
       0,     0,     0,     0, -1467,     0,     0,     0,     0, -1467,
   -1372,   616,     0,   722,   722,   722,     0,  2270,   811,     0,
    2051,     0,     0,  2052,     0,     0,     0, -1374,     0,   919,
   -1372,     0,     0,     0,     0,   722,   722,     0,   997,  1000,
       0,   722, -1467, -1467, -1467, -1467,  1004,  1005,  1006,  1007,
    1008,  1009,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1661,     0,
     632, -1372,     0,  1656, -1372,     0,     0,  1657,  1658,  1659,
   -1372,   722,   722,   722,     0,     0,   722,     0,     0,     0,
     915,     0,   997,     0,  2130,     0,     0,   915,   722,   722,
     722,   722,     0,     0,     0,  2332,   722,  1663,  1664,  1665,
       0,  1666,  1667,  1668,  1669,  1670,  1671, -1374,     0,   722,
     722,     0,  1204,   722,     0,  1500,  1500,     0, -1467,     0,
    1662,     0,     0,     0,     0,     0, -1372,   722,     0,   722,
       0,   722,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,   722,     0,     0,     0,     0,     0,     0,     0, -1374,
    2393,     0,   722,     0,   722,   722,   722,     0,     0,   868,
       0, -1374, -1467,     0,     0,   722, -1374,     0,  1730,   868,
       0, -1374,   868,   722,     0,     0,     0,     0,     0,     0,
   -1374,     0,     0, -1374,     0,     0,     0,   722,     0,     0,
       0,  -438,     0,     0,     0, -1372,     0,     0,     0,     0,
       0,     0,   722,  -438,     0, -1467,     0,     0,  -438,     0,
       0, -1374,  1004,  1005,  1006,  1007,  1008,  1009,     0, -1372,
     722, -1372, -1372,     0,     0,     0,     0,     0,     0,   868,
    1360, -1374,     0,     0,     0,     0,     0,     0,     0,  1126,
    1126,  1126,     0,  1625,     0,     0,     0,     0,     0,   915,
    1661,     0,     0,  -438,     0,     0,     0, -1372,     0, -1467,
   -1372, -1372, -1372,     0,     0,     0,  1004,  1005,  1006,  1007,
    1008,  1009, -1374,  -438,     0, -1374,     0,     0,     0,     0,
       0, -1374,     0,     0,     0,   915,     0,     0,     0,     0,
     980,     0,     0,   981,   705,   705,     0,     0,     0,   919,
    1663,  1664,  1665,     0,  1666,  1667,  1668,  1669,  1670,  1671,
     915,     0,  1662,   915,  -438,     0,     0,     0,  1360,     0,
       0,     0,   987,  -438,     0,     0,     0,     0,     0, -1467,
       0,     0,     0,     0,     0,     0,   722, -1374,     0,   919,
       0,     0,     0,     0,     0,     0,   722,     0,     0,     0,
       0,     0,   722,   989,     0,   722,     0,     0,     0,     0,
       0,   919,   722,   722,   722,   722,     0,     0,   722,   722,
     722,   722,   722,   722,   722,   722,   722,   722,     0,     0,
       0,   722,   722,  1360,     0,     0,     0,     0,     0,  1730,
     919,     0,     0,     0,     0,   722,     0,     0,     0,  1758,
       0,     0,   722,     0,     0,   722,     0,   722,     0,     0,
       0,     0,     0,     0,   919,   722, -1374,     0,   722,   722,
       0,     0,  1949,   722,   722,     0,     0,     0,     0,   879,
       0,     0,  1790,  1790,     0,     0,     0,     0,     0,   722,
   -1374,   722, -1374, -1374,     0,     0,   927,   632,     0,     0,
    1656, -1388,     0,   722,  1657,  1658,  1659,     0,  -438,   722,
       0,     0,     0,     0, -1467,     0,     0,     0,     0, -1467,
     722,  2131,     0,     0,     0,     0,   951,     0, -1374,     0,
       0, -1374, -1374, -1374,     0,     0,   722,     0,     0,     0,
     980,     0,     0,   981,     0,   967,   968,   969,     0,   971,
       0,     0,  1663,  1664,  1665, -1467,  1666,  1667,  1668,  1669,
    1670,  1671,     0,     0,     0,     0,     0,     0,     0,  1017,
     736,   915,   987,   755,   737,     0,     0,     0,     0, -1467,
       0,     0,     0,     0,  1126,     0,     0,     0,  1126,   919,
    1126, -1388,     0,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,   997,   989,     0,     0,     0,   980,     0,     0,
     981,  1879,  1881,     0,     0,     0,  1888,     0,     0,     0,
       0,     0,     0,     0,  1149,     0,     0,     0,  1161,  1166,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   987,
       0,     0,     0, -1388,     0,     0, -1467,   722,     0,     0,
       0,     0,     0,     0,     0, -1388,     0,     0,     0,     0,
   -1388,     0,     0,     0,     0, -1388,     0,     0,     0,     0,
     989,     0,  2134,     0, -1388,     0,     0, -1388,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     722,   722, -1467,     0,     0,   722,   919,  1661,     0,     0,
     722,     0,     0,   722,   722, -1388,     0,     0,   722,     0,
       0,     0,     0,     0, -1467,     0,  1012,     0,     0, -1467,
       0,     0,     0,     0,     0, -1388,     0,     0,     0,     0,
     722,     0,     0,   632,   722,     0,  1656,     0,     0,     0,
    1657,  1658,  1659,     0,     0,     0,   722,     0,     0,     0,
       0,     0,     0,     0,   722, -1467,     0,     0,     0,  1662,
    1012,   722,     0,     0,     0,     0, -1388,     0,     0, -1388,
       0,     0,     0,     0,     0, -1388,     0,     0,     0,     0,
       0, -1467,     0,     0,     0,     0, -1467,  1314,     0, -1467,
       0,     0,     0,     0,  1126,     0,  1004,  1005,  1006,  1007,
    1008,  1009,   997,   722,     0,     0,     0,     0,     0,     0,
    1337,     0,   919,  1354,     0,     0,  1365,     0,     0,   919,
       0,     0, -1467,  1372,  1377,     0,     0,   868,     0,     0,
       0, -1388,     0,     0,     0,     0,     0,     0,     0,     0,
    1387,  1388,  1389,  1390,     0,     0,     0,     0,  1397,     0,
       0,     0,  1408,     0,     0,     0,  1411,     0,     0,  1418,
    1419,  1420,  1421,  1422,  1423,  1424,  1425,  1426,     0,   997,
    1427,  2110,     0,   722,     0,     0,   919,   705,     0,   879,
       0,     0,     0,  1730,     0,   722,   722,     0,     0,   722,
    1012,     0, -1467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   722,     0,     0,     0,     0,   722,     0,     0,
   -1388,     0,   722,     0,     0,   722,   722,     0,     0,     0,
       0,     0,     0,   722,   722,     0,     0,     0,     0,     0,
       0,     0,     0, -1467, -1388,     0, -1388, -1388,  1012,   722,
       0,   722,     0,     0,     0,     0,     0,     0,     0,  1663,
    1664,  1665,     0,  1666,  1667,  1668,  1669,  1670,  1671, -1467,
       0,   722,  1012,     0,     0,     0,     0,  1361,     0,     0,
       0,     0, -1388,     0,     0, -1388, -1388, -1388,  1012,  1012,
    1012,     0,  1012,     0,   -35,     0,     0,     0,     0, -1467,
       0,   919,     0,  1465,  1126,  1662,  1004,  1005,  1006,  1007,
    1008,  1009,     1,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     2,     0,     3,     4,     0,     0,     0,     0,
     968,   969,   722,     0,     0,     0,   722,   919,  1012,     0,
       5,     0,     0,     0,     0,     0,     0,     0,     0,   868,
       0,     0,     0,   722,   868,     0,     0,   722,     0,  1012,
       6,     0,   919,     0,     0,   919, -1467,   722,  1283,  1285,
       0,     7,     0,  1004,  1005,  1006,  1007,  1008,  1009,   722,
       0,     0,     8,     0,     9,     0,     0,     0,     0,  1126,
       0,     0,   979,  1126,   722,     0,     0,   980,     0,     0,
     981,    10,     0,     0,   982,   983,   984,     0,     0,     0,
       0,     0,     0,     0,     0,    11,     0,     0,   616,     0,
       0,   985,     0,     0,   986,     0,    12,     0,     0,   987,
       0,     0,    13,     0,     0,     0,   988,     0,     0,     0,
      14,     0,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   879,  1614,  1615,     0,
     989,   722,     0,     0,   722,     0,     0,     0,     0,     0,
    1012,     0,     0,   722,     0,     0,     0,     0,     0,  1630,
       0,   722,  1012,     0,  1636,     0,     0,  1012,     0,     0,
     722,     0,     0,     0,     0,  1663,  1664,  1665,     0,  1666,
    1667,  1668,  1669,  1670,  1671,     0,     0,     0,     0,     0,
     722,   436,     0,     0,     0,  1126,     0,   616,     0,     0,
      16,     0,     0,     0,     0,     0,  1655,     0,     0,     0,
    1283,  1285,     0,     0,     0,     0,     0,     0,     0,   868,
       0,  1377,     0,  1377,  1377,     0,   722,   722,     0,  1693,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,     0,     0,     0,     0,     0,     0,
       0,   990,  1126,   919,     0,     0,   991,     0,   438,     0,
    1712,     0,  1715,     0,  1717,     0,     0,     0,     0,    17,
       0,     0,    18,     0,     0,     0,     0,   992,   993,     0,
       0,     0,   722,     0,   722,     0,     0,     0,     0,     0,
       0,     0,   994,     0,     0,     0,     0,   879,   879,   879,
       0,    19,     0,     0,     0,     0,     0,     0,  1760,    20,
       0,     0,   439,     0,     0,  1012,   616,     0,     0,     0,
     440,    21,   995,     0,     0,   996,     0,     0,     0,    22,
    1149,     0,   441,    23,     0,     0,   868,     0,  1012,   997,
       0,     0,   998,    24,     0,  1166,     0,     0,   722,   722,
       0,     0,     0,     0,     0,  1012,    25,  1361,  1361,     0,
    1672,   442,  1361,  1798,     0,     0,  1012,     0,     0,     0,
       0,     0,     0,  1012,   786,     0,     0,     0,  1012,     0,
     787,     0,     0,     0,     0,     0,     0,   799,  1012,  1012,
    1012,  1012,    26,     0,     0,  1361,  1361,    27,  1012,     0,
       0,     0,     0,     0,     0,     0,   800,   443,     0,  1012,
      28,     0,  1012,     0,     0,     0,     0,     0,     0,  1012,
    1012,  1012,  1012,  1012,  1012,  1012,  1012,  1012,  1012,   999,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
     -35,     0,     0,     0,     0,   801,     0,     0,     0,     0,
       0,     0,     0,     0,   444,     0,  1012,     0,     0,     0,
       0,     0,     0,     0,     0,   786,     0,     0,   445,  1893,
       0,   787,     0,     0,   788,     0,     0,     0,   799,  1897,
       0,   868,     0,     0,     0,  1898,     0,     0,  1900,     0,
       0,     0,     0,     0,     0,     0,     0,   800,   980,     0,
     446,   981,   447,     0,     0,   982,   983,   984,     0,     0,
     448,     0,     0,   449,  1920,  1921,  1000,     0,     0,  1001,
    1002,  1003,   985,  1004,  1005,  1006,  1007,  1008,  1009,     0,
     987,   802,   450,     0,     0,  1934,     0,   988,  1937,     0,
    1939,     0,     0,   451,     0,     0,   801,     0,  1943,     0,
     452,     0,     0,     0,     0,     0,  1950,  1951,     0,   453,
       0,   989,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   788,     0,     0,     0,   803,
       0,     0,   804,     0,     0,     0,  1993,     0,     0,     0,
     454,     0,   879,   805,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2005,     0,  1012,  1012,     0,     0,     0,
       0,     0,     0,     0,   789,     0,     0,     0,     0,  2018,
       0,  1012,     0,     0,   806,     0,     0,  1012,     0,     0,
       0,     0,   802,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1672,  1672,  1012,     0,  1361,  1361,
    1361,  1361,     0,     0,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1361,  1361,  1672,   807,     0,     0,     0,   791,
     808,     0,   990,     0,     0,     0,     0,   991,   980,     0,
     803,   981,     0,   804,  1012,   982,   983,   984,     0,  1672,
    1672,   809,     0,     0,   805,     0,     0,   810,   992,   993,
       0,     0,   985,  1012,  1361,  1361,  1012,     0,  1012,     0,
     987,   811,     0,   994,     0,   789,     0,   988,     0,     0,
       0,     0,     0,     0,     0,   806,     0,     0,     0,     0,
    2114,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   989,     0,   995,     0,     0,   996,     0,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,     0,
     997,     0,   793,   998,     0,     0,  1549,     0,     0,     0,
     791,   808,     0,  2124,  2125,     0,     0,     0,  2126,     0,
       0,     0,     0,  2129,     0,     0,  2132,  2133,     0,  1012,
       0,  2137,   809,     0,     0,     0,     0,     0,  1550,   980,
       0,     0,   981,     0,     0,     0,   982,   983,   984,     0,
       0,     0,   811,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   985,     0,     0,     0,     0,     0,   879,
       0,   987,     0,     0,     0,     0,     0,   879,   988,     0,
       0,     0,     0,     0,   705,     0,     0,     0,     0,     0,
     999,     0,   990,     0,     0,     0,     0,   991,     0,     0,
       0,     0,   989,   793,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   992,   993,
       0,     0,     0,     0,  1012,     0,  2224,     0,  1012,  1012,
       0,  1012,     0,   994,  1672,  1672,  1672,  1672,     0,     0,
       0,  1672,  1672,  1672,  1672,  1672,  1672,  1672,  1672,  1672,
    1672,  1012,  1012,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   995,     0,  1012,   996,     0,  1012,     0,
    1012,     0,     0,     0,  1012,     0,     0,  1672,  1672,     0,
     997,  1012,  1012,   998,     0,     0,     0,  1000,     0,     0,
    1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,
       0,     0,     0,     0,  1380,     0,     0,     0,  2275,  2276,
       0,     0,  2277,   990,     0,     0,     0,     0,   991,     0,
       0,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1012,     0,     0,   992,
     993,     0,     0,     0,     0,     0,  2306,  2307,     0,  1012,
       0,     0,     0,     0,   994,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2320,     0,   980,     0,     0,   981,
     999,     0,     0,   982,   983,   984,     0,     0,     0,     0,
       0,     0,     0,     0,   995,     0,     0,   996,     0,     0,
     985,     0,     0,     0,     0,     0,     0,     0,   987,     0,
       0,   997,     0,     0,   998,   988,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   989,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1012,     0,     0,     0,  1361,
       0,     0,     0,     0,     0,  1012,  1012,  1012,     0,     0,
    1012,     0,     0,  1012,  1012,     0,  2404,  1000,  1012,     0,
    1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,
     971,     0,     0,     0,  1896,     0,     0,     0,     0,     0,
       0,   999,  2423,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2437,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1361,     0,     0,
     990,     0,     0,     0,     0,   991,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   992,   993,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   994,     0,     0,     0,     0,     0,     0,  1000,     0,
       0,  1001,  1002,  1003,  2306,  1004,  1005,  1006,  1007,  1008,
    1009,  1672,  1361,     0,     0,  1931,  1012,  1012,  1012,     0,
       0,   995,     0,     0,   996,     0,     0,     0,     0,     0,
       0,     0,     0,  2515,     0,     0,     0,     0,   997,     0,
       0,   998,     0,     0,     0,     0,     0,  1012,  1012,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1012,     0,     0,     0,     0,     0,     0,     0,  2542,
    2542,     0,     0,  1672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2542,   999,     0,
       0,     0,     0,     0,  1672,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1012,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1012,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2542,  2616,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1000,     0,     0,  1001,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,     0,     0,
       0,     0,  2026,     0,     0,     0,     0,   628,   629,   471,
     630,   631,   632,   633,   634,     0,  1012,     0,     0,     0,
       0,     0,    97,    98,    99,   100,   101,   102,   103,   104,
    1449,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,  1012,   111,   112,   113,   587,   114,   115,
     116,   117,   635,   588,   636,   637,     0,   121,   122,   123,
     124,   125,   638,   639,   126,   127,   640,   641,   130,     0,
     131,   132,   133,   134,   642,     0,   643,     0,   136,   137,
     138,   139,   140,   590,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   591,   150,   151,   152,   644,
     645,   646,   647,   648,   649,   650,   153,   154,   155,   156,
     157,   158,   651,   652,   161,   653,   162,  1012,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,  1450,     0,   174,   175,   654,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   655,   190,   191,   192,   656,   657,   194,     0,   195,
     196,   658,   198,     0,   199,     0,   200,   593,     0,   594,
     201,   202,   203,   204,     0,   205,   659,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   595,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     596,   225,   226,   227,   228,   229,   660,   661,     0,   662,
       0,   233,   597,   598,   234,   599,   235,   236,   237,   238,
     239,     0,     0,   240,   663,   600,   242,   601,     0,   243,
     244,   245,   664,   665,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     666,   602,   667,   264,   265,   266,   267,   668,   268,   269,
     603,   270,   669,   670,   272,   671,   274,   275,   276,     0,
     277,   278,     0,     0,   672,   280,   281,     0,     0,   282,
     283,   604,   284,   605,   673,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   674,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   675,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,   606,   332,   333,
     334,   676,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   677,   350,
     351,   352,   353,   354,   607,   355,   356,   678,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   679,     0,   372,   373,     0,   374,   608,   375,
     376,   377,   378,   379,     0,   680,   681,     0,     0,   382,
     383,   682,   385,   683,   684,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     685,     0,   399,   400,   401,   402,   403,   404,   686,  1451,
     406,   610,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   687,     0,     0,     0,     0,     0,     0,   688,   689,
    1452,     0,     0,     0,     0,     0,     0,   691,  1453,     0,
       0,     0,   692,   628,   629,   471,   630,   631,   632,   633,
     634,     0,     0,     0,     0,     0,     0,     0,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,     0,     0,   109,   110,     0,
     111,   112,   113,   587,   114,   115,   116,   117,   635,   588,
     636,   637,     0,   121,   122,   123,   124,   125,   638,   639,
     126,   127,   640,   641,   130,     0,   131,   132,   133,   134,
     642,     0,   643,     0,   136,   137,   138,   139,   140,   590,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   591,   150,   151,   152,   644,   645,   646,   647,   648,
     649,   650,   153,   154,   155,   156,   157,   158,   651,   652,
     161,   653,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   654,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   655,   190,   191,
     192,   656,   657,   194,     0,   195,   196,   658,   198,     0,
     199,     0,   200,   593,     0,   594,   201,   202,   203,   204,
       0,   205,   659,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   595,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   596,   225,   226,   227,
     228,   229,   660,   661,     0,   662,     0,   233,   597,   598,
     234,   599,   235,   236,   237,   238,   239,     0,     0,   240,
     663,   600,   242,   601,     0,   243,   244,   245,   664,   665,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   666,   602,   667,   264,
     265,   266,   267,   668,   268,   269,   603,   270,   669,   670,
     272,   671,   274,   275,   276,     0,   277,   278,     0,     0,
     672,   280,   281,     0,     0,   282,   283,   604,   284,   605,
     673,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   674,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   675,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,   606,   332,   333,   334,   676,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    21,     0,   345,
     346,   347,   348,   349,   677,   350,   351,   352,   353,   354,
     607,   355,   356,   678,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   679,     0,
     372,   373,    25,   374,   608,   375,   376,   377,   378,   379,
       0,   680,   681,     0,     0,   382,   383,   682,   385,   683,
     684,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   685,     0,   399,   400,
     401,   402,   403,   609,   686,     0,   406,   610,   407,   408,
     409,   410,     0,     0,   411,     0,    28,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   687,     0,    29,
       0,     0,     0,     0,   688,   689,     0,     0,     0,     0,
       0,     0,     0,   691,  2415,     0,     0,     0,   692,   628,
     629,   471,   630,   631,   632,   633,   634,     0,     0,     0,
       0,     0,     0,     0,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   106,   107,   108,     0,     0,     0,     0,
       0,     0,     0,   109,   110,     0,   111,   112,   113,   587,
     114,   115,   116,   117,   635,   588,   636,   637,     0,   121,
     122,   123,   124,   125,   638,   639,   126,   127,   640,   641,
     130,     0,   131,   132,   133,   134,   642,     0,   643,     0,
     136,   137,   138,   139,   140,   590,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   591,   150,   151,
     152,   644,   645,   646,   647,   648,   649,   650,   153,   154,
     155,   156,   157,   158,   651,   652,   161,   653,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
       0,   172,   173,     0,     0,   174,   175,   654,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   655,   190,   191,   192,   656,   657,   194,
       0,   195,   196,   658,   198,     0,   199,     0,   200,   593,
       0,   594,   201,   202,   203,   204,     0,   205,   659,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   595,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   596,   225,   226,   227,   228,   229,   660,   661,
       0,   662,     0,   233,   597,   598,   234,   599,   235,   236,
     237,   238,   239,     0,     0,   240,   663,   600,   242,   601,
       0,   243,   244,   245,   664,   665,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   666,   602,   667,   264,   265,   266,   267,   668,
     268,   269,   603,   270,   669,   670,   272,   671,   274,   275,
     276,     0,   277,   278,     0,     0,   672,   280,   281,     0,
       0,   282,   283,   604,   284,   605,   673,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
     674,   298,   299,   300,   459,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   675,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,   330,   331,   606,
     332,   333,   334,   676,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    21,     0,   345,   346,   347,   348,   349,
     677,   350,   351,   352,   353,   354,   607,   355,   356,   678,
     358,     0,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   679,     0,   372,   373,    25,   374,
     608,   375,   376,   377,   378,   379,     0,   680,   681,     0,
       0,   382,   383,   682,   385,   683,   684,   387,   388,   389,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   685,     0,   399,   400,   401,   402,   403,   609,
     686,     0,   406,   610,   407,   408,   409,   410,     0,     0,
     411,     0,    28,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   687,     0,    29,     0,     0,     0,     0,
     688,   689,     0,     0,     0,     0,     0,     0,     0,   691,
       0,     0,     0,     0,   692,   628,   629,   471,   630,   631,
     632,   633,   634,     0,     0,     0,     0,     0,     0,     0,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   106,
     107,   108,     0,     0,     0,     0,     0,     0,     0,   109,
     110,     0,   111,   112,   113,   587,   114,   115,   116,   117,
     635,   588,   636,   637,  1373,   121,   122,   123,   124,   125,
     638,   639,   126,   127,   640,   641,   130,     0,   131,   132,
     133,   134,   642,     0,   643,     0,   136,   137,   138,   139,
     140,   590,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   591,   150,   151,   152,   644,   645,   646,
     647,   648,   649,   650,   153,   154,   155,   156,   157,   158,
     651,   652,   161,   653,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,     0,   172,   173,     0,
       0,   174,   175,   654,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   655,
     190,   191,   192,   656,   657,   194,     0,   195,   196,   658,
     198,     0,   199,     0,   200,   593,  1374,   594,   201,   202,
     203,   204,     0,   205,   659,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   595,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   596,   225,
     226,   227,   228,   229,   660,   661,     0,   662,     0,   233,
     597,   598,   234,   599,   235,   236,   237,   238,   239,     0,
    1375,   240,   663,   600,   242,   601,     0,   243,   244,   245,
     664,   665,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   666,   602,
     667,   264,   265,   266,   267,   668,   268,   269,   603,   270,
     669,   670,   272,   671,   274,   275,   276,     0,   277,   278,
       0,     0,   672,   280,   281,     0,     0,   282,   283,   604,
     284,   605,   673,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,   674,   298,   299,   300,
     459,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   675,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,     0,   330,   331,   606,   332,   333,   334,   676,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   677,   350,   351,   352,
     353,   354,   607,   355,   356,   678,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     679,     0,   372,   373,     0,   374,   608,   375,   376,   377,
     378,   379,     0,   680,   681,     0,  1376,   382,   383,   682,
     385,   683,   684,   387,   388,   389,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   685,     0,
     399,   400,   401,   402,   403,   404,   686,     0,   406,   610,
     407,   408,   409,   410,     0,     0,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   687,
       0,     0,     0,     0,     0,     0,   688,   689,     0,     0,
       0,     0,     0,     0,     0,   691,     0,     0,     0,     0,
     692,   628,   629,   471,   630,   631,   632,   633,   634,     0,
       0,     0,     0,     0,     0,     0,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   106,   107,   108,     0,     0,
       0,     0,     0,     0,     0,   109,   110,     0,   111,   112,
     113,   587,   114,   115,   116,   117,   635,   588,   636,   637,
       0,   121,   122,   123,   124,   125,   638,   639,   126,   127,
     640,   641,   130,     0,   131,   132,   133,   134,   642,     0,
     643,     0,   136,   137,   138,   139,   140,   590,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   591,
     150,   151,   152,   644,   645,   646,   647,   648,   649,   650,
     153,   154,   155,   156,   157,   158,   651,   652,   161,   653,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,     0,   172,   173,     0,     0,   174,   175,   654,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   655,   190,   191,   192,   656,
     657,   194,     0,   195,   196,   658,   198,     0,   199,     0,
     200,   593,     0,   594,   201,   202,   203,   204,     0,   205,
     659,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     595,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   596,   225,   226,   227,   228,   229,
     660,   661,     0,   662,     0,   233,   597,   598,   234,   599,
     235,   236,   237,   238,   239,     0,     0,   240,   663,   600,
     242,   601,     0,   243,   244,   245,   664,   665,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   666,   602,   667,   264,   265,   266,
     267,   668,   268,   269,   603,   270,   669,   670,   272,   671,
     274,   275,   276,     0,   277,   278,     0,     0,   672,   280,
     281,     0,     0,   282,   283,   604,   284,   605,   673,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,   674,   298,   299,   300,   459,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     675,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,   330,
     331,   606,   332,   333,   334,   676,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   677,   350,   351,   352,   353,   354,   607,   355,
     356,   678,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   679,     0,   372,   373,
       0,   374,   608,   375,   376,   377,   378,   379,     0,   680,
     681,     0,     0,   382,   383,   682,   385,   683,   684,   387,
     388,   389,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   685,     0,   399,   400,   401,   402,
     403,   404,   686,     0,   406,   610,   407,   408,   409,   410,
       0,     0,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   687,     0,     0,     0,     0,
       0,     0,   688,   689,   690,     0,     0,     0,     0,     0,
       0,   691,     0,     0,     0,     0,   692,   628,   629,   471,
     630,   631,   632,   633,   634,     0,     0,     0,     0,     0,
       0,     0,    97,    98,    99,   100,   101,   102,   103,   104,
    1159,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,   587,   114,   115,
     116,   117,   635,   588,   636,   637,     0,   121,   122,   123,
     124,   125,   638,   639,   126,   127,   640,   641,   130,     0,
     131,   132,   133,   134,   642,     0,   643,     0,   136,   137,
     138,   139,   140,   590,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   591,   150,   151,   152,   644,
     645,   646,   647,   648,   649,   650,   153,   154,   155,   156,
     157,   158,   651,   652,   161,   653,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   654,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   655,   190,   191,   192,   656,   657,   194,     0,   195,
     196,   658,   198,     0,   199,     0,   200,   593,     0,   594,
     201,   202,   203,   204,     0,   205,   659,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   595,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     596,   225,   226,   227,   228,   229,   660,   661,     0,   662,
       0,   233,   597,   598,   234,   599,   235,   236,   237,   238,
     239,     0,     0,   240,   663,   600,   242,   601,     0,   243,
     244,   245,   664,   665,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     666,   602,   667,   264,   265,   266,   267,   668,   268,   269,
     603,   270,   669,   670,   272,   671,   274,   275,   276,     0,
     277,   278,     0,     0,   672,   280,   281,     0,     0,   282,
     283,   604,   284,   605,   673,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   674,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   675,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,   606,   332,   333,
     334,   676,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   677,   350,
     351,   352,   353,   354,   607,   355,   356,   678,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   679,     0,   372,   373,     0,   374,   608,   375,
     376,   377,   378,   379,     0,   680,   681,     0,     0,   382,
     383,   682,   385,   683,   684,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     685,     0,   399,   400,   401,   402,   403,   404,   686,     0,
     406,   610,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   687,     0,     0,     0,     0,     0,     0,   688,   689,
       0,     0,     0,     0,     0,     0,     0,   691,     0,     0,
       0,     0,   692,   628,   629,   471,   630,   631,   632,   633,
     634,     0,     0,     0,     0,     0,     0,     0,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,     0,     0,   109,   110,     0,
     111,   112,   113,   587,   114,   115,   116,   117,   635,   588,
     636,   637,     0,   121,   122,   123,   124,   125,   638,   639,
     126,   127,   640,   641,   130,     0,   131,   132,   133,   134,
     642,     0,   643,     0,   136,   137,   138,   139,   140,   590,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   591,   150,   151,   152,   644,   645,   646,   647,   648,
     649,   650,   153,   154,   155,   156,   157,   158,   651,   652,
     161,   653,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   654,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   655,   190,   191,
     192,   656,   657,   194,     0,   195,   196,   658,   198,     0,
     199,     0,   200,   593,     0,   594,   201,   202,   203,   204,
       0,   205,   659,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   595,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   596,   225,   226,   227,
     228,   229,   660,   661,     0,   662,     0,   233,   597,   598,
     234,   599,   235,   236,   237,   238,   239,     0,     0,   240,
     663,   600,   242,   601,     0,   243,   244,   245,   664,   665,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   666,   602,   667,   264,
     265,   266,   267,   668,   268,   269,   603,   270,   669,   670,
     272,   671,   274,   275,   276,     0,   277,   278,     0,     0,
     672,   280,   281,     0,     0,   282,   283,   604,   284,   605,
     673,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   674,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   675,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,   606,   332,   333,   334,   676,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   677,   350,   351,   352,   353,   354,
     607,   355,   356,   678,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   679,     0,
     372,   373,     0,   374,   608,   375,   376,   377,   378,   379,
       0,   680,   681,     0,     0,   382,   383,   682,   385,   683,
     684,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   685,     0,   399,   400,
     401,   402,   403,   404,   686,     0,   406,   610,   407,   408,
     409,   410,     0,     0,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   687,     0,     0,
       0,     0,     0,     0,   688,   689,     0,     0,     0,     0,
       0,     0,     0,   691,  1363,     0,     0,     0,   692,   628,
     629,   471,   630,   631,   632,   633,   634,     0,     0,     0,
       0,     0,     0,     0,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   106,   107,   108,     0,     0,     0,     0,
       0,     0,     0,   109,   110,     0,   111,   112,   113,   587,
     114,   115,   116,   117,   635,   588,   636,   637,     0,   121,
     122,   123,   124,   125,   638,   639,   126,   127,   640,   641,
     130,     0,   131,   132,   133,   134,   642,     0,   643,     0,
     136,   137,   138,   139,   140,   590,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   591,   150,   151,
     152,   644,   645,   646,   647,   648,   649,   650,   153,   154,
     155,   156,   157,   158,   651,   652,   161,   653,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
       0,   172,   173,     0,     0,   174,   175,   654,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   655,   190,   191,   192,   656,   657,   194,
       0,   195,   196,   658,   198,     0,   199,     0,   200,   593,
    1374,   594,   201,   202,   203,   204,     0,   205,   659,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   595,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   596,   225,   226,   227,   228,   229,   660,   661,
       0,   662,     0,   233,   597,   598,   234,   599,   235,   236,
     237,   238,   239,     0,     0,   240,   663,   600,   242,   601,
       0,   243,   244,   245,   664,   665,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   666,   602,   667,   264,   265,   266,   267,   668,
     268,   269,   603,   270,   669,   670,   272,   671,   274,   275,
     276,     0,   277,   278,     0,     0,   672,   280,   281,     0,
       0,   282,   283,   604,   284,   605,   673,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
     674,   298,   299,   300,   459,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   675,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,   330,   331,   606,
     332,   333,   334,   676,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     677,   350,   351,   352,   353,   354,   607,   355,   356,   678,
     358,     0,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   679,     0,   372,   373,     0,   374,
     608,   375,   376,   377,   378,   379,     0,   680,   681,     0,
       0,   382,   383,   682,   385,   683,   684,   387,   388,   389,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   685,     0,   399,   400,   401,   402,   403,   404,
     686,     0,   406,   610,   407,   408,   409,   410,     0,     0,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   687,     0,     0,     0,     0,     0,     0,
     688,   689,     0,     0,     0,     0,     0,     0,     0,   691,
       0,     0,     0,     0,   692,   628,   629,   471,   630,   631,
     632,   633,   634,     0,     0,     0,     0,     0,     0,     0,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   106,
     107,   108,     0,     0,     0,     0,     0,     0,     0,   109,
     110,     0,   111,   112,   113,   587,   114,   115,   116,   117,
     635,   588,   636,   637,     0,   121,   122,   123,   124,   125,
     638,   639,   126,   127,   640,   641,   130,     0,   131,   132,
     133,   134,   642,     0,   643,     0,   136,   137,   138,   139,
     140,   590,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   591,   150,   151,   152,   644,   645,   646,
     647,   648,   649,   650,   153,   154,   155,   156,   157,   158,
     651,   652,   161,   653,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,     0,   172,   173,     0,
       0,   174,   175,   654,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   655,
     190,   191,   192,   656,   657,   194,     0,   195,   196,   658,
     198,     0,   199,     0,   200,   593,     0,   594,   201,   202,
     203,   204,     0,   205,   659,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   595,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   596,   225,
     226,   227,   228,   229,   660,   661,     0,   662,     0,   233,
     597,   598,   234,   599,   235,   236,   237,   238,   239,     0,
       0,   240,   663,   600,   242,   601,     0,   243,   244,   245,
     664,   665,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   666,   602,
     667,   264,   265,   266,   267,   668,   268,   269,   603,   270,
     669,   670,   272,   671,   274,   275,   276,     0,   277,   278,
       0,     0,   672,   280,   281,     0,     0,   282,   283,   604,
     284,   605,   673,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,   674,   298,   299,   300,
     459,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   675,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,     0,   330,   331,   606,   332,   333,   334,   676,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   677,   350,   351,   352,
     353,   354,   607,   355,   356,   678,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     679,     0,   372,   373,     0,   374,   608,   375,   376,   377,
     378,   379,     0,   680,   681,     0,     0,   382,   383,   682,
     385,   683,   684,   387,   388,   389,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   685,     0,
     399,   400,   401,   402,   403,   404,   686,  1999,   406,   610,
     407,   408,   409,   410,     0,     0,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   687,
       0,     0,     0,     0,     0,     0,   688,   689,     0,     0,
       0,     0,     0,     0,     0,   691,     0,     0,     0,     0,
     692,   628,   629,   471,   630,   631,   632,   633,   634,     0,
       0,     0,     0,     0,     0,     0,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   106,   107,   108,     0,     0,
       0,     0,     0,     0,     0,   109,   110,     0,   111,   112,
     113,   587,   114,   115,   116,   117,   635,   588,   636,   637,
       0,   121,   122,   123,   124,   125,   638,   639,   126,   127,
     640,   641,   130,     0,   131,   132,   133,   134,   642,     0,
     643,     0,   136,   137,   138,   139,   140,   590,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   591,
     150,   151,   152,   644,   645,   646,   647,   648,   649,   650,
     153,   154,   155,   156,   157,   158,   651,   652,   161,   653,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,     0,   172,   173,     0,     0,   174,   175,   654,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   655,   190,   191,   192,   656,
     657,   194,     0,   195,   196,   658,   198,     0,   199,     0,
     200,   593,     0,   594,   201,   202,   203,   204,     0,   205,
     659,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     595,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   596,   225,   226,   227,   228,   229,
     660,   661,     0,   662,     0,   233,   597,   598,   234,   599,
     235,   236,   237,   238,   239,     0,     0,   240,   663,   600,
     242,   601,     0,   243,   244,   245,   664,   665,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   666,   602,   667,   264,   265,   266,
     267,   668,   268,   269,   603,   270,   669,   670,   272,   671,
     274,   275,   276,     0,   277,   278,     0,     0,   672,   280,
     281,     0,     0,   282,   283,   604,   284,   605,   673,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,   674,   298,   299,   300,   459,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     675,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,   330,
     331,   606,   332,   333,   334,   676,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   677,   350,   351,   352,   353,   354,   607,   355,
     356,   678,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   679,     0,   372,   373,
       0,   374,   608,   375,   376,   377,   378,   379,     0,   680,
     681,     0,     0,   382,   383,   682,   385,   683,   684,   387,
     388,   389,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   685,     0,   399,   400,   401,   402,
     403,   404,   686,     0,   406,   610,   407,   408,   409,   410,
       0,     0,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   687,     0,     0,     0,     0,
       0,     0,   688,   689,     0,     0,     0,     0,     0,     0,
       0,   691,     0,     0,     0,     0,   692,   628,   629,   471,
     630,   631,   632,   633,   634,     0,     0,     0,     0,     0,
       0,     0,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,   587,   114,   115,
     116,   117,   635,   588,   636,   637,     0,   121,   122,   123,
     124,   125,   638,   639,   126,   127,   640,   641,   130,     0,
     131,   132,   133,   134,   642,     0,   643,     0,   136,   137,
     138,   139,   140,   590,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   591,   150,   151,   152,   644,
     645,   646,   647,   648,   649,   650,   153,   154,   155,   156,
     157,   158,   651,   652,   161,   653,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   654,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   655,   190,   191,   192,   656,   657,   194,     0,   195,
     196,   658,   198,     0,   199,     0,   200,   593,     0,   594,
     201,   202,   203,   204,     0,   205,   659,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   595,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     596,   225,   226,   227,   228,   229,   660,   661,     0,   662,
       0,   233,   597,   598,   234,   599,   235,   236,   237,   238,
     239,     0,     0,   240,   663,   600,   242,   601,     0,   243,
     244,   245,   664,   665,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     666,   602,   667,   264,   265,   266,   267,   668,   268,   269,
     603,   270,   669,   670,   272,   671,   274,   275,   276,     0,
     277,   278,     0,     0,   672,   280,   281,     0,     0,   282,
     283,   604,   284,   605,   673,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   674,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   675,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,   606,   332,   333,
     334,   676,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   677,   350,
     351,   352,   353,   354,   607,   355,   356,   678,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   679,     0,   372,   373,     0,   374,   608,   375,
     376,   377,   378,   379,     0,   680,   681,     0,     0,   382,
     383,   682,   385,   683,   684,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     685,     0,   399,   400,   401,   402,   403,   404,   686,     0,
     406,   610,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   687,     0,     0,     0,     0,     0,     0,  1162,  1163,
       0,     0,     0,     0,     0,     0,     0,   691,     0,     0,
       0,     0,   692,   628,  1498,   471,   630,   631,   632,   633,
     634,     0,     0,     0,     0,     0,     0,     0,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,     0,     0,   109,   110,     0,
     111,   112,   113,   587,   114,   115,   116,   117,   635,   588,
     636,   637,     0,   121,   122,   123,   124,   125,   638,   639,
     126,   127,   640,   641,   130,     0,   131,   132,   133,   134,
     642,     0,   643,     0,   136,   137,   138,   139,   140,   590,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   591,   150,   151,   152,   644,   645,   646,   647,   648,
     649,   650,   153,   154,   155,   156,   157,   158,   651,   652,
     161,   653,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   654,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   655,   190,   191,
     192,   656,   657,   194,     0,   195,   196,   658,   198,     0,
     199,     0,   200,   593,     0,   594,   201,   202,   203,   204,
       0,   205,   659,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   595,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   596,   225,   226,   227,
     228,   229,   660,   661,     0,   662,     0,   233,   597,   598,
     234,   599,   235,   236,   237,   238,   239,     0,     0,   240,
     663,   600,   242,   601,     0,   243,   244,   245,   664,   665,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   666,   602,   667,   264,
     265,   266,   267,   668,   268,   269,   603,   270,   669,   670,
     272,   671,   274,   275,   276,     0,   277,   278,     0,     0,
     672,   280,   281,     0,     0,   282,   283,   604,   284,   605,
     673,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   674,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   675,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,   606,   332,   333,   334,   676,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   677,   350,   351,   352,   353,   354,
     607,   355,   356,   678,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   679,     0,
     372,   373,     0,   374,   608,   375,   376,   377,   378,   379,
       0,   680,   681,     0,     0,   382,   383,   682,   385,   683,
     684,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   685,     0,   399,   400,
     401,   402,   403,   404,   686,     0,   406,   610,   407,   408,
     409,   410,     0,     0,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   687,     0,     0,
       0,     0,     0,     0,   688,   689,     0,     0,     0,     0,
       0,     0,     0,   691,     0,     0,     0,     0,   692,   628,
     629,   471,   630,   631,   632,   633,   634,     0,     0,     0,
       0,     0,     0,     0,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   106,   107,   108,     0,     0,     0,     0,
       0,     0,     0,   109,   110,     0,   111,   112,   113,   587,
     114,   115,   116,   117,   635,   588,   636,   637,     0,   121,
     122,   123,   124,   125,   638,   639,   126,   127,   640,   641,
     130,     0,   131,   132,   133,   134,   642,     0,   643,     0,
     136,   137,   138,   139,   140,   590,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   591,   150,   151,
     152,   644,   645,   646,   647,   648,   649,   650,   153,   154,
     155,   156,   157,   158,   651,   652,   161,   653,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
       0,   172,   173,     0,     0,   174,   175,   654,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   655,   190,   191,   192,   656,   657,   194,
       0,   195,   196,   658,   198,     0,   199,     0,   200,   593,
       0,   594,   201,   202,   203,   204,     0,   205,   659,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   595,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   596,   225,   226,   227,   228,   229,   660,   661,
       0,   662,     0,   233,   597,   598,   234,   599,   235,   236,
     237,   238,   239,     0,     0,   240,   663,   600,   242,   601,
       0,   243,   244,   245,   664,   665,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   666,   602,   667,   264,   265,   266,   267,   668,
     268,   269,   603,   270,   669,   670,   272,   671,   274,   275,
     276,     0,   277,   278,     0,     0,   672,   280,   281,     0,
       0,   282,   283,   604,   284,   605,   673,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
     674,   298,   299,   300,   459,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   675,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,   330,   331,   606,
     332,   333,   334,   676,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     677,   350,   351,   352,   353,   354,   607,   355,   356,   678,
     358,     0,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   679,     0,   372,   373,     0,   374,
     608,   375,   376,   377,   378,   379,     0,   680,   681,     0,
       0,   382,   383,   682,   385,   683,   684,   387,   388,   389,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   685,     0,   399,   400,   401,   402,   403,   404,
     686,     0,   406,   610,   407,   408,   409,   410,     0,     0,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   687,     0,     0,     0,     0,     0,     0,
     688,   689,     0,     0,     0,     0,     0,     0,     0,  2302,
       0,     0,     0,     0,   692,   628,   629,   471,   630,   631,
     632,   633,   634,     0,     0,     0,     0,     0,     0,     0,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   106,
     107,   108,     0,     0,     0,     0,     0,     0,     0,   109,
     110,     0,   111,   112,   113,   587,   114,   115,   116,  2539,
     635,   588,   636,   637,     0,   121,   122,   123,   124,   125,
     638,   639,   126,   127,   640,   641,   130,     0,   131,   132,
     133,   134,   642,     0,   643,     0,   136,   137,   138,   139,
     140,   590,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   591,   150,   151,  2540,   644,   645,   646,
     647,   648,   649,   650,   153,   154,   155,   156,   157,   158,
     651,   652,   161,   653,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,     0,   172,   173,     0,
       0,   174,   175,   654,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   655,
     190,   191,   192,   656,   657,   194,     0,   195,   196,   658,
     198,     0,   199,     0,   200,   593,     0,   594,   201,   202,
     203,   204,     0,   205,   659,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   595,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   596,   225,
     226,   227,   228,   229,   660,   661,     0,   662,     0,   233,
     597,   598,   234,   599,   235,   236,   237,   238,   239,     0,
       0,   240,   663,   600,   242,   601,     0,   243,   244,   245,
     664,   665,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   666,   602,
     667,   264,   265,   266,   267,   668,   268,   269,   603,   270,
     669,   670,   272,   671,   274,   275,   276,     0,   277,   278,
       0,     0,   672,   280,   281,     0,     0,   282,   283,   604,
     284,   605,   673,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,   674,   298,   299,   300,
     459,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   675,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,     0,   330,   331,   606,   332,   333,   334,   676,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
       0,   345,   346,   347,   348,   349,   677,   350,   351,   352,
     353,   354,   607,   355,   356,   678,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     679,     0,   372,   373,     0,   374,   608,   375,   376,   377,
     378,   379,     0,   680,   681,     0,     0,   382,   383,   682,
     385,   683,   684,   387,   388,   389,   390,  2541,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   685,     0,
     399,   400,   401,   402,   403,   404,   686,     0,   406,   610,
     407,   408,   409,   410,     0,     0,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   687,
       0,     0,     0,     0,     0,     0,   688,   689,     0,     0,
       0,     0,     0,     0,     0,   691,     0,     0,     0,     0,
     692,   628,   629,   471,   630,   631,   632,   633,   634,     0,
       0,     0,     0,     0,     0,     0,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   106,   107,   108,     0,     0,
       0,     0,     0,     0,     0,   109,   110,     0,   111,   112,
     113,   587,   114,   115,   116,   117,   635,   588,   636,   637,
       0,   121,   122,   123,   124,   125,   638,   639,   126,   127,
     640,   641,   130,     0,   131,   132,   133,   134,   642,     0,
     643,     0,   136,   137,   138,   139,   140,   590,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   591,
     150,   151,  2540,   644,   645,   646,   647,   648,   649,   650,
     153,   154,   155,   156,   157,   158,   651,   652,   161,   653,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,     0,   172,   173,     0,     0,   174,   175,   654,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   655,   190,   191,   192,   656,
     657,   194,     0,   195,   196,   658,   198,     0,   199,     0,
     200,   593,     0,   594,   201,   202,   203,   204,     0,   205,
     659,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     595,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   596,   225,   226,   227,   228,   229,
     660,   661,     0,   662,     0,   233,   597,   598,   234,   599,
     235,   236,   237,   238,   239,     0,     0,   240,   663,   600,
     242,   601,     0,   243,   244,   245,   664,   665,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   666,   602,   667,   264,   265,   266,
     267,   668,   268,   269,   603,   270,   669,   670,   272,   671,
     274,   275,   276,     0,   277,   278,     0,     0,   672,   280,
     281,     0,     0,   282,   283,   604,   284,   605,   673,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,   674,   298,   299,   300,   459,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     675,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,   330,
     331,   606,   332,   333,   334,   676,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,     0,   345,   346,   347,
     348,   349,   677,   350,   351,   352,   353,   354,   607,   355,
     356,   678,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   679,     0,   372,   373,
       0,   374,   608,   375,   376,   377,   378,   379,     0,   680,
     681,     0,     0,   382,   383,   682,   385,   683,   684,   387,
     388,   389,   390,  2541,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   685,     0,   399,   400,   401,   402,
     403,   404,   686,     0,   406,   610,   407,   408,   409,   410,
       0,     0,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   687,     0,     0,     0,     0,
       0,     0,   688,   689,     0,     0,     0,     0,     0,     0,
       0,   691,     0,     0,     0,     0,   692,   628,   629,   471,
     630,   631,   632,   633,   634,     0,     0,     0,     0,     0,
       0,     0,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,   587,   114,   115,
     116,   117,   635,   588,   636,   637,     0,   121,   122,   123,
     124,   125,   638,   639,   126,   127,   640,   641,   130,     0,
     131,   132,   133,   134,   642,     0,   643,     0,   136,   137,
     138,   139,   140,   590,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   591,   150,   151,   152,   644,
     645,   646,   647,   648,   649,   650,   153,   154,   155,   156,
     157,   158,   651,   652,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   654,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   655,   190,   191,   192,   656,   657,   194,     0,   195,
     196,   658,   198,     0,   199,     0,   200,   593,     0,   594,
     201,   202,   203,   204,     0,   205,   659,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   595,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     596,   225,   226,   227,   228,   229,   660,   661,     0,   662,
       0,   233,   597,   598,   234,   599,   235,   236,   237,   238,
     239,     0,     0,   240,   663,   600,   242,   601,     0,   243,
     244,   245,   664,   665,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     666,   602,   667,   264,   265,   266,   267,     0,   268,   269,
     603,   270,   669,   670,   272,   671,   274,   275,   276,     0,
     277,   278,     0,     0,   672,   280,   281,     0,     0,   282,
     283,   604,   284,   605,   673,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   674,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   675,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,   606,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   677,   350,
     351,   352,   353,   354,   607,   355,   356,   678,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   679,     0,   372,   373,     0,   374,   608,   375,
     376,   377,   378,   379,     0,   680,   681,     0,     0,   382,
     383,   682,   385,   683,   684,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     685,     0,   399,   400,   401,   402,   403,   404,   686,     0,
     406,   610,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,     0,     0,     0,     0,     0,     0,     0,  1356,  1357,
       0,     0,   628,   629,   471,   630,   631,  1358,   633,   634,
       0,     0,   692,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,   587,   114,   115,   116,   117,   635,   588,   636,
     637,     0,   121,   122,   123,   124,   125,   638,   639,   126,
     127,   640,   641,   130,     0,   131,   132,   133,   134,   642,
       0,   643,     0,   136,   137,   138,   139,   140,   590,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     591,   150,   151,   152,   644,   645,   646,   647,   648,   649,
     650,   153,   154,   155,   156,   157,   158,   651,   652,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     654,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   655,   190,   191,   192,
     656,   657,   194,     0,   195,   196,   658,   198,     0,   199,
       0,   200,   593,     0,   594,   201,   202,   203,   204,     0,
     205,   659,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   595,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   596,   225,   226,   227,   228,
     229,   660,   661,     0,   662,     0,   233,   597,   598,   234,
     599,   235,   236,   237,   238,   239,     0,     0,   240,   663,
     600,   242,   601,     0,   243,   244,   245,   664,   665,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   666,   602,   667,   264,   265,
     266,   267,     0,   268,   269,   603,   270,   669,   670,   272,
     671,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,   604,   284,   605,   673,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   674,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   675,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,   606,   332,   333,   334,  1487,  1488,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,   677,   350,   351,   352,   353,   354,   607,
     355,   356,   678,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   679,     0,   372,
     373,     0,   374,   608,   375,   376,   377,   378,   379,     0,
     680,   681,     0,     0,   382,   383,   682,   385,   683,   684,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   685,     0,   399,   400,   401,
     402,   403,   404,   686,     0,   406,   610,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,     0,     0,     0,     0,
       0,     0,     0,  1489,  1490,     0,     0,     0,     0,     0,
       0,     0,  1358,     0,     0,     0,     0,   692,   628,   629,
     471,   630,   631,   632,   633,   634,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,   587,   114,
     115,   116,   117,   635,   588,   636,   637,     0,   121,   122,
     123,   124,   125,   638,   639,   126,   127,   640,   641,   130,
       0,   131,   132,   133,   134,   642,     0,   643,     0,   136,
     137,   138,   139,   140,   590,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   591,   150,   151,   152,
     644,   645,   646,   647,   648,   649,   650,   153,   154,   155,
     156,   157,   158,   651,   652,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   654,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   655,   190,   191,   192,   656,   657,   194,     0,
     195,   196,   658,   198,     0,   199,     0,   200,   593,     0,
     594,   201,   202,   203,   204,     0,   205,   659,     0,   207,
     208,     0,   209,   210,   211,   212,   213,   595,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,   596,   225,   226,   227,   228,   229,   660,   661,     0,
     662,     0,   233,     0,   598,   234,   599,   235,   236,   237,
     238,   239,     0,     0,   240,   663,   600,   242,   601,     0,
     243,   244,   245,   664,   665,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   666,   602,   667,   264,   265,   266,   267,     0,   268,
     269,   603,   270,   669,   670,   272,   671,   274,   275,   276,
       0,   277,   278,     0,     0,   672,   280,   281,     0,     0,
     282,   283,   604,   284,   605,   673,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   674,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   675,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,   606,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,   677,
     350,   351,   352,   353,   354,   607,   355,   356,   678,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   679,     0,   372,   373,     0,   374,   608,
     375,   376,   377,   378,   379,     0,   680,   681,     0,     0,
     382,   383,   682,   385,   683,   684,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,   685,     0,   399,   400,   401,   402,   403,   404,   686,
       0,   406,   610,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,     0,     0,     0,     0,     0,     0,     0,  1356,
    1357,     0,     0,     0,     0,     0,     0,     0,  1358,     0,
       0,     0,     0,   692,   628,   629,   471,   630,   631,   632,
     633,   634,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,   587,   114,   115,   116, -1467,   635,
     588,   636,   637,     0,   121,   122,   123,   124,   125,   638,
     639,   126,   127,   640,   641,   130,     0,   131,   132,   133,
     134,   642,     0,   643,     0,   136,   137,   138,   139,   140,
     590,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   591,   150,   151,  2540,   644,   645,   646,   647,
     648,   649,   650,   153,   154,   155,   156,   157,   158,   651,
     652,   161,   653,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   654,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   655,   190,
     191,   192,   656,   657,   194,     0,   195,   196,   658,   198,
       0,   199,     0,   200,   593,     0,   594,   201,   202,   203,
     204,     0,   205,   659,     0,   207,   208,     0,   209,   210,
     211,   212,   213, -1467,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   596,   225,   226,
     227,   228,   229,   660,   661,     0,   662,     0,   233,     0,
       0,   234,   599,   235,   236,   237,   238,   239,     0,     0,
     240,   663,   600,   242, -1467,     0,   243,   244,   245,   664,
     665,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   666,   602,   667,
     264,   265,   266,   267,     0,   268,   269,     0,   270,   669,
     670,   272,   671,   274,   275,   276,     0,   277,   278,     0,
       0,   672,   280,   281,     0,     0,   282,   283,   604,   284,
     605,   673,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   674,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   675,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,   606,   332,   333,   334,   676,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,   677,   350,   351,   352,   353,
     354, -1467,   355,   356,   678,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   679,
       0,   372,   373,     0,   374,   608,   375,   376,   377,   378,
     379,     0,   680,   681,     0,     0,   382,   383,   682,   385,
     683,   684,   387,   388,   389,   390,  2541,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   685,     0,   399,
     400,   401,   402,   403,   404,   686,     0,   406,   610,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431, -1467,     0,
       0,     0,     0,     0,     0,   688,   689,     0,     0,     0,
       0,     0,     0,     0,   691,     0,     0,     0,     0,   692,
     628,   629,   471,   630,   631,   632,   633,   634,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
     587,   114,   115,   116,     0,   635,   588,   636,   637,     0,
     121,   122,   123,   124,   125,   638,   639,   126,   127,   640,
     641,   130,     0,   131,   132,   133,   134,   642,     0,   643,
       0,   136,   137,   138,   139,   140,   590,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   591,   150,
     151,   152,   644,   645,   646,   647,   648,   649,   650,   153,
     154,   155,   156,   157,   158,   651,   652,   161,   653,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   654,   177,
     178,     0,   179,   180,   181,     0,   182,     0,   184,     0,
     185,   186,   187,   188,   655,   190,   191,   192,   656,   657,
     194,     0,   195,   196,   658,   198,     0,   199,     0,   200,
     593,     0,   594,   201,   202,   203,   204,     0,   205,   659,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   596,   225,   226,   227,   228,   229,   660,
     661,     0,   662,     0,   233,     0,     0,   234,   599,   235,
     236,   237,   238,   239,     0,     0,   240,   663,   600,   242,
       0,     0,   243,   244,   245,   664,   665,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   666,   602,   667,   264,   265,   266,   267,
       0,   268,   269,     0,   270,   669,   670,   272,   671,   274,
     275,   276,     0,   277,   278,     0,     0,   672,   280,   281,
       0,     0,   282,   283,   604,   284,   605,   673,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   674,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   675,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
     606,   332,   333,   334,   676,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,   677,   350,   351,   352,   353,   354,     0,   355,   356,
     678,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   679,     0,   372,   373,     0,
     374,   608,   375,   376,   377,   378,   379,     0,   680,   681,
       0,     0,   382,   383,   682,   385,   683,   684,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   685,     0,   399,   400,   401,   402,   403,
     404,   686,     0,   406,   610,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,     0,     0,
       0,   688,   689,    96,     0,     0,     0,     0,     0,     0,
     691,     0,     0,     0,     0,   692,     0,     0,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,  1971,     0,   109,   110,     0,
     111,   112,   113,     0,   114,   115,   116,   117,   118,     0,
     119,   120,     0,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   136,   137,   138,   139,   140,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,  -559,   150,   151,   152,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,  -559,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,  -559,   225,   226,   227,
     228,   229,   230,   231,     0,   232,     0,   233,     0,     0,
     234,  -559,   235,   236,   237,   238,   239,     0,     0,   240,
     241,  -559,   242,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,  -559,   263,   264,
     265,   266,   267,     0,   268,   269,     0,   270,     0,   271,
     272,   273,   274,   275,   276,     0,   277,   278,     0,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   297,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,  -559,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,     0,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,     0,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,     0,   407,   408,
     409,   410,     0,     0,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,     0,     0,     0,
     628,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   755,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
     587,   114,   115,   116,   117,   118,   588,   119,   120,     0,
     121,   122,   123,   124,   125,     0,   639,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   642,     0,   643,
       0,   136,   137,   138,   139,   140,   590,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   591,   150,
     151,   152,   644,   645,   646,   647,   648,   649,   650,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   656,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     593,     0,   594,   201,   202,   203,   204,     0,   205,   659,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   595,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   596,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,   597,   598,   234,   599,   235,
     236,   237,   238,   239,  1734,     0,   240,   663,   600,   242,
     601,     0,   243,   244,   245,   664,   665,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   602,   263,   264,   265,   266,   267,
       0,   268,   269,   603,   270,     0,   670,   272,   273,   274,
     275,   276,     0,   277,   278,     0,   496,   279,   280,   281,
       0,     0,   282,   283,   604,   284,   605,   673,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   674,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
     606,   332,   333,   334,   335,  1735,   337,   338,   339,   340,
     341,   342,   343,   344,    21,     0,   345,   346,   347,   348,
     349,   677,   350,   351,   352,   353,   354,   607,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   679,     0,   372,   373,    25,
     374,   608,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   682,   385,   683,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   685,     0,   399,   400,   401,   402,   403,
     609,   405,     0,   406,   610,   407,   408,   409,   410,     0,
       0,   411,     0,    28,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,     0,     0,    29,   628,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1736,     0,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,   587,   114,   115,
     116,   117,   118,   588,   119,   120,     0,   121,   122,   123,
     124,   125,     0,   639,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   642,     0,   643,     0,   136,   137,
     138,   139,   140,   590,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   591,   150,   151,   152,   644,
     645,   646,   647,   648,   649,   650,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   656,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   593,     0,   594,
     201,   202,   203,   204,     0,   205,   659,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   595,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
     596,   225,   226,   227,   228,   229,   230,   231,     0,   232,
       0,   233,   597,   598,   234,   599,   235,   236,   237,   238,
     239,  1734,     0,   240,   663,   600,   242,   601,     0,   243,
     244,   245,   664,   665,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   602,   263,   264,   265,   266,   267,     0,   268,   269,
     603,   270,     0,   670,   272,   273,   274,   275,   276,     0,
     277,   278,     0,   496,   279,   280,   281,     0,     0,   282,
     283,   604,   284,   605,   673,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   674,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,   606,   332,   333,
     334,   335,  1735,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,   677,   350,
     351,   352,   353,   354,   607,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   679,     0,   372,   373,     0,   374,   608,   375,
     376,   377,   378,   379,     0,   380,   381,     0,     0,   382,
     383,   682,   385,   683,     0,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     685,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   610,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,     0,     0,   628,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1736,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,     0,     0,   109,   110,     0,
     111,   112,   113,   587,   114,   115,   116,   117,   118,   588,
     119,   120,     0,   121,   122,   123,   124,   125,     0,   639,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     642,     0,   643,     0,   136,   137,   138,   139,   140,   590,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   591,   150,   151,   152,   644,   645,   646,   647,   648,
     649,   650,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   656,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   593,     0,   594,   201,   202,   203,   204,
       0,   205,   659,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   595,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,   596,   225,   226,   227,
     228,   229,   230,   231,     0,   232,     0,   233,   597,   598,
     234,   599,   235,   236,   237,   238,   239,     0,     0,   240,
     663,   600,   242,   601,     0,   243,   244,   245,   664,   665,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   602,   263,   264,
     265,   266,   267,     0,   268,   269,   603,   270,     0,   670,
     272,   273,   274,   275,   276,     0,   277,   278,     0,     0,
     279,   280,   281,     0,     0,   282,   283,   604,   284,   605,
     673,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   674,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,   606,   332,   333,   334,   335,  1735,   337,
     338,   339,   340,   341,   342,   343,   344,     0,     0,   345,
     346,   347,   348,   349,   677,   350,   351,   352,   353,   354,
     607,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   679,     0,
     372,   373,     0,   374,   608,   375,   376,   377,   378,   379,
       0,   380,   381,     0,     0,   382,   383,   682,   385,   683,
       0,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   685,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,   610,   407,   408,
     409,   410,     0,     0,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,     0,     0,   628,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   106,   107,   108,     0,     0,     0,     0,
       0,     0,     0,   109,   110,     0,   111,   112,   113,   587,
     114,   115,   116,   117,   118,   588,   119,   120,     0,   121,
     122,   123,   124,   125,     0,   639,   126,   127,   128,   129,
     130,     0,   131,   132,   133,   134,   642,     0,   643,     0,
     136,   137,   138,   139,   140,   590,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   591,   150,   151,
     152,   644,   645,   646,   647,   648,   649,   650,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
       0,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   656,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   593,
       0,   594,   201,   202,   203,   204,     0,   205,   659,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   595,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
       0,   224,   596,   225,   226,   227,   228,   229,   230,   231,
       0,   232,     0,   233,   597,   598,   234,   599,   235,   236,
     237,   238,   239,     0,     0,   240,   663,   600,   242,   601,
       0,   243,   244,   245,   664,   665,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   602,   263,   264,   265,   266,   267,     0,
     268,   269,   603,   270,     0,   670,   272,   273,   274,   275,
     276,     0,   277,   278,     0,     0,   279,   280,   281,     0,
       0,   282,   283,   604,   284,   605,   673,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
     674,   298,   299,   300,   459,   302,   303,     0,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,   330,   331,   606,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,     0,     0,   345,   346,   347,   348,   349,
     677,   350,   351,   352,   353,   354,   607,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   679,     0,   372,   373,     0,   374,
     608,   375,   376,   377,   378,   379,     0,   380,   381,     0,
       0,   382,   383,   682,   385,   683,     0,   387,   388,   389,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   685,     0,   399,   400,   401,   402,   403,   404,
     405,     0,   406,   610,   407,   408,   409,   410,     0,     0,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,     0,     0,   586,   860,   471,     0,     0,
       0,   633,     0,     0,     0,     0,     0,     0,     0,  2314,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   106,
     107,   108,     0,     0,     0,     0,     0,     0,     0,   109,
     110,     0,   111,   112,   113,   587,   114,   115,   116,   117,
     118,   588,   119,   120,     0,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,   589,     0,   136,   137,   138,   139,
     140,   590,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   591,   150,   151,   152,     0,     0,     0,
     592,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,     0,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   861,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   593,     0,   594,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   595,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,   596,   225,
     226,   227,   228,   229,   230,   231,     0,   232,     0,   233,
     597,   598,   234,   599,   235,   236,   237,   238,   239,     0,
       0,   240,   241,   600,   242,   601,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   602,
     263,   264,   265,   266,   267,     0,   268,   269,   603,   270,
       0,   271,   272,   273,   274,   275,   276,     0,   277,   278,
     862,     0,   279,   280,   281,     0,     0,   282,   283,   604,
     284,   605,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,   297,   298,   299,   300,
     459,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,     0,   330,   331,   606,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
       0,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   607,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,     0,   374,   608,   375,   376,   377,
     378,   379,     0,   380,   381,     0,     0,   382,   383,   384,
     385,   386,   863,   387,   388,   389,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   406,   610,
     407,   408,   409,   410,     0,     0,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,     0,
       0,   586,     0,     0,     0,     0,   864,   865,  2451,     0,
       0,     0,     0,     0,     0,  2452,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   106,   107,   108,     3,     4,
       0,     0,     0,     0,     0,   109,   110,     0,   111,   112,
     113,   587,   114,   115,   116,   117,   118,   588,   119,   120,
       0,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
     589,     0,   136,   137,   138,   139,   140,   590,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   591,
     150,   151,   152,     0,     0,     0,   592,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,     0,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   593,     0,   594,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     595,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,   596,   225,   226,   227,   228,   229,
     230,   231,     0,   232,     0,   233,   597,   598,   234,   599,
     235,   236,   237,   238,   239,     0,     0,   240,   241,   600,
     242,   601,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   602,   263,   264,   265,   266,
     267,     0,   268,   269,   603,   270,     0,   271,   272,   273,
     274,   275,   276,     0,   277,   278,     0,     0,   279,   280,
     281,     0,     0,   282,   283,   604,   284,   605,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,   300,   459,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,   330,
     331,   606,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    21,     0,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   607,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
      25,   374,   608,   375,   376,   377,   378,   379,     0,   380,
     381,     0,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   609,   405,     0,   406,   610,   407,   408,   409,   410,
       0,     0,   411,     0,    28,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,     0,     0,    29,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    21,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,    25,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   609,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,    28,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,     0,     0,    29,    96,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   106,
     107,   108,     0,     0,     0,     0,     0,     0,     0,   109,
     110,     0,   111,   112,   113,     0,   114,   115,   116,   117,
     118,     0,   119,   120,     0,   121,   122,   123,   124,   125,
       0,     0,   126,   127,   128,   129,   130,     0,   131,   132,
     133,   134,   135,     0,     0,     0,   136,   137,   138,   139,
     140,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,     0,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   201,   202,
     203,   204,     0,   205,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,     0,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,     0,   224,     0,   225,
     226,   227,   228,   229,   230,   231,     0,   232,     0,   233,
       0,     0,   234,     0,   235,   236,   237,   238,   239,     0,
       0,   240,   241,     0,   242,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     263,   264,   265,   266,   267,     0,   268,   269,     0,   270,
       0,   271,   272,   273,   274,   275,   276,     0,   277,   278,
       0,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,   297,   298,   299,   300,
     459,   302,   303,     0,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,     0,   330,   331,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,     0,
       0,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,     0,   374,     0,   375,   376,   377,
     378,   379,     0,   380,   381,     0,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   406,     0,
     407,   408,   409,   410,     0,     0,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,     0,
       0,    96,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   733,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   106,   107,   108,     0,     0,
       0,     0,     0,     0,     0,   109,   110,     0,   111,   112,
     113,     0,   114,   115,   116,   117,   118,     0,   119,   120,
       0,   121,   122,   123,   124,   125,     0,     0,   126,   127,
     128,   129,   130,     0,   131,   132,   133,   134,   135,     0,
       0,     0,   136,   137,   138,   139,   140,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,     0,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   201,   202,   203,   204,     0,   205,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
       0,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,     0,   224,     0,   225,   226,   227,   228,   229,
     230,   231,     0,   232,     0,   233,     0,     0,   234,     0,
     235,   236,   237,   238,   239,     0,     0,   240,   241,     0,
     242,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   263,   264,   265,   266,
     267,     0,   268,   269,     0,   270,     0,   271,   272,   273,
     274,   275,   276,     0,   277,   278,     0,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,   300,   459,   302,   303,     0,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,   330,
     331,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,     0,     0,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
       0,   374,     0,   375,   376,   377,   378,   379,     0,   380,
     381,     0,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   406,     0,   407,   408,   409,   410,
       0,     0,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,     0,     0,    96,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1477,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,     0,   114,   115,
     116,   117,   118,     0,   119,   120,     0,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   136,   137,
     138,   139,   140,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   225,   226,   227,   228,   229,   230,   231,     0,   232,
       0,   233,     0,     0,   234,     0,   235,   236,   237,   238,
     239,     0,     0,   240,   241,     0,   242,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   263,   264,   265,   266,   267,     0,   268,   269,
       0,   270,     0,   271,   272,   273,   274,   275,   276,     0,
     277,   278,     0,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   297,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,     0,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,     0,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,     0,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,     0,     0,    96,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1954,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   106,   107,   108,
       0,     0,     0,     0,     0,     0,     0,   109,   110,     0,
     111,   112,   113,     0,   114,   115,   116,   117,   118,     0,
     119,   120,     0,   121,   122,   123,   124,   125,     0,     0,
     126,   127,   128,   129,   130,     0,   131,   132,   133,   134,
     135,     0,     0,     0,   136,   137,   138,   139,   140,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,     0,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   201,   202,   203,   204,
       0,   205,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,     0,   224,     0,   225,   226,   227,
     228,   229,   230,   231,     0,   232,     0,   233,     0,     0,
     234,     0,   235,   236,   237,   238,   239,     0,     0,   240,
     241,     0,   242,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   263,   264,
     265,   266,   267,     0,   268,   269,     0,   270,     0,   271,
     272,   273,   274,   275,   276,     0,   277,   278,     0,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,   297,   298,   299,   300,   459,   302,
     303,     0,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,   330,   331,     0,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,     0,     0,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,     0,   374,     0,   375,   376,   377,   378,   379,
       0,   380,   381,     0,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,     0,   407,   408,
     409,   410,     0,     0,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,     0,     0,     0,
       0,     0,   884,   860,   471,     0,     0,  1338,   633,     0,
       0,     0,     0,  2163,  1339,  1340,  1341,    97,    98,    99,
     100,   101,   102,   103,   104,  1041,   106,   107,   108,  1042,
    1043,  1044,  1045,  1046,  1047,  1048,   109,   110,  1049,   111,
     112,   113,   587,   114,   115,   116,     0,   885,   588,   886,
     887,  1050,   121,   122,   123,   124,   125,  1051,  1052,   126,
     127,   888,   889,   130,  1053,   131,   132,   133,   134,     0,
    1054,   589,  1055,   136,   137,   138,   139,   140,   590,   141,
     142,   143,  1056,   144,   145,   146,   147,   148,   149,  1057,
     591,   150,   151,   152,  1058,  1059,  1060,   592,  1061,  1062,
    1063,   153,   154,   155,   156,   157,   158,   890,   891,   161,
    1064,   162,  1065,   163,   164,   165,   166,   167,   168,  1066,
     169,   170,   171,  1067,   172,   173,  1068,  1069,   174,   175,
     654,   177,   178,  1070,   179,   180,   181,  1071,   182,   183,
     184,  1072,   185,   186,   187,   188,     0,   190,   191,   192,
       0,  1073,   194,  1074,   195,   196,   892,   198,  1075,   199,
    1076,   200,   593,  1077,   594,   201,   202,   203,   204,  1078,
     205,     0,  1079,     0,   208,  1080,   209,   210,   211,   212,
     213,   595,   214,   215,   216,   217,  1081,   218,   219,   220,
     221,   222,   223,  1082,   224,   596,     0,   226,   227,   228,
     229,   893,   894,  1083,   895,  1084,   233,   597,   598,   234,
     599,   235,   236,   237,   238,   239,  1085,  1086,   240,     0,
     600,   242,   601,  1087,   243,   244,   245,  1088,  1089,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   896,   602,   897,   264,   265,
     266,  2062,  1090,   268,   269,   603,   270,  1091,     0,   272,
     898,   274,   275,   276,  1092,   277,   278,  1093,  1094,  2063,
     280,   281,  1095,  1096,   282,     0,   604,   284,   605,     0,
     286,   287,   288,   289,   290,   291,   292,   293,   294,  1097,
    1098,   295,   296,     0,   298,   299,     0,   459,   302,   303,
    1099,   304,   305,   306,   307,   308,   309,   310,  1100,   311,
     312,   899,   314,   315,   316,   317,  1101,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,  1102,
     330,   331,   606,   332,   333,   334,     0,   336,   337,   338,
     339,   340,   341,   342,   343,   344,  1103,  1104,   345,   346,
     347,   348,   349,  1105,   350,  2064,   352,   353,   354,   607,
     355,   356,   901,   358,  1106,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,  1107,   372,
     373,  1108,   374,   608,   375,   376,   377,   378,   379,  1109,
     902,   903,  1110,  1111,   382,   383,     0,   385,     0,  1112,
     387,   388,   389,   390,   391,   392,  1113,   393,  1114,  1115,
     394,   395,   396,   397,   398,  1116,  1117,   399,   400,   401,
     402,   403,     0,   904,  1118,   406,   610,   407,   408,   409,
     410,  1119,  1120,   411,  1121,  1122,   412,   413,   414,   415,
     416,   417,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   429,   430,   431,     0,    96,     0,  1342,
    1343,  1344,  1338,  2065,  2066,  1347,  1348,  1349,  1350,  1339,
    1340,  1341,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   106,   107,   108,     0,     0,     0,     0,     0,     0,
       0,   109,   110,     0,   111,   112,   113,     0,   114,   115,
     116,   117,   118,     0,   119,   120,     0,   121,   122,   123,
     124,   125,     0,     0,   126,   127,   128,   129,   130,     0,
     131,   132,   133,   134,   135,     0,     0,     0,   136,   137,
     138,   139,   140,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,     0,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     201,   202,   203,   204,     0,   205,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,     0,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,     0,   224,
       0,   225,   226,   227,   228,   229,   230,   231,     0,   232,
       0,   233,     0,     0,   234,     0,   235,   236,   237,   238,
     239,     0,     0,   240,   241,     0,   242,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   263,   264,   265,   266,   267,     0,   268,   269,
       0,   270,     0,   271,   272,   273,   274,   275,   276,     0,
     277,   278,     0,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,   297,   298,
     299,   300,   459,   302,   303,     0,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,     0,   330,   331,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,     0,     0,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,     0,   374,     0,   375,
     376,   377,   378,   379,     0,   380,   381,     0,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,     0,   407,   408,   409,   410,     0,     0,   411,     0,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,     0,     0,     0,  1342,  1343,  1344,     0,  1345,  1346,
    1347,  1348,  1349,  1350,   980,     0,     0,   981,     0,     0,
       0,   982,   983,   984,     0,     0,     0,     0,     0,     0,
       0,     0,   980,     0,     0,   981,     0,     0,   985,   982,
     983,   984,     0,     0,     0,     0,   987,     0,     0,     0,
       0,   980,     0,   988,   981,     0,   985,     0,   982,   983,
     984,     0,     0,     0,   987,     0,     0,     0,     0,     0,
       0,   988,     0,     0,     0,   985,     0,   989,     0,     0,
       0,     0,     0,   987,     0,     0,     0,     0,     0,   980,
     988,     0,   981,     0,     0,   989,   982,   983,   984,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   980,     0,
       0,   981,     0,   985,   989,   982,   983,   984,     0,     0,
       0,   987,     0,     0,     0,     0,   980,     0,   988,   981,
       0,     0,   985,   982,   983,   984,     0,     0,     0,     0,
     987,     0,     0,     0,     0,     0,     0,   988,     0,     0,
     985,     0,   989,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,     0,   988,     0,     0,     0,     0,
       0,   989,     0,     0,     0,     0,     0,     0,   980,     0,
       0,   981,     0,     0,     0,   982,   983,   984,   990,   989,
       0,     0,     0,   991,     0,     0,     0,     0,     0,     0,
       0,     0,   985,     0,     0,     0,   990,     0,     0,     0,
     987,   991,     0,     0,   992,   993,     0,   988,     0,     0,
       0,     0,     0,     0,     0,   990,     0,     0,     0,   994,
     991,     0,   992,   993,     0,     0,     0,     0,     0,     0,
       0,   989,     0,     0,     0,     0,     0,   994,     0,     0,
       0,   992,   993,     0,     0,     0,     0,     0,     0,   995,
       0,     0,   996,   990,     0,     0,   994,     0,   991,     0,
       0,     0,     0,     0,     0,     0,   997,   995,     0,   998,
     996,     0,   990,     0,     0,     0,     0,   991,     0,   992,
     993,     0,     0,     0,   997,     0,   995,   998,     0,   996,
     990,     0,     0,     0,   994,   991,     0,     0,   992,   993,
       0,     0,     0,   997,     0,     0,   998,     0,     0,     0,
       0,     0,     0,   994,     0,     0,   992,   993,     0,     0,
       0,     0,     0,     0,   995,     0,     0,   996,     0,     0,
       0,   994,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   997,   990,   995,   998,     0,   996,   991,     0,     0,
       0,     0,     0,     0,     0,     0,   999,     0,     0,     0,
     997,   995,     0,   998,   996,     0,     0,     0,   992,   993,
       0,     0,     0,     0,   999,     0,     0,     0,   997,     0,
       0,   998,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   999,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   995,     0,     0,   996,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     997,   999,     0,   998,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     999,     0,     0,  1000,     0,     0,  1001,  1002,  1003,     0,
    1004,  1005,  1006,  1007,  1008,  1009,     0,     0,   999,     0,
    2116,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,  1005,
    1006,  1007,  1008,  1009,     0,     0,     0,     0,  2135,     0,
    1000,     0,     0,  1001,  1002,  1003,     0,  1004,  1005,  1006,
    1007,  1008,  1009,     0,     0,     0,     0,  2278,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     999,     0,     0,     0,     0,     0,     0,     0,  1000,     0,
       0,  1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,
    1009,     0,     0,     0,     0,  2497,     0,  1000,     0,     0,
    1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,
       0,     0,     0,     0,  2509,  1000,     0,     0,  1001,  1002,
    1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,     0,     0,
       0,     0,  2623,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1000,  1040,     0,
    1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,
       0,     0,  1459,    97,    98,    99,   100,   101,   102,   103,
     104,  1041,   106,   107,   108,  1042,  1043,  1044,  1045,  1046,
    1047,  1048,   109,   110,  1049,   111,   112,   113,   587,   114,
     115,   116,   117,   118,   588,   119,   120,  1050,   121,   122,
     123,   124,   125,  1051,  1052,   126,   127,   128,   129,   130,
    1053,   131,   132,   133,   134,   135,  1054,   589,  1055,   136,
     137,   138,   139,   140,   590,   141,   142,   143,  1056,   144,
     145,   146,   147,   148,   149,  1057,   591,   150,   151,   152,
    1058,  1059,  1060,   592,  1061,  1062,  1063,   153,   154,   155,
     156,   157,   158,   159,   160,   161,  1064,   162,  1065,   163,
     164,   165,   166,   167,   168,  1066,   169,   170,   171,  1067,
     172,   173,  1068,  1069,   174,   175,   176,   177,   178,  1070,
     179,   180,   181,  1071,   182,   183,   184,  1072,   185,   186,
     187,   188,   189,   190,   191,   192,   193,  1073,   194,  1074,
     195,   196,   197,   198,  1075,   199,  1076,   200,   593,  1077,
     594,   201,   202,   203,   204,  1078,   205,   206,  1079,   207,
     208,  1080,   209,   210,   211,   212,   213,   595,   214,   215,
     216,   217,  1081,   218,   219,   220,   221,   222,   223,  1082,
     224,   596,   225,   226,   227,   228,   229,   230,   231,  1083,
     232,  1084,   233,   597,   598,   234,   599,   235,   236,   237,
     238,   239,  1085,  1086,   240,   241,   600,   242,   601,  1087,
     243,   244,   245,  1088,  1089,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   602,   263,   264,   265,   266,   267,  1090,   268,
     269,   603,   270,  1091,   271,   272,   273,   274,   275,   276,
    1092,   277,   278,  1093,  1094,   279,   280,   281,  1095,  1096,
     282,   283,   604,   284,   605,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,  1097,  1098,   295,   296,   297,
     298,   299,   300,   459,   302,   303,  1099,   304,   305,   306,
     307,   308,   309,   310,  1100,   311,   312,   313,   314,   315,
     316,   317,  1101,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,  1102,   330,   331,   606,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,  1103,  1104,   345,   346,   347,   348,   349,  1105,
     350,   351,   352,   353,   354,   607,   355,   356,   357,   358,
    1106,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,  1107,   372,   373,  1108,   374,   608,
     375,   376,   377,   378,   379,  1109,   380,   381,  1110,  1111,
     382,   383,   384,   385,   386,  1112,   387,   388,   389,   390,
     391,   392,  1113,   393,  1114,  1115,   394,   395,   396,   397,
     398,  1116,  1117,   399,   400,   401,   402,   403,   404,   405,
    1118,   406,   610,   407,   408,   409,   410,  1119,  1120,   411,
    1121,  1122,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   586,   860,   471,     0,
       0,     0,   633,     0,     0,  2525,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,   587,   114,   115,   116,
     117,   118,   588,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,   589,     0,   136,   137,   138,
     139,   140,   590,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   591,   150,   151,   152,     0,     0,
       0,   592,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,  1033,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   861,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,   593,     0,   594,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   595,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,   596,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,   597,   598,   234,   599,   235,   236,   237,   238,   239,
       0,     0,   240,   241,   600,   242,   601,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     602,   263,   264,   265,   266,   267,     0,   268,   269,   603,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,   862,     0,   279,   280,   281,     0,     0,   282,   283,
     604,   284,   605,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,   606,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   607,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,   608,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,   863,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
     610,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     586,   860,   471,     0,     0,     0,   633,   864,   865,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
     587,   114,   115,   116,   117,   118,   588,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,   589,
       0,   136,   137,   138,   139,   140,   590,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   591,   150,
     151,   152,     0,     0,     0,   592,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,  1035,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   861,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     593,     0,   594,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   595,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   596,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,   597,   598,   234,   599,   235,
     236,   237,   238,   239,     0,     0,   240,   241,   600,   242,
     601,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   602,   263,   264,   265,   266,   267,
       0,   268,   269,   603,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,   862,     0,   279,   280,   281,
       0,     0,   282,   283,   604,   284,   605,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
     606,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   607,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,   608,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,   863,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   610,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   586,   860,   471,     0,     0,     0,
     633,   864,   865,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,   587,   114,   115,   116,   117,   118,
     588,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,   589,     0,   136,   137,   138,   139,   140,
     590,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   591,   150,   151,   152,     0,     0,     0,   592,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   861,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   593,     0,   594,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,   595,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   596,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,   597,
     598,   234,   599,   235,   236,   237,   238,   239,     0,     0,
     240,   241,   600,   242,   601,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   602,   263,
     264,   265,   266,   267,     0,   268,   269,   603,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,   862,
       0,   279,   280,   281,     0,     0,   282,   283,   604,   284,
     605,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,   606,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   607,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,   608,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,   863,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,   610,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,     0,     0,
     980,     0,     0,   981,     0,   864,   865,   982,   983,   984,
       0,     0,     0,   980,     0,     0,   981,     0,     0,     0,
     982,   983,   984,     0,   985,     0,     0,     0,  1483,     0,
       0,     0,   987,     0,     0,     0,     0,   985,     0,   988,
       0,     0,     0,     0,     0,   987,     0,     0,     0,     0,
       0,     0,   988,   980,     0,     0,   981,     0,     0,     0,
     982,   983,   984,   989,     0,     0,     0,     0,     0,     0,
       0,     0,   980,     0,     0,   981,   989,   985,     0,   982,
     983,   984,     0,     0,     0,   987,     0,     0,     0,     0,
       0,     0,   988,     0,     0,     0,   985,     0,     0,  1634,
       0,     0,     0,     0,   987,     0,     0,     0,     0,     0,
       0,   988,  1484,     0,     0,     0,   989,     0,     0,     0,
       0,     0,     0,   980,     0,     0,   981,     0,     0,     0,
     982,   983,   984,     0,     0,   989,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   985,     0,     0,
       0,     0,     0,     0,     0,   987,     0,     0,     0,     0,
       0,     0,   988,     0,  1676,     0,     0,     0,     0,  1677,
       0,     0,     0,     0,   990,     0,     0,     0,     0,   991,
       0,     0,     0,     0,     0,     0,   989,   990,     0,     0,
       0,     0,   991,     0,     0,     0,     0,     0,     0,     0,
     992,   993,     0,  2581,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   992,   993,   994,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   990,   994,     0,
       0,     0,   991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   995,   990,     0,   996,     0,
       0,   991,     0,   992,   993,     0,     0,     0,   995,     0,
       0,   996,   997,     0,     0,   998,     0,     0,   994,     0,
       0,     0,   992,   993,     0,   997,     0,     0,   998,     0,
       0,     0,     0,     0,     0,     0,     0,   994,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   990,   995,     0,
       0,   996,   991,   980,     0,     0,   981,     0,     0,     0,
     982,   983,   984,     0,     0,   997,     0,   995,   998,     0,
     996,     0,     0,   992,   993,     0,     0,   985,     0,     0,
    1685,     0,     0,     0,   997,   987,     0,   998,   994,     0,
       0,  2582,   988,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   999,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   999,   989,     0,   995,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   997,     0,   980,   998,     0,
     981,     0,     0,     0,   982,   983,   984,     0,     0,     0,
       0,     0,     0,     0,     0,   999,  1650,     0,     0,  1485,
       0,   985,     0,     0,     0,     0,     0,     0,     0,   987,
       0,     0,     0,     0,   999,     0,   988,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
     989,     0,  1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,
    1008,  1009,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,
    1005,  1006,  1007,  1008,  1009,   999,     0,   990,     0,     0,
       0,     0,   991,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1000,   992,   993,  1001,  1002,  1003,     0,  1004,
    1005,  1006,  1007,  1008,  1009,     0,     0,     0,   994,     0,
       0,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,  1005,
    1006,  1007,  1008,  1009,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1690,     0,     0,     0,     0,   995,     0,
       0,   996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   990,     0,     0,     0,   997,   991,     0,   998,     0,
       0,     0,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,
    1005,  1006,  1007,  1008,  1009,     0,     0,   992,   993,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   994,     0,   980,     0,     0,   981,     0,     0,
       0,   982,   983,   984,     0,     0,     0,     0,     0,     0,
       0,     0,   980,     0,     0,   981,     0,     0,   985,   982,
     983,   984,   995,     0,     0,   996,   987,     0,     0,     0,
       0,     0,     0,   988,     0,     0,   985,     0,     0,   997,
     980,     0,   998,   981,   987,   999,     0,   982,   983,   984,
       0,   988,     0,     0,     0,     0,     0,   989,     0,     0,
       0,     0,     0,     0,   985,     0,     0,     0,     0,     0,
       0,     0,   987,     0,     0,   989,     0,     0,     0,   988,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   980,     0,     0,   981,     0,     0,     0,   982,
     983,   984,     0,   989,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   987,     0,     0,   980,     0,   999,
     981,   988,     0,     0,   982,   983,   984,     0,     0,     0,
       0,     0,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,
    1005,  1006,  1007,  1008,  1009,   989,     0,     0,     0,   987,
       0,     0,     0,     0,     0,     0,   988,     0,   990,     0,
       0,     0,     0,   991,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   990,     0,     0,     0,
     989,   991,     0,     0,   992,   993,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   994,
       0,     0,   992,   993,   990,     0,     0,     0,     0,   991,
       0,     0,     0,     0,     0,     0,  1000,   994,     0,  1001,
    1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,   995,
     992,   993,   996,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   994,   997,   995,     0,   998,
     996,     0,     0,     0,     0,     0,   990,     0,     0,     0,
       0,   991,     0,     0,   997,     0,     0,   998,     0,     0,
       0,     0,     0,     0,     0,   995,     0,     0,   996,     0,
       0,     0,   992,   993,     0,     0,     0,     0,     0,     0,
       0,   990,   997,     0,     0,     0,   991,   994,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1467, -1467,     0,
       0,     0,     0,     0,     0,     0,     0,   995,     0,     0,
     996,     0,   994,     0,     0,     0,   999,     0,     0,     0,
       0,     0,     0,     0,   997,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   999,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1467,  1892,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   997,
       0,     0,   999,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1000,   999,     0,  1001,  1002,  1003,     0,
    1004,  1005,  1006,  1007,  1008,  1009,     0,     0,     0,     0,
       0,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,  1005,
    1006,  1007,  1008,  1009,     0,     0,     0,     0,     0,   999,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
       0,     0,  1001,  1002,  1003,     0,  1004,  1005,  1006,  1007,
    1008,  1009,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1000,     0,     0,  1001,  1002,  1003,     0,  1004,  1005,
    1006,  1007,  1008,  1009,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,     0,  1000,     0,     0,  1001,
    1002,  1003,     0,  1004,  1005,  1006,  1007,  1008,  1009,    97,
      98,    99,   100,   101,   102,   103,   104,  1041,   106,   107,
     108,  1042,  1043,  1044,  1045,  1046,  1047,  1048,   109,   110,
    1049,   111,   112,   113,   587,   114,   115,   116,   117,   118,
     588,   119,   120,  1050,   121,   122,   123,   124,   125,  1051,
    1052,   126,   127,   128,   129,   130,  1053,   131,   132,   133,
     134,   135,  1054,   589,  1055,   136,   137,   138,   139,   140,
     590,   141,   142,   143,  1056,   144,   145,   146,   147,   148,
     149,  1057,   591,   150,   151,   152,  1058,  1059,  1060,   592,
    1061,  1062,  1063,   153,   154,   155,   156,   157,   158,   159,
     160,   161,  1064,   162,  1065,   163,   164,   165,   166,   167,
     168,  1066,   169,   170,   171,  1067,   172,   173,  1068,  1069,
     174,   175,   176,   177,   178,  1070,   179,   180,   181,  1071,
     182,   183,   184,  1072,   185,   186,   187,   188,   189,   190,
     191,   192,   193,  1073,   194,  1074,   195,   196,   197,   198,
    1075,   199,  1076,   200,   593,  1077,   594,   201,   202,   203,
     204,  1078,   205,   206,  1079,   207,   208,  1080,   209,   210,
     211,   212,   213,   595,   214,   215,   216,   217,  1081,   218,
     219,   220,   221,   222,   223,  1082,   224,   596,   225,   226,
     227,   228,   229,   230,   231,  1083,   232,  1084,   233,   597,
     598,   234,   599,   235,   236,   237,   238,   239,  1085,  1086,
     240,   241,   600,   242,   601,  1087,   243,   244,   245,  1088,
    1089,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   602,   263,
     264,   265,   266,   267,  1090,   268,   269,   603,   270,  1091,
     271,   272,   273,   274,   275,   276,  1092,   277,   278,  1093,
    1094,   279,   280,   281,  1095,  1096,   282,   283,   604,   284,
     605,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,  1097,  1098,   295,   296,   297,   298,   299,   300,   459,
     302,   303,  1099,   304,   305,   306,   307,   308,   309,   310,
    1100,   311,   312,   313,   314,   315,   316,   317,  1101,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,  1102,   330,   331,   606,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,  1103,  1104,
     345,   346,   347,   348,   349,  1105,   350,   351,   352,   353,
     354,   607,   355,   356,   357,   358,  1106,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
    1107,   372,   373,  1108,   374,   608,   375,   376,   377,   378,
     379,  1109,   380,   381,  1110,  1111,   382,   383,   384,   385,
     386,  1112,   387,   388,   389,   390,   391,   392,  1113,   393,
    1114,  1115,   394,   395,   396,   397,   398,  1116,  1117,   399,
     400,   401,   402,   403,   404,   405,  1118,   406,   610,   407,
     408,   409,   410,  1119,  1120,   411,  1121,  1122,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,  1040,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,  1534,   102,   103,
     104,  1041,   106,   107,   108,  1042,  1043,  1044,  1045,  1046,
    1047,  1048,   109,   110,  1049,   111,   112,   113,   587,   114,
     115,   116,   117,   118,   588,   119,   120,  1050,   121,   122,
     123,   124,   125,  1051,  1052,   126,   127,   128,   129,   130,
    1053,   131,   132,   133,   134,   135,  1054,   589,  1055,   136,
     137,   138,   139,   140,   590,   141,   142,   143,  1056,   144,
     145,   146,   147,   148,   149,  1057,   591,   150,   151,   152,
    1058,  1059,  1060,   592,  1061,  1062,  1063,   153,   154,   155,
     156,   157,   158,   159,   160,   161,  1064,   162,  1065,   163,
     164,   165,   166,   167,   168,  1066,   169,   170,   171,  1067,
     172,   173,  1068,  1069,   174,   175,   176,  1535,   178,  1070,
     179,   180,   181,  1071,   182,   183,   184,  1072,   185,   186,
     187,   188,   189,   190,   191,   192,   193,  1073,   194,  1074,
     195,   196,   197,   198,  1075,   199,  1076,   200,   593,  1077,
     594,   201,   202,   203,   204,  1078,   205,   206,  1079,   207,
     208,  1080,   209,   210,   211,   212,   213,   595,   214,   215,
     216,   217,  1081,   218,   219,   220,   221,   222,   223,  1082,
     224,   596,   225,   226,   227,   228,   229,   230,   231,  1083,
     232,  1084,   233,   597,   598,   234,   599,   235,   236,   237,
     238,   239,  1085,  1086,   240,   241,   600,   242,   601,  1087,
     243,   244,   245,  1088,  1089,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   602,   263,   264,   265,   266,   267,  1090,   268,
     269,   603,   270,  1091,   271,   272,   273,   274,   275,   276,
    1092,   277,   278,  1093,  1094,   279,   280,   281,  1095,  1096,
     282,   283,   604,   284,   605,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,  1097,  1098,   295,   296,   297,
     298,   299,   300,   459,   302,   303,  1099,   304,   305,   306,
     307,   308,   309,   310,  1100,   311,   312,   313,   314,   315,
     316,   317,  1101,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,  1102,   330,   331,   606,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,  1103,  1104,   345,   346,   347,   348,   349,  1105,
    1536,   351,   352,   353,   354,   607,   355,   356,   357,   358,
    1106,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,  1107,   372,   373,  1108,   374,   608,
     375,   376,   377,   378,   379,  1109,   380,   381,  1110,  1111,
     382,   383,   384,   385,   386,  1112,   387,   388,   389,   390,
     391,   392,  1113,   393,  1114,  1115,   394,   395,   396,   397,
     398,  1116,  1117,   399,   400,   401,   402,   403,   404,   405,
    1118,   406,   610,   407,   408,   409,   410,  1119,  1120,   411,
    1121,  1122,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   628,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,   587,   114,   115,   116,   117,   118,   588,   119,
     120,     0,   121,   122,   123,   124,   125,     0,   639,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   642,
       0,   643,     0,   136,   137,   138,   139,   140,   590,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     591,   150,   151,   152,   644,   645,   646,   647,   648,   649,
     650,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     656,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   593,     0,   594,   201,   202,   203,   204,     0,
     205,   659,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   595,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,   596,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,   597,   598,   234,
     599,   235,   236,   237,   238,   239,     0,     0,   240,   663,
     600,   242,   601,     0,   243,   244,   245,   664,   665,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   602,   263,   264,   265,
     266,   267,     0,   268,   269,   603,   270,     0,   670,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,   604,   284,   605,   673,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   674,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,   606,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,   677,   350,   351,   352,   353,   354,   607,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   679,     0,   372,
     373,     0,   374,   608,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   682,   385,   683,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   685,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,   610,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   586,     0,   471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,   587,   114,   115,   116,
     117,   118,   588,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,   589,     0,   136,   137,   138,
     139,   140,   590,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   591,   150,   151,   152,     0,     0,
       0,   592,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   861,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,   593,     0,   594,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   595,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,   596,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,   597,   598,   234,   599,   235,   236,   237,   238,   239,
       0,     0,   240,   241,   600,   242,   601,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     602,   263,   264,   265,   266,   267,     0,   268,   269,   603,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,   862,     0,   279,   280,   281,     0,     0,   282,   283,
     604,   284,   605,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,   606,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   607,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,   608,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,   863,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
     610,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     3,     4,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
     587,   114,   115,   116,   117,   118,   588,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,   589,
       0,   136,   137,   138,   139,   140,   590,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   591,   150,
     151,   152,     0,     0,     0,   592,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     593,     0,   594,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   595,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,   596,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,   597,   598,   234,   599,   235,
     236,   237,   238,   239,     0,     0,   240,   241,   600,   242,
     601,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   602,   263,   264,   265,   266,   267,
       0,   268,   269,   603,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,   604,   284,   605,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
     606,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   607,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,   608,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   610,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   628,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,   587,   114,   115,   116,   117,   118,
     588,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,   589,     0,   136,   137,   138,   139,   140,
     590,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   591,   150,   151,   152,     0,     0,     0,   592,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   593,     0,   594,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,   595,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   596,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,   597,
     598,   234,   599,   235,   236,   237,   238,   239,     0,     0,
     240,   241,   600,   242,   601,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   602,   263,
     264,   265,   266,   267,     0,   268,   269,   603,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,   604,   284,
     605,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,   606,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   607,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,   608,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,   610,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
    1184,   131,   132,   133,   134,   135,     0,     0,  1185,   136,
     137,   138,   139,   140,     0,   141,   142,   143,  1186,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,  1187,   200,     0,  1188,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,  1189,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,  1190,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,  1191,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,  1192,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,  1184,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,  1186,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
    1187,   200,     0,  1188,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,  1587,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
    1190,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,  1191,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,  1192,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     3,     4,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,  1188,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,  1516,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
    1191,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,  1188,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,  1191,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   301,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,   476,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     477,   381,     0,     0,   478,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,   496,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   529,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   530,   381,
       0,     0,   531,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   538,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
     496,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   565,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,  1438,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,  1439,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,  1440,   374,     0,   375,  1441,   377,  1442,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,  1443,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,  1971,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,  1985,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   488,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   489,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   490,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   491,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   504,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   533,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   536,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   540,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   553,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     573,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   577,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   580,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   489,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   491,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   830,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     832,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,  1142,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,  1264,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    96,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,     0,   114,   115,   116,   117,   118,
       0,   119,   120,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   128,   129,   130,     0,   131,   132,   133,
     134,   135,     0,     0,     0,   136,   137,   138,   139,   140,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   201,   202,   203,
     204,     0,   205,   206,     0,   207,   208,     0,   209,   210,
     211,   212,  1277,     0,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,     0,   225,   226,
     227,   228,   229,   230,   231,     0,   232,     0,   233,     0,
       0,   234,     0,   235,   236,   237,   238,   239,     0,     0,
     240,   241,     0,   242,     0,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,     0,   263,
     264,   265,   266,   267,     0,   268,   269,     0,   270,     0,
     271,   272,   273,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,   300,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,     0,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,     0,   374,     0,   375,   376,   377,   378,
     379,     0,   380,   381,     0,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   406,     0,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    96,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   106,   107,   108,     0,     0,     0,     0,     0,
       0,     0,   109,   110,     0,   111,   112,   113,     0,   114,
     115,   116,   117,   118,     0,   119,   120,     0,   121,   122,
     123,   124,   125,     0,     0,   126,   127,   128,   129,   130,
       0,   131,   132,   133,   134,   135,     0,     0,     0,   136,
     137,   138,   139,   140,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,     0,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   201,   202,   203,   204,     0,   205,   206,     0,   207,
     208,     0,   209,   210,   211,   212,  1530,     0,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,     0,
     224,     0,   225,   226,   227,   228,   229,   230,   231,     0,
     232,     0,   233,     0,     0,   234,     0,   235,   236,   237,
     238,   239,     0,     0,   240,   241,     0,   242,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   263,   264,   265,   266,   267,     0,   268,
     269,     0,   270,     0,   271,   272,   273,   274,   275,   276,
       0,   277,   278,     0,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,   300,   459,   302,   303,     0,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,   330,   331,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,     0,     0,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,     0,   374,     0,
     375,   376,   377,   378,   379,     0,   380,   381,     0,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   406,     0,   407,   408,   409,   410,     0,     0,   411,
       0,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    96,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   106,   107,   108,     0,
       0,     0,     0,     0,     0,     0,   109,   110,     0,   111,
     112,   113,     0,   114,   115,   116,   117,   118,     0,   119,
     120,     0,   121,   122,   123,   124,   125,     0,     0,   126,
     127,   128,   129,   130,     0,   131,   132,   133,   134,   135,
       0,     0,     0,   136,   137,   138,   139,   140,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,     0,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   201,   202,   203,   204,     0,
     205,   206,     0,   207,   208,     0,   209,   210,   211,   212,
    1532,     0,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,     0,   224,     0,   225,   226,   227,   228,
     229,   230,   231,     0,   232,     0,   233,     0,     0,   234,
       0,   235,   236,   237,   238,   239,     0,     0,   240,   241,
       0,   242,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,     0,   263,   264,   265,
     266,   267,     0,   268,   269,     0,   270,     0,   271,   272,
     273,   274,   275,   276,     0,   277,   278,     0,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,   300,   459,   302,   303,
       0,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
     330,   331,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,     0,     0,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,     0,   374,     0,   375,   376,   377,   378,   379,     0,
     380,   381,     0,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,     0,   407,   408,   409,
     410,     0,     0,   411,     0,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    96,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     106,   107,   108,     0,     0,     0,     0,     0,     0,     0,
     109,   110,     0,   111,   112,   113,     0,   114,   115,   116,
     117,   118,     0,   119,   120,     0,   121,   122,   123,   124,
     125,     0,     0,   126,   127,   128,   129,   130,     0,   131,
     132,   133,   134,   135,     0,     0,     0,   136,   137,   138,
     139,   140,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,     0,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   201,
     202,   203,   204,     0,   205,   206,     0,   207,   208,     0,
     209,   210,   211,   212,  2090,     0,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,     0,   224,     0,
     225,   226,   227,   228,   229,   230,   231,     0,   232,     0,
     233,     0,     0,   234,     0,   235,   236,   237,   238,   239,
       0,     0,   240,   241,     0,   242,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   263,   264,   265,   266,   267,     0,   268,   269,     0,
     270,     0,   271,   272,   273,   274,   275,   276,     0,   277,
     278,     0,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
     300,   459,   302,   303,     0,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,     0,   330,   331,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
       0,     0,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,     0,   374,     0,   375,   376,
     377,   378,   379,     0,   380,   381,     0,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
       0,   407,   408,   409,   410,     0,     0,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      96,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   106,   107,   108,     0,     0,     0,
       0,     0,     0,     0,   109,   110,     0,   111,   112,   113,
       0,   114,   115,   116,   117,   118,     0,   119,   120,     0,
     121,   122,   123,   124,   125,     0,     0,   126,   127,   128,
     129,   130,     0,   131,   132,   133,   134,   135,     0,     0,
       0,   136,   137,   138,   139,   140,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,     0,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   201,   202,   203,   204,     0,   205,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,     0,   224,     0,   225,   226,   227,   228,   229,   230,
     231,     0,   232,     0,   233,     0,     0,   234,     0,   235,
     236,   237,   238,   239,     0,     0,   240,   241,     0,   242,
       0,     0,   243,   244,   245,     0,     0,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,     0,   263,   264,   265,   266,   267,
       0,   268,   269,     0,   270,     0,   271,   272,   273,   274,
     275,   276,     0,   277,   278,     0,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,     0,   285,   286,   287,
     288,   289,   290,   291,     0,   293,   294,     0,     0,   295,
     296,   297,   298,   299,   300,   459,   302,   303,     0,   304,
     305,   306,   307,   308,   309,   310,     0,     0,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,   330,   331,
       0,   332,   333,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,     0,     0,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,     0,
     374,     0,   375,   376,   377,   378,   379,     0,   380,   381,
       0,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,     0,   407,   408,   409,   410,     0,
       0,   411,     0,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   884,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,   587,   114,   115,   116,     0,   885,
     588,   886,   887,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   888,   889,   130,     0,   131,   132,   133,
     134,     0,     0,   589,     0,   136,   137,   138,   139,   140,
     590,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   591,   150,   151,   152,     0,     0,     0,   592,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   890,
     891,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   654,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,     0,   190,
     191,   192,     0,     0,   194,     0,   195,   196,   892,   198,
       0,   199,     0,   200,   593,     0,   594,   201,   202,   203,
     204,     0,   205,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   595,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   596,     0,   226,
     227,   228,   229,   893,   894,     0,   895,     0,   233,   597,
     598,   234,   599,   235,   236,   237,   238,   239,     0,     0,
     240,     0,   600,   242,   601,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   896,   602,   897,
     264,   265,   266,     0,     0,   268,   269,   603,   270,     0,
       0,   272,   898,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,     0,   604,   284,
     605,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   298,   299,     0,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   899,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,   606,   332,   333,   334,     0,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,   900,   352,   353,
     354,   607,   355,   356,   901,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
       0,   372,   373,     0,   374,   608,   375,   376,   377,   378,
     379,     0,   902,   903,     0,     0,   382,   383,     0,   385,
       0,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,   904,     0,   406,   610,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,   884,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   429,   430,   431,     0,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   106,   107,
     108,     0,     0,     0,     0,     0,     0,     0,   109,   110,
       0,   111,   112,   113,   587,   114,   115,   116,     0,   885,
     588,   886,   887,     0,   121,   122,   123,   124,   125,     0,
       0,   126,   127,   888,   889,   130,     0,   131,   132,   133,
     134,     0,     0,   589,     0,   136,   137,   138,   139,   140,
     590,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   591,   150,   151,   152,     0,     0,     0,   592,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   890,
     891,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,     0,   172,   173,     0,     0,
     174,   175,   654,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,     0,   190,
     191,   192,     0,     0,   194,     0,   195,   196,   892,   198,
       0,   199,     0,   200,   593,     0,   594,   201,   202,   203,
     204,     0,   205,     0,     0,     0,   208,     0,   209,   210,
     211,   212,   213,   595,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,     0,   224,   596,     0,   226,
     227,   228,   229,   893,   894,     0,   895,     0,   233,   597,
     598,   234,   599,   235,   236,   237,   238,   239,     0,     0,
     240,     0,   600,   242,   601,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   896,   602,   897,
     264,   265,   266,     0,     0,   268,   269,   603,   270,     0,
       0,   272,   898,   274,   275,   276,     0,   277,   278,     0,
       0,   279,   280,   281,     0,     0,   282,     0,   604,   284,
     605,     0,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   298,   299,     0,   459,
     302,   303,     0,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   899,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,   330,   331,   606,   332,   333,   334,     0,   336,
     337,   338,   339,   340,   341,   342,   343,   344,     0,     0,
     345,   346,   347,   348,   349,     0,   350,     0,   352,   353,
     354,   607,   355,   356,   901,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
       0,   372,   373,     0,   374,   608,   375,   376,   377,   378,
     379,     0,   902,   903,     0,     0,   382,   383,     0,   385,
       0,     0,   387,   388,   389,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,   399,
     400,   401,   402,   403,     0,   904,     0,   406,   610,   407,
     408,   409,   410,     0,     0,   411,     0,     0,   412,   413,
     414,   415,   416,   417,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   429,   430,   431
};

static const yytype_int16 yycheck[] =
{
      10,    16,    30,   537,    14,   499,   524,    17,    18,    19,
     615,   456,    22,    52,   813,    25,   547,   954,    28,    29,
     799,   615,     0,   487,   455,     0,   786,     0,   739,     0,
     918,   463,     0,    15,   692,  1455,   578,   811,   651,   652,
      15,  1021,   828,  1528,   828,   737,   828,   828,  1786,   681,
     788,  1525,   978,   981,  1534,  1447,  1536,   791,   671,  1853,
      70,   782,  1834,  1709,   857,   461,    76,    77,    78,    79,
      80,    54,  1410,   920,    25,    85,  1468,  1736,   816,    89,
    1477,  1861,    29,     0,  1868,     5,     9,  2094,  1024,    54,
       0,    49,     5,    13,    14,    56,     0,   622,   849,  1742,
       5,  1288,  2147,     5,    10,  2097,    84,     5,    14,    84,
    1584,    84,    18,    84,     9,    56,    84,     5,    11,  2165,
       5,   900,    28,    29,   622,    13,    14,    65,    79,     5,
    1163,   463,  2100,     5,   463,   729,     5,    13,    14,  2184,
       5,    76,     5,    78,     5,    80,   113,     5,    39,    39,
      85,  1165,    26,   503,    80,  1447,   552,   849,     3,    33,
       5,    11,    73,   164,    73,   134,   462,   116,   118,     5,
       4,    77,    83,   106,    83,     9,  1468,   104,    56,     4,
      90,  2236,   142,   615,     9,   468,    90,     9,   620,     3,
      40,   165,     8,   233,   537,    11,   539,   123,   541,  1775,
      26,  2267,   521,    11,   729,   164,   800,    33,    26,   803,
     804,   266,   274,   924,   268,    33,    30,    31,   274,    11,
      47,    71,  2267,   161,    40,  1741,   720,   116,   233,   254,
     116,    47,   582,  2049,  2369,     3,     4,     5,   104,   521,
     206,     9,   113,   132,   204,   337,   179,    11,    40,   111,
    2318,   200,  2298,  2428,    36,    71,   111,   179,   315,   239,
      26,   106,   973,   974,  1451,  2193,   158,  1678,  1196,   315,
     233,   903,     0,    57,   799,   156,    40,   890,   891,    71,
     164,    65,    71,   615,  2252,   898,  2214,    15,   620,  2539,
      11,   301,   349,   114,   986,  1941,   127,   154,  2092,   731,
     732,   799,    30,     5,   835,   737,   239,    71,   753,   242,
      11,  1649,  1023,   347,   274,   114,  1975,   239,   180,  1804,
    1979,   462,  1965,   619,   140,   382,    54,  1801,   473,  1803,
     395,    19,   473,   156,   179,  2470,   341,   476,   120,    40,
    1805,   691,  1734,   111,  1736,  2501,     0,  2503,   382,   163,
      71,   165,     4,  2603,  2399,   182,    84,     9,   268,   285,
     187,   127,   183,   301,   268,   345,   182,   224,   329,   250,
      71,   187,   429,   413,   439,   900,  1304,  2552,   341,   622,
    2425,   473,    70,   429,   183,   251,    22,   258,   329,   423,
     415,   253,  2208,   216,   239,   301,   223,   242,   127,   731,
     732,  1447,   900,   258,   296,   737,   851,   223,   413,  1874,
    2338,   300,   345,   844,   477,   477,   847,   849,   473,   473,
     330,   477,  1468,   345,   855,  1185,   330,   859,    90,  2497,
    2586,   781,   263,   473,   393,   463,    26,   205,  2573,   473,
    2486,  2017,  1734,   227,  1736,   455,   456,   457,  1964,   409,
     413,   329,   419,  2508,   270,   382,   981,  1490,  1257,   227,
     779,   387,    11,   432,  2236,   748,   415,   417,   473,  1449,
    1450,  2537,   410,  1410,   489,  2121,   477,  1491,   488,  2471,
     490,   463,   393,   981,   393,   524,   496,   462,   379,   379,
    1901,   365,  2537,  2152,   504,   427,   132,   779,  2157,   473,
     345,  2160,   436,   238,  2472,  2148,   516,   372,   373,   393,
     473,   477,  1204,   426,    56,   473,   477,   849,   528,   501,
    1271,   454,   169,  2530,   253,   459,   436,   859,   511,   415,
     859,  1457,   436,   360,   263,   513,   477,   127,   513,   365,
     513,  2026,   513,  1479,   360,   513,   511,   365,  1485,   559,
     560,   457,   562,   473,   986,   478,   799,   504,   989,  2039,
     473,   496,   858,   257,   474,   516,   476,  1754,   473,   438,
     474,   473,   476,   923,  2368,   473,   469,   472,   462,  1271,
     227,   103,   932,  1975,   144,   473,   936,  1979,   473,  2373,
     459,   475,  2372,   528,   944,   945,   513,   473,   504,   471,
     615,   473,   438,   475,   473,   620,   417,   957,   958,   454,
     473,   436,   473,   427,  2088,   473,   626,   310,  2015,   469,
    1467,   433,  1216,   459,   559,   560,  2272,   562,   188,   381,
     464,   465,  1226,  2292,   459,  1229,   272,   473,   325,   464,
     465,   457,   464,   465,   619,   338,   190,    91,   464,   465,
     466,   467,   468,   469,   986,   233,   233,   900,   466,   467,
     468,   469,   473,   691,   416,   477,  1594,  1651,   362,    30,
      31,  1196,   464,   465,   466,   467,   468,   469,  1212,   694,
     165,  2019,   471,  1975,  2478,   347,   475,  1979,  1734,   704,
    1736,   327,   328,  1306,   622,  1679,   464,   465,  1196,   398,
     328,   716,   466,   467,   468,   469,  1634,   124,   473,   251,
    2195,   429,  1649,    29,   729,   237,   731,   732,   240,   355,
     382,   165,  1380,   733,   233,   344,  1268,   355,  1656,    90,
    1272,   190,   212,  1275,   462,   463,  2508,    53,   981,   386,
    1461,   388,   752,   753,   456,   233,   640,   641,   758,   759,
     760,   154,   196,  1552,   417,  2147,   212,  1685,   471,   438,
    2152,   423,   475,   341,   341,  2157,   413,   211,  2160,  2161,
    1202,   251,  1204,   667,   436,   785,   786,   221,   622,  1304,
     459,   764,   765,   511,   767,   513,   210,   329,   798,    62,
      63,  1222,  2184,  1586,   473,   251,  1227,   459,   733,   764,
     765,   286,   767,   247,   438,   815,  1304,   758,  2602,   819,
     473,   473,  1999,   355,   824,  2553,  2554,   462,   386,   829,
     388,   224,  1560,  1481,   759,   459,   836,   386,   838,   388,
     475,   311,   341,    73,   844,   413,   413,   847,  2323,  1271,
    1183,   851,   852,    83,   854,   855,   752,   857,  2328,   473,
     785,   154,  1248,   341,  1286,  2147,   159,    13,    14,   113,
    2152,  1595,   265,   798,   815,  2157,  1600,  2605,  2160,  1212,
    1202,   799,  1204,   290,    22,  2267,   361,   859,   358,   473,
      28,   475,   341,   858,   819,  1442,  1443,   475,  1231,   333,
     349,   619,  2184,  1236,   829,   473,   473,  1834,   315,    73,
    2292,   836,   358,   268,   413,     8,  1834,   163,    11,    83,
     165,   456,    15,    16,    17,   464,   465,   466,   467,   468,
     469,   224,   857,   382,  2358,   413,   941,   655,  2362,  1975,
    2364,   348,   349,  1979,   347,   415,  1454,   466,   253,  1271,
     194,   196,   920,   258,   954,   920,   852,   920,   854,   920,
     337,   338,   920,  1196,  1286,   799,   211,   438,   127,   415,
    1310,   477,   265,   691,   473,   382,   221,   473,     4,   382,
     429,     4,   900,     9,   474,  2267,     9,   154,   459,   989,
     474,  1692,   159,   152,   132,   473,   347,  2461,  2462,  1531,
     407,  1533,   473,   308,   888,   889,   164,   251,   474,   253,
    2292,   477,   474,   897,  2424,   477,  1932,  2399,  1018,    22,
     423,  1991,   429,   468,  1029,    28,  1815,   206,   473,   106,
     475,   382,     8,   436,  1374,   436,     5,   438,     7,    15,
      16,    17,   474,  2425,    13,   477,   764,   765,    22,   767,
    1814,    20,  1802,    53,    28,    24,   459,   224,  1398,  2523,
    1581,  1683,  1684,   981,   948,   949,   900,   473,   468,   475,
     473,  1304,   423,   473,   473,   475,   427,   622,  1854,  1594,
    1854,  1782,  1854,  1854,  1848,   436,   456,   111,   333,  1813,
     147,  1815,  2019,  1018,  1877,   210,  1436,    22,   265,   258,
      13,    14,   179,    28,   263,   471,  1594,   473,   459,   475,
     323,  2147,  1534,  1535,  1536,  2590,  2152,  2399,   147,  1634,
     474,  2157,   473,   477,  2160,  1773,   474,   474,  2538,   132,
     477,  1131,   147,  1133,   272,  1373,   127,  1375,  1376,  2057,
     858,  1656,  1142,  2425,  1144,  2555,  1634,   981,  2184,   474,
      22,  1833,   477,  1835,   474,  2537,    28,   477,   132,   147,
    1132,   152,   239,   429,   474,   242,     8,   477,  1656,    11,
    1685,   473,  1140,    15,    16,    17,  1176,   270,  1725,  1726,
    1727,  1728,  1620,  1621,  1622,  1185,  1186,  1608,  1188,   327,
     474,  1191,   253,   477,  1709,  2073,    79,  1685,  1198,  1199,
    1200,  1201,   920,  1203,  2614,   309,  1131,   132,  1133,  1209,
     147,  1211,  1534,  1535,  1536,   474,   474,   355,   477,   477,
     440,  1709,  1222,  1223,   337,   338,   474,  1227,  1228,   477,
     147,  2267,  1232,  1233,  1234,  1235,   474,  1237,  1238,   477,
     475,   400,  1750,  1751,  1752,   474,  1246,  1247,   477,   147,
    1834,  1176,   411,   382,   799,  2537,  2292,   281,   474,  1259,
     132,   477,   253,  1747,   146,    35,  2055,   258,   345,   272,
     268,   474,   263,   991,   477,   222,   474,  2027,  1196,   477,
     474,  1286,   420,   477,   473,    65,   621,   622,     5,   474,
    1186,  1992,   477,  1261,   270,  2064,   474,   474,   272,   477,
     477,   386,  1198,   388,  1200,     5,    22,  1203,    22,  2236,
    2011,   473,    28,  1209,    28,  1211,   337,   338,  2236,  1834,
     323,  1246,   474,   347,   327,   477,   474,  1223,   386,   477,
     388,   111,  1228,    26,   731,   732,  1232,  1233,  1234,  1235,
    1358,  1237,  1238,   473,  1876,   187,  1834,   272,   474,   323,
    1690,   477,   355,   327,   474,   900,  2234,   477,   382,   337,
     338,  1594,  1196,  2399,   159,   473,   208,   460,   461,   462,
     473,   464,   465,   466,   467,   468,   469,   454,   297,  2297,
    1398,   355,  2300,    76,   474,   473,  1304,   477,   168,  2425,
     474,    84,   474,   477,   474,   477,   473,   477,   323,   423,
     272,  1634,   327,   474,     5,   474,   477,  1829,   477,   400,
    1410,  1833,   436,  1835,   473,     5,   132,   420,   132,   112,
     411,   474,  1140,  1656,   477,  1980,  1941,  1982,   270,   474,
     355,   518,   477,   520,   146,   459,   981,   488,   474,   490,
    1440,   477,    35,   473,     5,  2146,   420,  1447,   473,   473,
       5,   323,  1685,  1941,  1472,   327,   474,   474,   437,   477,
     477,    54,  2046,   474,   799,   347,   477,   473,  1468,   473,
    1304,   473,  1472,   253,   473,  1475,  1709,  1477,   258,  2243,
     473,   473,  1966,   355,   460,   461,   462,   180,   464,   465,
     466,   467,   468,   469,   474,   420,   473,   477,   191,  1467,
     382,  2537,  1467,   473,  1467,   473,  1467,  1829,   473,  1467,
     103,  1833,   473,  1835,   474,  1440,   474,   477,   279,   477,
     474,   301,   206,   477,   477,  1525,  2058,  2059,   474,   474,
     474,   477,   477,   477,   169,  1540,   474,   317,    94,   477,
      35,   423,  2057,  1261,   474,   355,   159,   477,   420,  2064,
     265,   159,  2006,   263,   436,   190,   272,  2239,   272,   222,
     393,   473,   473,    83,   393,   900,    53,   477,  1573,  2057,
      53,   393,   244,   393,   393,  1575,  2064,   459,   436,   147,
    1580,  2508,    90,   253,  1584,  1585,  1586,  1587,   253,   473,
    2508,   473,   227,    35,   475,   426,   189,   477,  1598,   473,
     473,  1834,  1602,    34,  1604,   473,  2121,   323,  1608,   323,
      91,   327,   473,   327,   432,     9,   391,  2039,   460,   461,
     462,    11,   464,   465,   466,   467,   468,   469,   391,   477,
     410,   391,  2235,  2121,   473,   347,   258,   473,   273,   355,
    1358,   355,  2324,  1611,   237,   393,   981,   240,   173,  1649,
     155,  1196,  2236,   164,   479,  1580,    35,   474,   251,  2167,
    1585,  1586,  1587,   417,   473,   204,  2174,   358,   212,   477,
     382,   269,   477,   473,   212,   253,  1594,  1602,   371,  1604,
    1398,   374,   212,   306,   165,   266,  1021,   429,   473,   282,
     147,  1696,  1721,   147,   268,   436,   253,  1415,   268,   268,
     253,  1719,  1598,    35,   420,    34,   420,   471,  1941,   471,
     393,   423,   393,  1431,   393,   196,  1634,  2039,  1736,     8,
     473,  2236,    11,  1723,   436,   393,    15,    16,    17,  1447,
     211,  1731,  1732,  1733,  1734,   328,  1736,  1737,  1656,   474,
     221,  1741,  1742,  2346,   474,   474,   164,   459,  2236,  1467,
    1468,   386,   474,   388,  1472,   474,   349,  2272,  2353,  1304,
    1594,   473,   475,   474,   456,   474,   247,  1685,  2450,  2353,
     474,   474,  2280,   474,   456,   410,   369,   474,   413,  1779,
    2569,   477,  2297,  2204,  2272,  2300,   164,   268,   474,   474,
     456,  1709,   278,   393,   474,  1795,   474,  1797,   474,   473,
    1634,  1801,  1802,  1803,   473,  1805,  1731,  1732,  1733,  2297,
     474,   473,  2300,   473,   433,   433,   423,  2239,  2339,   268,
     462,  1821,  1656,  1823,  2057,  2507,   458,   415,   269,  1834,
     269,  2064,   269,   477,  2318,   622,  1836,  1837,  1838,  1839,
    1840,  1841,  1842,  1843,  1844,  1845,  1851,   232,   393,   253,
    2285,  1685,   333,   473,   147,  1855,   190,  2452,   272,   147,
     147,  1196,  1862,  2298,   393,   393,   393,   393,   474,   266,
    1795,   436,   477,   268,  1874,  1709,     8,  1877,    35,    11,
     147,   474,   147,    15,    16,    17,   471,   345,  2121,   242,
     474,   138,   164,  1611,    11,   159,   478,   474,   474,   474,
      32,  1797,  2324,   164,  1872,   274,  2328,   473,    40,   433,
    2431,   474,   382,   164,   173,    47,  1834,  2239,   477,   208,
     474,   473,   459,  2344,  2508,  1821,   474,   474,   330,   472,
    1855,  2353,   422,    81,   269,   147,   417,   473,   473,    71,
    1836,  1837,  1838,  1839,  1840,  1841,  1842,  1843,  1844,  1845,
     168,   403,  1877,  1288,  1954,   142,   473,  1957,  1958,  1959,
    1960,   473,  2302,    35,  1964,  1965,    77,   154,  1968,  1304,
    2405,  1971,   159,   473,   417,  1975,  2571,   474,   281,  1979,
     472,   270,   164,   472,   211,  1985,   474,   277,   473,  2513,
     474,   211,   474,  2508,   473,  2000,   474,  2002,   473,   473,
    1834,  1719,  2324,  2236,   384,  2426,  2328,   275,    53,   176,
    2010,   474,   799,   474,   474,  2015,  1734,   204,  1736,  2019,
    2508,     8,   462,  1941,    11,   436,   192,  2027,  2450,   181,
    2452,  2353,  1957,  1958,  1959,  1960,   258,   224,   462,  2272,
    2008,  2009,   258,   393,   347,   393,   473,    35,   253,  1594,
     182,   473,  2052,    40,   104,   187,  2396,   164,   268,   436,
      47,   473,    35,   472,  2297,   164,   473,  2300,  2408,   211,
     287,   435,   473,   473,    83,   128,   208,   209,   265,   382,
     317,   474,   473,   771,    71,  2507,   473,   274,  2088,  1634,
     212,   223,   111,    35,  2094,   147,    71,   118,   147,    35,
     474,    53,   338,   338,    35,   473,  2106,  1941,   473,   422,
     477,  1656,   474,   900,  1449,  1450,  1451,   474,    71,    35,
     423,   253,   180,   417,   256,   403,    35,  2095,  2450,   317,
    2452,    65,   271,   436,   473,    65,   477,    35,   270,  2057,
    1685,   273,   355,   462,   258,   180,  2064,  2147,  2148,  2571,
    2150,   235,  2152,   140,  1872,   473,   459,  2157,   403,    35,
    2160,  2161,   258,  2163,  1709,  2165,   473,   271,    65,   271,
     473,   460,   461,   462,    71,   464,   465,   466,   467,   468,
     469,   473,   251,   474,  2184,  2507,    83,   473,   268,   324,
     337,   192,   477,   477,   981,   182,   393,   268,   268,    32,
     187,   116,   473,  2121,  2204,  2205,   415,    21,   317,   513,
    1816,   474,  1829,  2213,   111,  1210,   113,  1529,  2010,  1779,
    2425,  2504,   409,  2057,  1857,  2510,  2180,  2593,   360,  2051,
    2064,  2236,  2331,  2568,  2254,  2556,   223,  2237,  2238,  1522,
     786,  1535,  1862,  2507,  1575,  1833,  2566,  1518,  2248,  2571,
    2505,  2251,   844,  1579,  2366,  2450,  2571,  1975,  1851,  1594,
     724,  1979,  1153,  2263,  2264,  1482,   773,  2267,   956,  1497,
    1179,   168,   752,   774,  1757,  2508,  2416,  2001,  2246,  1178,
     776,  1468,  1736,   270,  2302,  2285,  1965,  2121,  2213,  1834,
    2008,  2009,  2292,  1981,  2293,    35,  1734,   194,  2298,  1634,
    2268,  2399,  2398,  2410,  1291,  2411,  2176,  2494,  2308,  2205,
    2495,  2482,  1485,  2313,    54,  1415,  1312,  1016,  2236,  1460,
    1582,  1656,  2322,  2391,  1413,   457,   859,  1286,   460,   461,
     462,  1132,   464,   465,   466,   467,   468,   469,   758,  2264,
    1780,  2237,  2238,  1133,  2344,   477,  1019,    -1,  2353,    -1,
    1685,    -1,  2357,    -1,  2272,  2251,   253,    -1,    -1,    -1,
      -1,   258,  2367,   103,   169,    -1,    -1,    -1,   463,    -1,
    2370,    -1,    -1,   360,  1709,    -1,    -1,  2095,    -1,  2297,
      -1,    -1,  2300,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,  1941,  2322,    -1,  2399,
      -1,    -1,  2236,  2371,   301,  2405,    -1,    -1,   503,  1196,
    2410,    -1,    -1,    -1,    -1,    -1,    -1,  2313,    -1,  1754,
     317,    -1,   227,    -1,    -1,  2425,  2426,  2427,  2428,    -1,
      -1,    -1,    -1,    -1,  2152,  1356,  1357,    -1,  2272,  2157,
    1361,    -1,  2160,    -1,    -1,  2370,    -1,  2452,    -1,   189,
      -1,    -1,  2457,  2421,  2459,    -1,    -1,    -1,  2463,  2464,
      -1,  2461,  2462,  2297,    -1,  1153,  2300,    -1,   273,    -1,
     457,    49,    -1,  1394,  1395,    -1,  2476,   464,   465,   466,
     467,   468,   469,    -1,    -1,    -1,  2486,   582,    -1,    -1,
      -1,    -1,    -1,    -1,  2494,    -1,    -1,   237,    -1,  1834,
     240,    -1,    -1,  2508,  2504,    -1,    -1,    -1,    -1,    -1,
      -1,   251,  2057,   410,    92,    -1,    -1,  1304,    -1,  2064,
     615,    -1,    -1,  2523,    -1,   620,   621,   622,  2246,    -1,
    2530,    -1,    -1,    -1,    -1,    -1,   341,  2537,    -1,   117,
      -1,    -1,   282,   638,    -1,    -1,    -1,    -1,    -1,    -1,
    2268,  2476,  2552,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,  2529,   140,    -1,    -1,    -1,  2571,    -1,    -1,    -1,
      -1,    -1,    -1,   668,  2292,    -1,  2121,    -1,    -1,    -1,
      -1,   386,   160,   388,  2302,   163,    -1,    -1,   328,    -1,
    2508,    -1,   687,   688,   689,    -1,   691,    -1,    -1,   177,
      -1,  2601,    -1,    -1,    -1,   410,  1941,    -1,   413,   349,
      -1,    -1,    -1,    -1,    -1,    -1,   711,    -1,    -1,    -1,
      -1,  2621,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,   731,   732,    -1,    -1,
      -1,   736,   737,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2371,    -1,    -1,  1991,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1999,    -1,    -1,    -1,  1356,  1357,
      -1,   766,    -1,  1361,  2508,   770,   771,    -1,    -1,    -1,
     258,    -1,    -1,    -1,    -1,    -1,   781,    -1,   266,    -1,
      -1,  2236,    -1,    -1,    -1,    -1,  2621,    -1,    -1,    -1,
      -1,    -1,    -1,  2421,   799,    -1,  1394,  1395,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2057,    -1,    -1,    -1,    -1,  2272,    -1,  2064,
     308,    -1,    -1,    -1,    -1,    -1,  1657,  1658,  1659,  1660,
      -1,    -1,  1663,  1664,  1665,  1666,  1667,  1668,  1669,  1670,
    1671,  1672,  2297,    -1,   849,  2300,    -1,    -1,   615,    -1,
      -1,    -1,    -1,   620,   859,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,  2121,    -1,    -1,    -1,
      -1,    -1,  1713,  1714,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    40,    -1,    -1,   900,    -1,  1594,    -1,    47,
      -1,  2529,    -1,    -1,    -1,    -1,    -1,    54,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   923,    -1,
      -1,    -1,    -1,    71,   929,     8,    -1,   932,    11,    -1,
      -1,   936,    15,    16,    17,    -1,    -1,  1634,    -1,   944,
     945,    -1,    -1,    -1,    -1,    -1,    -1,   952,    -1,    32,
     955,   956,   957,   958,    35,    -1,   103,    -1,    -1,  1656,
     965,   966,   729,    -1,   731,   732,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    54,    -1,    -1,   981,   982,   983,   984,
     985,   986,    -1,    -1,    -1,   990,    -1,    -1,  1685,   994,
      -1,  2236,    -1,   998,    -1,    -1,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,  1009,    -1,    -1,  1012,    -1,    -1,
      -1,    -1,  1709,    -1,  1019,    -1,  1021,    -1,    -1,    -1,
      -1,   168,   103,   104,    -1,    -1,    -1,  2272,    -1,    -1,
     111,    -1,    -1,   800,   182,    -1,   803,   804,    -1,   187,
      -1,    -1,   189,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,  2297,  2508,    -1,  2300,    -1,    -1,    -1,  1657,
    1658,  1659,  1660,    -1,    -1,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,   223,     0,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,   168,    -1,    -1,
     237,    -1,    -1,   240,    -1,    -1,    -1,   864,   865,    -1,
       8,    -1,    -1,    11,   251,    -1,    -1,    -1,   189,    71,
      -1,    -1,    -1,    -1,    -1,  1713,  1714,    -1,    -1,    -1,
      -1,    -1,   270,    -1,    -1,   208,    -1,    -1,    -1,    -1,
    1135,    -1,    40,    -1,    -1,   282,    -1,  1834,     8,    47,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,  1153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   237,  1162,  1163,   240,
      -1,    -1,    32,    71,    -1,    -1,    90,   934,   935,    -1,
     251,    -1,   253,    -1,    -1,   942,    -1,    -1,   140,   946,
     947,   328,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,
      -1,  1196,    -1,    -1,   961,    -1,   963,  1202,    -1,  1204,
      -1,   282,   349,    -1,    -1,    -1,    -1,    -1,    -1,   976,
     977,    -1,   360,    -1,    -1,    -1,    -1,    -1,   142,    -1,
     182,    -1,   369,    -1,    -1,   187,    -1,    -1,    -1,    -1,
     154,    -1,   140,    -1,    -1,   159,    -1,    -1,    -1,    -1,
     164,    -1,    -1,    -1,  1941,    -1,    -1,   328,    -1,   173,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   223,    -1,  2508,    -1,    -1,  1271,    -1,   349,    -1,
      -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,    -1,   187,
     204,  1286,    -1,  1288,  1289,  1290,    -1,  2118,   369,    -1,
     371,    -1,    -1,   374,    -1,    -1,    -1,     0,    -1,  1304,
     224,    -1,    -1,    -1,    -1,  1310,  1311,    -1,   270,   457,
      -1,  1316,   460,   461,   462,   223,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
       8,   265,    -1,    11,   268,    -1,    -1,    15,    16,    17,
     274,  1356,  1357,  1358,    -1,    -1,  1361,    -1,    -1,    -1,
    2057,    -1,   270,    -1,    32,    -1,    -1,  2064,  1373,  1374,
    1375,  1376,    -1,    -1,    -1,  2206,  1381,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,    90,    -1,  1394,
    1395,    -1,   473,  1398,    -1,  1162,  1163,    -1,   360,    -1,
     270,    -1,    -1,    -1,    -1,    -1,   330,  1412,    -1,  1414,
      -1,  1416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2121,    -1,    -1,    -1,    -1,    -1,
      -1,  1436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
    2271,    -1,  1447,    -1,  1449,  1450,  1451,    -1,    -1,  1216,
      -1,   154,   360,    -1,    -1,  1460,   159,    -1,   382,  1226,
      -1,   164,  1229,  1468,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,   176,    -1,    -1,    -1,  1482,    -1,    -1,
      -1,   142,    -1,    -1,    -1,   409,    -1,    -1,    -1,    -1,
      -1,    -1,  1497,   154,    -1,   457,    -1,    -1,   159,    -1,
      -1,   204,   464,   465,   466,   467,   468,   469,    -1,   433,
    1515,   435,   436,    -1,    -1,    -1,    -1,    -1,    -1,  1286,
    2118,   224,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1534,
    1535,  1536,    -1,  1300,    -1,    -1,    -1,    -1,    -1,  2236,
     208,    -1,    -1,   204,    -1,    -1,    -1,   471,    -1,   457,
     474,   475,   476,    -1,    -1,    -1,   464,   465,   466,   467,
     468,   469,   265,   224,    -1,   268,    -1,    -1,    -1,    -1,
      -1,   274,    -1,    -1,    -1,  2272,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,   486,   487,    -1,    -1,    -1,  1594,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
    2297,    -1,   270,  2300,   265,    -1,    -1,    -1,  2206,    -1,
      -1,    -1,    40,   274,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,  1631,   330,    -1,  1634,
      -1,    -1,    -1,    -1,    -1,    -1,  1641,    -1,    -1,    -1,
      -1,    -1,  1647,    71,    -1,  1650,    -1,    -1,    -1,    -1,
      -1,  1656,  1657,  1658,  1659,  1660,    -1,    -1,  1663,  1664,
    1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,    -1,    -1,
      -1,  1676,  1677,  2271,    -1,    -1,    -1,    -1,    -1,   382,
    1685,    -1,    -1,    -1,    -1,  1690,    -1,    -1,    -1,  1456,
      -1,    -1,  1697,    -1,    -1,  1700,    -1,  1702,    -1,    -1,
      -1,    -1,    -1,    -1,  1709,  1710,   409,    -1,  1713,  1714,
      -1,    -1,   140,  1718,  1719,    -1,    -1,    -1,    -1,   621,
      -1,    -1,  1489,  1490,    -1,    -1,    -1,    -1,    -1,  1734,
     433,  1736,   435,   436,    -1,    -1,   638,     8,    -1,    -1,
      11,     0,    -1,  1748,    15,    16,    17,    -1,   409,  1754,
      -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,    -1,   187,
    1765,    32,    -1,    -1,    -1,    -1,   668,    -1,   471,    -1,
      -1,   474,   475,   476,    -1,    -1,  1781,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,   687,   688,   689,    -1,   691,
      -1,    -1,   460,   461,   462,   223,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   711,
     471,  2508,    40,   474,   475,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,  1829,    -1,    -1,    -1,  1833,  1834,
    1835,    90,    -1,    -1,   736,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,    71,    -1,    -1,    -1,     8,    -1,    -1,
      11,  1618,  1619,    -1,    -1,    -1,  1623,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   766,    -1,    -1,    -1,   770,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,   142,    -1,    -1,    47,  1892,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   154,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,
      71,    -1,   140,    -1,   173,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1935,  1936,   360,    -1,    -1,  1940,  1941,   208,    -1,    -1,
    1945,    -1,    -1,  1948,  1949,   204,    -1,    -1,  1953,    -1,
      -1,    -1,    -1,    -1,   182,    -1,   705,    -1,    -1,   187,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,    -1,
    1975,    -1,    -1,     8,  1979,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,  1991,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1999,   223,    -1,    -1,    -1,   270,
     749,  2006,    -1,    -1,    -1,    -1,   265,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,   274,    -1,    -1,    -1,    -1,
      -1,   182,    -1,    -1,    -1,    -1,   187,   929,    -1,   457,
      -1,    -1,    -1,    -1,  2039,    -1,   464,   465,   466,   467,
     468,   469,   270,  2048,    -1,    -1,    -1,    -1,    -1,    -1,
     952,    -1,  2057,   955,    -1,    -1,   958,    -1,    -1,  2064,
      -1,    -1,   223,   965,   966,    -1,    -1,  1834,    -1,    -1,
      -1,   330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     982,   983,   984,   985,    -1,    -1,    -1,    -1,   990,    -1,
      -1,    -1,   994,    -1,    -1,    -1,   998,    -1,    -1,  1001,
    1002,  1003,  1004,  1005,  1006,  1007,  1008,  1009,    -1,   270,
    1012,  1878,    -1,  2118,    -1,    -1,  2121,  1019,    -1,  1021,
      -1,    -1,    -1,   382,    -1,  2130,  2131,    -1,    -1,  2134,
     879,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2147,    -1,    -1,    -1,    -1,  2152,    -1,    -1,
     409,    -1,  2157,    -1,    -1,  2160,  2161,    -1,    -1,    -1,
      -1,    -1,    -1,  2168,  2169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,   433,    -1,   435,   436,   927,  2184,
      -1,  2186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   360,
      -1,  2206,   951,    -1,    -1,    -1,    -1,   956,    -1,    -1,
      -1,    -1,   471,    -1,    -1,   474,   475,   476,   967,   968,
     969,    -1,   971,    -1,     0,    -1,    -1,    -1,    -1,   457,
      -1,  2236,    -1,  1135,  2239,   270,   464,   465,   466,   467,
     468,   469,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    28,    -1,    30,    31,    -1,    -1,    -1,    -1,
    1162,  1163,  2267,    -1,    -1,    -1,  2271,  2272,  1017,    -1,
      46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2046,
      -1,    -1,    -1,  2288,  2051,    -1,    -1,  2292,    -1,  1038,
      66,    -1,  2297,    -1,    -1,  2300,   457,  2302,  2065,  2066,
      -1,    77,    -1,   464,   465,   466,   467,   468,   469,  2314,
      -1,    -1,    88,    -1,    90,    -1,    -1,    -1,    -1,  2324,
      -1,    -1,     3,  2328,  2329,    -1,    -1,     8,    -1,    -1,
      11,   107,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,  2353,    -1,
      -1,    32,    -1,    -1,    35,    -1,   132,    -1,    -1,    40,
      -1,    -1,   138,    -1,    -1,    -1,    47,    -1,    -1,    -1,
     146,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1288,  1289,  1290,    -1,
      71,  2396,    -1,    -1,  2399,    -1,    -1,    -1,    -1,    -1,
    1149,    -1,    -1,  2408,    -1,    -1,    -1,    -1,    -1,  1311,
      -1,  2416,  1161,    -1,  1316,    -1,    -1,  1166,    -1,    -1,
    2425,    -1,    -1,    -1,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,
    2445,    20,    -1,    -1,    -1,  2450,    -1,  2452,    -1,    -1,
     226,    -1,    -1,    -1,    -1,    -1,  1358,    -1,    -1,    -1,
    2227,  2228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2236,
      -1,  1373,    -1,  1375,  1376,    -1,  2481,  2482,    -1,  1381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   182,  2507,  2508,    -1,    -1,   187,    -1,    87,    -1,
    1412,    -1,  1414,    -1,  1416,    -1,    -1,    -1,    -1,   295,
      -1,    -1,   298,    -1,    -1,    -1,    -1,   208,   209,    -1,
      -1,    -1,  2537,    -1,  2539,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   223,    -1,    -1,    -1,    -1,  1449,  1450,  1451,
      -1,   327,    -1,    -1,    -1,    -1,    -1,    -1,  1460,   335,
      -1,    -1,   141,    -1,    -1,  1314,  2571,    -1,    -1,    -1,
     149,   347,   253,    -1,    -1,   256,    -1,    -1,    -1,   355,
    1482,    -1,   161,   359,    -1,    -1,  2353,    -1,  1337,   270,
      -1,    -1,   273,   369,    -1,  1497,    -1,    -1,  2603,  2604,
      -1,    -1,    -1,    -1,    -1,  1354,   382,  1356,  1357,    -1,
    1359,   190,  1361,  1515,    -1,    -1,  1365,    -1,    -1,    -1,
      -1,    -1,    -1,  1372,    22,    -1,    -1,    -1,  1377,    -1,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    35,  1387,  1388,
    1389,  1390,   418,    -1,    -1,  1394,  1395,   423,  1397,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    54,   236,    -1,  1408,
     436,    -1,  1411,    -1,    -1,    -1,    -1,    -1,    -1,  1418,
    1419,  1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,   360,
      -1,    -1,    -1,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,
     476,    -1,    -1,    -1,    -1,   103,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   293,    -1,  1465,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    22,    -1,    -1,   307,  1631,
      -1,    28,    -1,    -1,   132,    -1,    -1,    -1,    35,  1641,
      -1,  2508,    -1,    -1,    -1,  1647,    -1,    -1,  1650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    54,     8,    -1,
     339,    11,   341,    -1,    -1,    15,    16,    17,    -1,    -1,
     349,    -1,    -1,   352,  1676,  1677,   457,    -1,    -1,   460,
     461,   462,    32,   464,   465,   466,   467,   468,   469,    -1,
      40,   189,   371,    -1,    -1,  1697,    -1,    47,  1700,    -1,
    1702,    -1,    -1,   382,    -1,    -1,   103,    -1,  1710,    -1,
     389,    -1,    -1,    -1,    -1,    -1,  1718,  1719,    -1,   398,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   132,    -1,    -1,    -1,   237,
      -1,    -1,   240,    -1,    -1,    -1,  1748,    -1,    -1,    -1,
     429,    -1,  1754,   251,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1765,    -1,  1614,  1615,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,  1781,
      -1,  1630,    -1,    -1,   282,    -1,    -1,  1636,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1653,  1654,  1655,    -1,  1657,  1658,
    1659,  1660,    -1,    -1,  1663,  1664,  1665,  1666,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,   323,    -1,    -1,    -1,   327,
     328,    -1,   182,    -1,    -1,    -1,    -1,   187,     8,    -1,
     237,    11,    -1,   240,  1693,    15,    16,    17,    -1,  1698,
    1699,   349,    -1,    -1,   251,    -1,    -1,   355,   208,   209,
      -1,    -1,    32,  1712,  1713,  1714,  1715,    -1,  1717,    -1,
      40,   369,    -1,   223,    -1,   272,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,    -1,    -1,
    1892,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,
      -1,  1760,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,   420,   273,    -1,    -1,   323,    -1,    -1,    -1,
     327,   328,    -1,  1935,  1936,    -1,    -1,    -1,  1940,    -1,
      -1,    -1,    -1,  1945,    -1,    -1,  1948,  1949,    -1,  1798,
      -1,  1953,   349,    -1,    -1,    -1,    -1,    -1,   355,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,  1991,
      -1,    40,    -1,    -1,    -1,    -1,    -1,  1999,    47,    -1,
      -1,    -1,    -1,    -1,  2006,    -1,    -1,    -1,    -1,    -1,
     360,    -1,   182,    -1,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,    71,   420,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,   209,
      -1,    -1,    -1,    -1,  1893,    -1,  2048,    -1,  1897,  1898,
      -1,  1900,    -1,   223,  1903,  1904,  1905,  1906,    -1,    -1,
      -1,  1910,  1911,  1912,  1913,  1914,  1915,  1916,  1917,  1918,
    1919,  1920,  1921,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   253,    -1,  1934,   256,    -1,  1937,    -1,
    1939,    -1,    -1,    -1,  1943,    -1,    -1,  1946,  1947,    -1,
     270,  1950,  1951,   273,    -1,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,    -1,   474,    -1,    -1,    -1,  2130,  2131,
      -1,    -1,  2134,   182,    -1,    -1,    -1,    -1,   187,    -1,
      -1,    -1,    -1,    -1,  1993,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2005,    -1,    -1,   208,
     209,    -1,    -1,    -1,    -1,    -1,  2168,  2169,    -1,  2018,
      -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2186,    -1,     8,    -1,    -1,    11,
     360,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   253,    -1,    -1,   256,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,   270,    -1,    -1,   273,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2114,    -1,    -1,    -1,  2118,
      -1,    -1,    -1,    -1,    -1,  2124,  2125,  2126,    -1,    -1,
    2129,    -1,    -1,  2132,  2133,    -1,  2288,   457,  2137,    -1,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
    2302,    -1,    -1,    -1,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   360,  2314,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2329,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2206,    -1,    -1,
     182,    -1,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2224,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,   209,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,  2416,   464,   465,   466,   467,   468,
     469,  2270,  2271,    -1,    -1,   474,  2275,  2276,  2277,    -1,
      -1,   253,    -1,    -1,   256,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2445,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,  2306,  2307,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2320,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2481,
    2482,    -1,    -1,  2332,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2539,   360,    -1,
      -1,    -1,    -1,    -1,  2393,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2404,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2423,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2437,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2603,  2604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,   474,    -1,    -1,    -1,    -1,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,  2515,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,  2542,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,  2616,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,   127,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,    -1,    -1,    -1,    -1,    -1,    -1,   464,   465,
     466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,    -1,
      -1,    -1,   478,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,    -1,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,    -1,   459,
      -1,    -1,    -1,    -1,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,   478,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
      -1,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
      -1,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,   459,    -1,    -1,    -1,    -1,
     464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
      -1,    -1,    -1,    -1,   478,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,    -1,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,   166,   167,
     168,   169,    -1,   171,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
     218,   219,   220,   221,   222,   223,    -1,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,    -1,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
      -1,    -1,    -1,    -1,    -1,    -1,   464,   465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,
     478,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,    -1,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
      -1,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,    -1,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,    -1,    -1,    -1,    -1,
      -1,    -1,   464,   465,   466,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,    -1,    -1,   478,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,    -1,    -1,    -1,    -1,    -1,    -1,   464,   465,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,
      -1,    -1,   478,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,    -1,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,    -1,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,    -1,    -1,
      -1,    -1,    -1,    -1,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,   478,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
      -1,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
     164,   165,   166,   167,   168,   169,    -1,   171,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,    -1,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
      -1,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,    -1,    -1,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,    -1,    -1,    -1,    -1,    -1,
     464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
      -1,    -1,    -1,    -1,   478,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,    -1,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,    -1,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,    -1,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,    -1,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
      -1,    -1,    -1,    -1,    -1,    -1,   464,   465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,
     478,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,    -1,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
      -1,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,    -1,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,    -1,    -1,    -1,    -1,
      -1,    -1,   464,   465,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,    -1,    -1,   478,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,    -1,    -1,    -1,    -1,    -1,    -1,   464,   465,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,
      -1,    -1,   478,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,    -1,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,    -1,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,    -1,    -1,
      -1,    -1,    -1,    -1,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,   478,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
      -1,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,    -1,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
      -1,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,    -1,    -1,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,    -1,    -1,    -1,    -1,    -1,    -1,
     464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
      -1,    -1,    -1,    -1,   478,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,    -1,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,    -1,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,    -1,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,    -1,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
      -1,    -1,    -1,    -1,    -1,    -1,   464,   465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,
     478,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,    -1,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
      -1,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,    -1,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,    -1,    -1,    -1,    -1,
      -1,    -1,   464,   465,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    -1,    -1,    -1,   478,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   464,   465,
      -1,    -1,     3,     4,     5,     6,     7,   473,     9,    10,
      -1,    -1,   478,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,   384,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   464,   465,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,    -1,    -1,    -1,    -1,   478,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,   209,   210,   211,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   464,
     465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,
      -1,    -1,    -1,   478,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,    -1,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
      -1,    -1,    -1,    -1,    -1,   464,   465,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,    -1,   478,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,    -1,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,
     473,    -1,    -1,    -1,    -1,   478,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,    -1,    -1,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,   255,    -1,   257,    -1,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,    -1,   383,    -1,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,    -1,   428,   429,
     430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,    -1,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   474,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,   269,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,    -1,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     473,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,   269,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,    -1,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,    -1,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   473,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
      -1,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,   172,    -1,
     174,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,    -1,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,    -1,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
      -1,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,    -1,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,   429,   430,   431,    -1,    -1,
     434,    -1,    -1,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,    -1,    -1,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,    -1,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,    -1,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,    -1,   270,   271,   272,    -1,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,    -1,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,    -1,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,     3,    -1,    -1,    -1,    -1,   464,   465,   466,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,    -1,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,    -1,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,    -1,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
      -1,    -1,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,    -1,    -1,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,    -1,    -1,   459,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,    -1,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,   172,    -1,   174,   175,    -1,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,    -1,
     188,   189,   190,   191,   192,   193,    -1,   195,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
      -1,    -1,   210,    -1,   212,   213,   214,   215,   216,    -1,
      -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,    -1,
     248,   249,   250,   251,   252,    -1,   254,   255,    -1,   257,
      -1,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
      -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,
     278,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,    -1,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,    -1,   383,    -1,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,    -1,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,   421,   422,   423,   424,    -1,   426,    -1,
     428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   473,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,    -1,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
     172,    -1,   174,   175,    -1,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,   193,    -1,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,
     212,   213,   214,   215,   216,    -1,    -1,   219,   220,    -1,
     222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,    -1,   248,   249,   250,   251,
     252,    -1,   254,   255,    -1,   257,    -1,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
      -1,   383,    -1,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,    -1,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,    -1,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,   421,
     422,   423,   424,    -1,   426,    -1,   428,   429,   430,   431,
      -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   473,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,    -1,   248,   249,   250,   251,   252,    -1,   254,   255,
      -1,   257,    -1,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,    -1,   278,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,    -1,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,    -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,   172,    -1,   174,   175,    -1,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,    -1,   188,   189,
     190,   191,   192,   193,    -1,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,
     210,    -1,   212,   213,   214,   215,   216,    -1,    -1,   219,
     220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,    -1,   248,   249,
     250,   251,   252,    -1,   254,   255,    -1,   257,    -1,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
      -1,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,    -1,   383,    -1,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,    -1,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,    -1,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,    -1,   418,   419,
     420,   421,   422,   423,   424,    -1,   426,    -1,   428,   429,
     430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,    -1,    -1,    -1,
      -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,
      -1,    -1,    -1,   473,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    -1,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,    -1,   148,   149,   150,
      -1,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,    -1,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,    -1,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   454,   455,   456,    -1,     3,    -1,   460,
     461,   462,     8,   464,   465,   466,   467,   468,   469,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,    -1,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,   172,    -1,   174,   175,
      -1,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,    -1,   188,   189,   190,   191,   192,   193,    -1,   195,
      -1,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,   215,
     216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,    -1,   248,   249,   250,   251,   252,    -1,   254,   255,
      -1,   257,    -1,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,    -1,   278,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,    -1,   383,    -1,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,    -1,   408,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,   421,   422,   423,   424,    -1,
     426,    -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,    -1,    -1,    -1,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,
      16,    17,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,     8,    -1,    47,    11,    -1,    32,    -1,    15,    16,
      17,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    32,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,     8,
      47,    -1,    11,    -1,    -1,    71,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    32,    71,    15,    16,    17,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,     8,    -1,    47,    11,
      -1,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    71,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,   182,    71,
      -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,   182,    -1,    -1,    -1,
      40,   187,    -1,    -1,   208,   209,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,   223,
     187,    -1,   208,   209,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,
      -1,   208,   209,    -1,    -1,    -1,    -1,    -1,    -1,   253,
      -1,    -1,   256,   182,    -1,    -1,   223,    -1,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,   253,    -1,   273,
     256,    -1,   182,    -1,    -1,    -1,    -1,   187,    -1,   208,
     209,    -1,    -1,    -1,   270,    -1,   253,   273,    -1,   256,
     182,    -1,    -1,    -1,   223,   187,    -1,    -1,   208,   209,
      -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,   223,    -1,    -1,   208,   209,    -1,    -1,
      -1,    -1,    -1,    -1,   253,    -1,    -1,   256,    -1,    -1,
      -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   270,   182,   253,   273,    -1,   256,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,
     270,   253,    -1,   273,   256,    -1,    -1,    -1,   208,   209,
      -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   360,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     360,    -1,    -1,   457,    -1,    -1,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,    -1,    -1,   360,    -1,
     474,   457,    -1,    -1,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,   474,    -1,
     457,    -1,    -1,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,    -1,    -1,    -1,    -1,   474,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,    -1,    -1,    -1,    -1,   474,    -1,   457,    -1,    -1,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,    -1,   474,   457,    -1,    -1,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,     3,    -1,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
      -1,    -1,   472,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   466,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,   384,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,     4,     5,    -1,    -1,    -1,     9,   464,   465,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,     4,     5,    -1,    -1,    -1,
       9,   464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,    -1,    -1,
       8,    -1,    -1,    11,    -1,   464,   465,    15,    16,    17,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    32,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    71,    32,    -1,    15,
      16,    17,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    32,    -1,    -1,    35,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,   120,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    71,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,   159,    -1,    -1,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,    -1,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    71,   182,    -1,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,   209,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,   209,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,   223,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   253,   182,    -1,   256,    -1,
      -1,   187,    -1,   208,   209,    -1,    -1,    -1,   253,    -1,
      -1,   256,   270,    -1,    -1,   273,    -1,    -1,   223,    -1,
      -1,    -1,   208,   209,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,   253,    -1,
      -1,   256,   187,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,   270,    -1,   253,   273,    -1,
     256,    -1,    -1,   208,   209,    -1,    -1,    32,    -1,    -1,
      35,    -1,    -1,    -1,   270,    40,    -1,   273,   223,    -1,
      -1,   296,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   360,    71,    -1,   253,    -1,
      -1,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,     8,   273,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   360,   291,    -1,    -1,   417,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,   360,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,
      71,    -1,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   457,    -1,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   360,    -1,   182,    -1,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   457,   208,   209,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,    -1,    -1,    -1,   223,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,   253,    -1,
      -1,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   182,    -1,    -1,    -1,   270,   187,    -1,   273,    -1,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,    -1,    -1,   208,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   223,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,
      16,    17,   253,    -1,    -1,   256,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,   270,
       8,    -1,   273,    11,    40,   360,    -1,    15,    16,    17,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    71,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,     8,    -1,   360,
      11,    47,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,    71,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,   182,    -1,
      -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,
      71,   187,    -1,    -1,   208,   209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,
      -1,    -1,   208,   209,   182,    -1,    -1,    -1,    -1,   187,
      -1,    -1,    -1,    -1,    -1,    -1,   457,   223,    -1,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   253,
     208,   209,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   223,   270,   253,    -1,   273,
     256,    -1,    -1,    -1,    -1,    -1,   182,    -1,    -1,    -1,
      -1,   187,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   253,    -1,    -1,   256,    -1,
      -1,    -1,   208,   209,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   270,    -1,    -1,    -1,   187,   223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   253,    -1,    -1,
     256,    -1,   223,    -1,    -1,    -1,   360,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   256,   390,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   360,    -1,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,   360,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,    -1,   457,    -1,    -1,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,   384,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,   384,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    -1,    -1,    73,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,   162,    -1,   164,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,   162,    -1,   164,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,   410,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,   164,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,   164,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,   269,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
     269,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,
     169,    -1,   171,   172,    -1,   174,   175,    -1,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,    -1,
      -1,   210,    -1,   212,   213,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,    -1,   383,    -1,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,    -1,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,   172,    -1,   174,
     175,    -1,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,    -1,   188,   189,   190,   191,   192,   193,    -1,
     195,    -1,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,    -1,   207,    -1,    -1,   210,    -1,   212,   213,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,    -1,   383,    -1,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,   421,   422,   423,   424,
      -1,   426,    -1,   428,   429,   430,   431,    -1,    -1,   434,
      -1,    -1,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,    -1,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,   172,    -1,   174,   175,    -1,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,    -1,   188,   189,   190,
     191,   192,   193,    -1,   195,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,    -1,   207,    -1,    -1,   210,
      -1,   212,   213,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,    -1,   383,    -1,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,    -1,   408,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
     421,   422,   423,   424,    -1,   426,    -1,   428,   429,   430,
     431,    -1,    -1,   434,    -1,    -1,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,    -1,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,
     167,   168,   169,    -1,   171,   172,    -1,   174,   175,    -1,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,   193,    -1,   195,    -1,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,    -1,    -1,   210,    -1,   212,   213,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,    -1,   383,    -1,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,    -1,    -1,   434,    -1,    -1,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,    -1,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,   172,
      -1,   174,   175,    -1,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,    -1,   188,   189,   190,   191,   192,
     193,    -1,   195,    -1,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,    -1,    -1,   210,    -1,   212,
     213,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,    -1,   225,   226,   227,    -1,    -1,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,    -1,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,    -1,   278,    -1,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,    -1,
     383,    -1,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,    -1,   408,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,   421,   422,
     423,   424,    -1,   426,    -1,   428,   429,   430,   431,    -1,
      -1,   434,    -1,    -1,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    -1,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,    -1,   148,
     149,   150,    -1,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,    -1,    -1,    -1,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,   222,   223,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,    -1,   254,   255,   256,   257,    -1,
      -1,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,    -1,   277,   278,
     279,    -1,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,   296,    -1,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,    -1,   398,
      -1,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   454,   455,   456,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    -1,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,    -1,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,    -1,   148,
     149,   150,    -1,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,    -1,    -1,    -1,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,    -1,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,   222,   223,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,    -1,   254,   255,   256,   257,    -1,
      -1,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,    -1,   277,   278,
     279,    -1,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,   296,    -1,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,    -1,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,    -1,   395,   396,    -1,   398,
      -1,    -1,   401,   402,   403,   404,   405,   406,    -1,   408,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,   421,   422,    -1,   424,    -1,   426,   427,   428,
     429,   430,   431,    -1,    -1,   434,    -1,    -1,   437,   438,
     439,   440,   441,   442,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   454,   455,   456
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   121,   132,   138,   146,   148,   226,   295,   298,   327,
     335,   347,   355,   359,   369,   382,   418,   423,   436,   459,
     473,   481,   482,   483,   484,   495,   496,   498,   502,   516,
     517,   519,   521,   528,   530,   531,   578,   584,   585,   602,
     603,   604,   605,   606,   607,   644,   761,   764,   767,   774,
     775,   776,   783,   787,   793,   795,   800,   804,   805,   808,
     809,   811,   813,   395,   439,   529,   190,   341,   349,   382,
     429,   529,   529,    49,   473,   597,   169,   227,   273,   341,
     386,   388,   410,   413,   576,   773,     3,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    37,
      38,    40,    41,    42,    44,    45,    46,    47,    48,    50,
      51,    53,    54,    55,    56,    57,    60,    61,    62,    63,
      64,    66,    67,    68,    69,    70,    74,    75,    76,    77,
      78,    80,    81,    82,    84,    85,    86,    87,    88,    89,
      92,    93,    94,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   112,   114,   115,   116,   117,   118,   119,   121,
     122,   123,   125,   126,   129,   130,   131,   132,   133,   135,
     136,   137,   139,   140,   141,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   153,   155,   156,   157,   158,   160,
     162,   166,   167,   168,   169,   171,   172,   174,   175,   177,
     178,   179,   180,   181,   183,   184,   185,   186,   188,   189,
     190,   191,   192,   193,   195,   197,   198,   199,   200,   201,
     202,   203,   205,   207,   210,   212,   213,   214,   215,   216,
     219,   220,   222,   225,   226,   227,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   248,   249,   250,   251,   252,   254,   255,
     257,   259,   260,   261,   262,   263,   264,   266,   267,   270,
     271,   272,   275,   276,   278,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   302,   303,   304,   305,   306,   307,
     308,   310,   311,   312,   313,   314,   315,   316,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     331,   332,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   349,   350,   351,   352,   353,
     355,   356,   357,   358,   359,   361,   362,   363,   364,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   380,   381,   383,   385,   386,   387,   388,   389,
     391,   392,   395,   396,   397,   398,   399,   401,   402,   403,
     404,   405,   406,   408,   411,   412,   413,   414,   415,   418,
     419,   420,   421,   422,   423,   424,   426,   428,   429,   430,
     431,   434,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   748,   754,   816,   817,    20,    72,    87,   141,
     149,   161,   190,   236,   293,   307,   339,   341,   349,   352,
     371,   382,   389,   398,   429,   579,   580,   583,   529,   298,
     748,    90,   427,   473,   498,   584,   602,   779,   783,   800,
     813,     5,   753,   794,   754,   748,    26,   391,   395,   754,
     806,   807,   810,   529,    26,   127,   614,   615,   227,   341,
     353,   391,   788,   789,   810,   529,   269,   655,   746,   754,
     165,   473,   797,   473,   315,   608,   609,   748,   608,   603,
     604,   607,     0,   476,   116,   200,   415,   142,   204,   274,
     409,   616,   617,   603,   605,   606,   477,   427,   777,    26,
     391,   395,   810,   181,   746,   748,   181,   746,   181,   655,
     181,   746,   498,   584,   602,   763,   800,   746,   386,   388,
     386,   388,   325,   181,   754,   124,   290,   315,   348,   349,
     382,   407,   429,   575,   190,    26,   748,   238,   398,   104,
     382,   429,   344,   181,   581,   754,   756,   181,   747,   748,
     181,   748,   473,   520,   576,   779,     3,    43,    49,    72,
      79,    91,    98,   163,   165,   182,   196,   208,   209,   211,
     221,   223,   247,   256,   277,   279,   333,   360,   384,   423,
     427,   780,   782,   783,   785,   786,   816,   817,   818,   777,
     462,   473,   473,   762,   456,   210,   475,   268,     3,     4,
       6,     7,     8,     9,    10,    48,    50,    51,    58,    59,
      62,    63,    70,    72,    95,    96,    97,    98,    99,   100,
     101,   108,   109,   111,   131,   147,   151,   152,   157,   172,
     202,   203,   205,   220,   228,   229,   246,   248,   253,   258,
     259,   261,   270,   280,   294,   312,   337,   354,   363,   378,
     391,   392,   397,   399,   400,   416,   424,   457,   464,   465,
     466,   473,   478,   603,   670,   673,   676,   677,   678,   680,
     681,   682,   683,   685,   686,   690,   692,   693,   694,   696,
     709,   713,   731,   736,   743,   744,   750,   751,   752,   753,
     754,   755,   816,   818,   742,   743,   788,   753,   788,   456,
     164,   393,   462,   473,   746,   466,   471,   475,   737,   739,
       3,   163,   165,   427,   783,   796,   798,   163,   799,   690,
     717,   608,   477,   473,   758,   474,   474,   483,   164,   206,
     655,   801,    26,   127,   613,   613,    53,   613,   154,   159,
     224,   265,   622,   624,   625,   637,   639,   640,   641,   616,
     617,   473,   746,   456,   210,   147,    22,    28,   132,   272,
     323,   327,   355,   420,   489,   492,   493,   323,   147,    35,
      54,   103,   189,   237,   240,   251,   282,   323,   328,   349,
     355,   369,   492,   522,   525,   147,   323,   355,   492,   147,
     323,   355,   492,   474,   473,   565,   576,   253,   765,   429,
     181,   746,   181,   746,   815,   746,   309,    79,   770,   440,
      80,   123,   285,   387,   147,    56,   329,   477,   582,   475,
     757,   147,   477,   582,   147,   268,   717,   382,   474,   477,
       4,   152,   268,   400,   464,   465,   524,   527,   752,   753,
     778,   780,   781,   784,   779,   524,   784,   790,   792,   690,
     718,   719,   755,   759,     3,    48,    50,    51,    62,    63,
     108,   109,   157,   202,   203,   205,   246,   248,   261,   312,
     356,   363,   391,   392,   424,   667,   669,   671,   673,   675,
     677,   678,   679,   681,   682,   685,   686,   720,   755,   816,
      35,   222,   754,   473,   740,   426,   684,   690,   735,   473,
     684,   684,   473,   159,   473,   473,   473,   672,   672,   297,
     603,   473,   473,   674,   473,   473,   473,   473,    62,    63,
     684,   690,   473,   672,   473,   473,   473,   473,   473,   438,
     459,   473,   687,   473,   687,   473,   473,   690,   690,   690,
     603,   690,   717,   740,   739,   753,   473,   473,   753,     3,
       8,    11,    15,    16,    17,    32,    35,    40,    47,    71,
     182,   187,   208,   209,   223,   253,   256,   270,   273,   360,
     457,   460,   461,   462,   464,   465,   466,   467,   468,   469,
     711,   712,   713,   715,   437,   697,   279,   690,   206,   477,
     610,   473,   753,   739,   610,     3,   111,   227,   524,   686,
     753,   791,    94,   111,   792,   111,   792,   746,   690,   738,
       3,    26,    30,    31,    32,    33,    34,    35,    36,    39,
      52,    58,    59,    65,    71,    73,    83,    90,    95,    96,
      97,    99,   100,   101,   111,   113,   120,   124,   127,   128,
     134,   138,   142,   152,   154,   159,   161,   164,   170,   173,
     176,   187,   194,   204,   206,   217,   218,   224,   228,   229,
     253,   258,   265,   268,   269,   273,   274,   290,   291,   301,
     309,   317,   330,   347,   348,   354,   365,   379,   382,   390,
     393,   394,   400,   407,   409,   410,   416,   417,   425,   432,
     433,   435,   436,   466,   749,   760,   816,   817,   818,   819,
     737,   474,   477,   777,   474,   477,   609,   747,    35,   801,
     500,   746,    35,   754,   355,   605,   605,   618,   619,   690,
     605,   156,   250,   631,   212,   251,   311,   358,   415,    26,
     626,   690,   464,   465,   627,   628,   690,   692,   637,   638,
     625,   624,   622,   623,   159,   640,   263,   642,   622,   637,
     717,   758,   222,   746,    65,    73,    83,   161,   164,   181,
     301,   393,   410,   546,   556,   571,   754,    73,    83,   497,
      83,   497,   473,   393,   473,   544,   233,   413,   544,    83,
     477,   393,   746,   669,   524,    53,   526,   524,   524,   103,
     237,   240,    53,   393,   436,   459,   523,   244,   341,   523,
     525,   655,    83,   393,   497,   341,   746,   393,   341,   393,
     564,   569,   754,   436,   595,   315,   429,   147,    90,   517,
     530,   766,   767,   811,   746,   253,   518,   522,   253,   473,
     565,    35,   565,   746,   181,   559,   754,   771,   581,   756,
     749,   475,   747,   748,   748,   756,   474,   181,   746,   815,
     779,   785,     4,   752,     4,   752,   477,   474,   477,    13,
      14,   669,    34,   668,   106,   179,   239,   242,   345,   454,
     473,   688,   689,   474,   477,   672,   757,   763,   717,   737,
     473,   432,   732,   733,   690,   717,   473,   752,   752,   717,
       3,   106,   179,   239,   242,   345,   454,   721,   722,   753,
     752,   717,   717,   752,   752,   684,   684,   690,     8,    15,
      16,    17,   460,   461,   462,   464,   465,   466,   467,   468,
     469,   711,   716,   754,   690,   723,   464,   465,   473,   691,
     692,   713,   725,   474,   717,   690,   717,   726,   391,   391,
     752,   752,   690,    52,   164,   218,   394,   690,   717,   729,
     474,   477,   752,   478,   752,   688,   667,   690,   690,   690,
     690,   760,   391,    39,   379,   741,   756,   690,   473,   603,
     730,   127,   152,   253,   258,   263,   400,   411,   690,   258,
     473,   690,   393,    47,   182,   187,   223,   360,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,    26,    33,
     365,   710,   173,   155,   698,   337,   473,   709,   169,   227,
     382,   386,   388,   413,   611,   746,   744,   164,   645,    26,
     127,   425,   466,   474,   718,   645,   473,   753,   474,   472,
     479,   746,   796,   746,   804,   690,   474,   473,   417,   803,
     111,   281,   473,   499,   602,    35,   754,   473,   504,   513,
     515,   754,   477,    36,   120,   417,   620,   337,   338,   464,
     465,   628,   630,   692,   358,   212,   269,   477,     4,   629,
     752,   629,   337,   338,   630,   745,   746,   257,   362,   643,
     638,   623,   474,   323,   492,   473,   181,   556,   748,   212,
     754,   253,   212,   754,   417,   473,   549,   667,   748,   754,
     181,   748,   181,   754,    22,   132,   355,   488,   491,   539,
     554,   760,   748,   548,   568,   760,   748,   489,   748,   323,
     355,   492,   522,   524,   756,   748,   524,   756,   748,   524,
     323,   355,   492,   748,   748,   748,   748,   323,   355,   492,
     748,   748,   306,   591,   474,   477,   266,   164,   393,   586,
     429,   746,   754,   576,   473,   147,   147,   223,   546,   556,
     560,   563,   572,   574,   754,   436,   438,   551,   146,   602,
     436,   772,   268,   253,   268,   582,   749,   582,   268,   582,
     253,    35,   790,   719,   690,   690,    34,   668,   471,   471,
     393,   393,   393,   473,   393,   752,   667,   672,   474,   717,
     690,   134,   733,   734,    35,   474,   690,   474,   474,   474,
     474,   164,   474,   474,   474,   474,   474,   477,   474,   475,
     291,   724,   474,   691,   691,   690,    11,    15,    16,    17,
     187,   208,   270,   460,   461,   462,   464,   465,   466,   467,
     468,   469,   713,   691,   474,   474,   159,   164,   727,   728,
     474,   456,   456,   474,   474,    35,   729,   717,   729,   729,
     164,   474,   740,   690,   474,   474,   474,   456,   691,   691,
     140,   717,   164,   127,   152,   258,   263,   400,   411,   473,
     140,   716,   690,   379,   741,   690,   730,   690,   393,   473,
     603,   473,   473,   278,   702,   386,   388,   386,   388,   746,
     382,   612,   612,   612,   217,   338,   473,   603,   646,   647,
     648,   655,   658,   693,   695,   696,   750,   754,   433,   663,
     718,   718,   719,   474,   477,   616,   617,   663,   752,   688,
     690,   738,   758,   763,   646,   433,   802,   423,   381,   416,
     508,   503,   512,   754,   268,   505,   754,   509,   515,   477,
     645,   462,   740,   619,   270,   711,   714,   458,   621,     4,
     752,   630,   269,   415,   627,   477,   232,   393,   690,   253,
     571,   473,   147,   473,   549,   190,   569,   532,   272,   542,
     532,    22,   132,   327,   328,   355,   485,   486,   487,   493,
     494,   147,   582,   147,   582,   539,   554,   539,   474,   477,
     535,   753,   474,   477,   462,   475,   393,   341,    83,   393,
     497,   341,   393,   393,   393,   341,   372,   373,   600,   753,
     564,   591,   746,   565,   765,   382,   569,   746,   746,   815,
     746,   474,   477,   266,   544,   266,   268,   543,   748,   436,
     814,   544,    35,   746,   147,   746,   756,   147,   471,   752,
     472,   752,   179,   239,   689,   239,   689,   689,   752,   242,
     474,   474,   390,   690,   138,   667,   474,   690,   690,   716,
     690,   727,   667,   691,   691,   691,   691,   127,   253,   263,
     691,   691,   691,   691,   691,   691,   691,   691,   691,   691,
     690,   690,   728,   727,   687,   687,   667,   474,   474,   474,
     717,   474,   478,   753,   690,    32,    32,   690,   474,   690,
     164,   473,   720,   690,   474,   140,   691,   691,   140,   140,
     690,   690,   617,   433,   473,   703,   754,   612,   612,   612,
     612,   746,   746,   746,   603,   658,   754,   164,   603,   647,
     648,    35,   649,   650,   754,   477,    91,   165,   196,   211,
     221,   247,   333,   652,   650,    35,   649,   651,   754,   459,
     662,   473,   739,   690,   173,   632,   616,   616,   616,   425,
     474,   632,   474,   472,   474,   690,   330,   507,   422,   474,
     477,   740,    81,   507,   474,   477,   504,   802,   690,   473,
     621,   156,   216,   269,   746,   748,   474,   147,   569,   556,
     569,   532,   559,   474,   113,   194,   251,   253,   555,   473,
     566,   168,   111,   180,   253,   544,   523,   104,   111,   168,
     253,   371,   374,   525,   544,   355,   487,   403,   748,   754,
     491,   568,   252,   270,   356,   464,   465,   524,   533,   570,
     667,   714,   753,   755,   819,   760,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   523,   600,   473,   772,
     181,   746,   474,   518,   473,    35,   553,   551,   560,    77,
     520,   104,   251,   602,   473,   559,   417,   769,   582,   815,
     752,   472,   472,   474,   690,   474,   474,   728,   164,   127,
     263,   473,   474,   688,   690,   690,   690,   720,   474,   690,
      32,    32,   690,   690,   140,   474,   474,   690,   704,   754,
     746,   746,   746,   746,   650,   651,   739,   473,   474,   754,
     473,   647,   211,   277,   653,   647,   653,   211,   652,   653,
     211,   384,   656,   473,   754,   473,   275,   718,    53,   176,
     636,   474,   474,   474,   719,   753,   636,   753,   743,   602,
     281,   602,   503,   268,   473,   501,   462,   515,   507,   716,
     532,   556,   474,   474,   436,   562,   114,   183,   192,   113,
     419,   539,   557,    65,    71,    83,   111,   113,   168,   194,
     253,   258,   301,   317,   410,   537,   538,   550,    29,    53,
     577,   181,   258,   524,   690,   577,   258,   464,   465,   527,
     754,   667,   582,   582,   755,   757,   462,   393,   393,   473,
     592,   596,   417,   587,   589,   569,    35,   253,   473,   772,
     563,   146,   602,   144,   188,   543,   116,   132,   300,   814,
     104,   436,   812,   164,   268,   754,   768,   473,    35,   472,
     691,   164,   473,   720,   474,   690,   690,   690,   474,   287,
     705,   659,   660,   695,   649,   473,   747,   647,   268,   417,
     654,   647,   211,   647,   750,   664,   665,   754,   473,   664,
     754,   616,   473,   633,   634,   635,   690,   690,   435,   699,
     616,   699,   508,    83,   473,   506,   514,   695,   754,   128,
     690,   474,   317,   562,   473,   552,   532,   474,   477,   473,
     756,   748,   691,   577,   114,   183,   113,   258,   212,   746,
     562,   111,    35,   147,    71,   666,   757,   468,   533,   748,
     748,   594,   601,   760,    49,    92,   117,   136,   140,   160,
     163,   177,   258,   266,   308,   598,   523,   118,   474,   602,
     147,    35,   474,   748,   814,    26,    76,    84,   112,   180,
     191,   371,   374,   547,   547,   338,   338,    57,    65,   227,
     754,   746,   514,   691,   720,   474,    53,   616,   474,   477,
      35,   661,   747,   474,   690,   473,   647,   654,   473,   474,
     477,   667,   664,   474,   474,   474,   477,   700,   701,   754,
     474,   422,   748,   690,   474,   477,    71,   510,   510,   254,
     415,   746,   532,   558,   561,   760,   539,   690,   253,   538,
      35,   562,   565,   180,   756,   417,   490,   468,   403,   474,
     477,   466,   473,   524,   593,   784,    35,   590,   753,   590,
     253,   258,   308,   590,   590,   592,   753,   772,   812,   746,
     602,   551,   520,    65,   271,    65,   317,   769,   474,   474,
     717,   310,   338,   706,   662,   659,   473,   474,   747,   717,
     665,   666,   474,   634,   477,    35,   602,   474,   663,   506,
     756,   511,   756,   511,   355,   565,   474,   477,   462,   474,
     180,   235,   573,   473,   534,   690,   403,   594,   588,   599,
     784,   753,   753,   258,   569,   466,   569,   753,   753,    35,
     473,   812,   543,   814,   271,   271,   746,   473,   772,    47,
      94,   405,   690,   707,   708,   707,   474,   664,   474,   474,
     701,   703,   510,   620,   620,   513,   573,   561,   533,   251,
     545,   534,   165,   286,   361,   268,   540,   541,   567,   522,
     474,   477,   569,   602,   477,   514,   663,   708,   337,   158,
     296,   158,   296,   474,   324,   657,   511,   621,   621,   663,
     541,   192,   116,   415,   268,   567,   268,   540,   474,   599,
     812,   393,   474,    32,   473,   620,   532,    56,   251,   329,
     355,   536,   536,   754,   772,   708,   690,   621,    21,   111,
     258,   317,   663,   474,   746,   474
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 451 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 467 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 479 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 35:
#line 518 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 36:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 45:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 46:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 47:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 48:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 49:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 50:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 51:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 52:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 53:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 54:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 83:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 84:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 85:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 86:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 87:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 88:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 89:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 90:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 91:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 92:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 93:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 94:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 112:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 113:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 114:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 115:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 116:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 117:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 118:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 119:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 120:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 121:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 122:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 123:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 124:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 125:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 126:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 127:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 128:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 129:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 130:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 131:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 132:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 133:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 134:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 135:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 136:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 137:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 138:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 139:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 140:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 141:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 142:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 143:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 144:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 145:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 146:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 147:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 148:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 149:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 150:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 151:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 152:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 153:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 159:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 160:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 162:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 163:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 164:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 167:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 168:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 169:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 170:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 171:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 172:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 173:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 174:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 175:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 177:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 178:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 180:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 185:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 187:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 190:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 191:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 192:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 193:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 194:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 201:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 202:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 203:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
		                        PGCreateStmt *n = makeNode(PGCreateStmt);
		                        (yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
		                        n->relation = (yyvsp[(7) - (12)].range);
		                        n->tableElts = (yyvsp[(9) - (12)].list);
		                        n->ofTypename = NULL;
		                        n->constraints = NIL;
		                        n->options = (yyvsp[(11) - (12)].list);
		                        n->oncommit = (yyvsp[(12) - (12)].oncommit);
		                        n->if_not_exists = true;
		                        (yyval.node) = (PGNode *)n;
		                ;}
    break;

  case 205:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
                			PGCreateRAIStmt *n = makeNode(PGCreateRAIStmt);
                			n->direction = (yyvsp[(3) - (18)].ival);
                			n->name = (yyvsp[(5) - (18)].range);
                			n->table = (yyvsp[(7) - (18)].range);
                			n->from_col = (yyvsp[(10) - (18)].str);
                			n->from_ref = (yyvsp[(12) - (18)].range);
                			n->to_col = (yyvsp[(15) - (18)].str);
                			n->to_ref = (yyvsp[(17) - (18)].range);
                			(yyval.node) = (PGNode *)n;
                		;}
    break;

  case 206:
#line 55 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 207:
#line 57 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 208:
#line 83 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 209:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 210:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 211:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 212:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 213:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 214:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 215:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 216:
#line 98 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 217:
#line 103 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 218:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 219:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 220:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 221:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 222:
#line 113 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 223:
#line 119 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 224:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 225:
#line 122 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 226:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 146 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 153 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 163 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 173 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 185 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 235:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 236:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 237:
#line 236 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 238:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 239:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 240:
#line 242 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 241:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 242:
#line 248 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 243:
#line 252 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 244:
#line 253 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 245:
#line 254 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 246:
#line 255 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 247:
#line 260 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 248:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 249:
#line 265 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 250:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 251:
#line 277 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 252:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 253:
#line 283 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 254:
#line 284 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 255:
#line 285 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 256:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 257:
#line 287 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 258:
#line 288 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 259:
#line 289 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 260:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 261:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 262:
#line 300 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 263:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 320 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 268:
#line 339 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 269:
#line 340 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 270:
#line 341 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 271:
#line 345 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 272:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 273:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 274:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 275:
#line 357 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 276:
#line 362 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 277:
#line 363 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 278:
#line 364 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 279:
#line 365 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 280:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 281:
#line 367 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 282:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 283:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(2) - (2)].str);
					n->typeName = NULL;
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = NULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 284:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(2) - (2)].str);
					n->typeName = NULL;
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = NULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 430 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 434 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 440 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 441 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 450 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 451 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 456 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 460 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 474 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 487 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 493 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 497 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 507 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 516 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 523 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 524 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 530 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 547 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 561 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 574 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 589 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 617 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 639 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 650 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 662 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 674 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RAI_UNDIRECTED; ;}
    break;

  case 328:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RAI_DIRECTED; ;}
    break;

  case 329:
#line 684 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RAI_SELF; ;}
    break;

  case 330:
#line 685 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RAI_PKFK; ;}
    break;

  case 331:
#line 686 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RAI_DIRECTED; ;}
    break;

  case 332:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 333:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 334:
#line 690 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 335:
#line 691 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 336:
#line 693 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 337:
#line 700 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 338:
#line 706 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 339:
#line 707 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 340:
#line 712 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 341:
#line 713 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 342:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 343:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 345:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 346:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 347:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 348:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 349:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 350:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 351:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 352:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 353:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 354:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 355:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 356:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 357:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 358:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 359:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 360:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 361:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 362:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 363:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 364:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 365:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 366:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 367:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 368:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 369:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 370:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 371:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 372:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 373:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 374:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 375:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 376:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 377:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 378:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 380:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 381:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 382:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 383:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 384:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 385:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 386:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 387:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 390:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 391:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 392:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 393:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 394:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 395:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 396:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 397:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 398:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 399:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 400:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 401:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 402:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 403:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 404:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 405:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 407:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 410:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 411:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 412:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 413:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 414:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 417:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 419:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 420:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 421:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 422:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 423:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 424:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 427:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 428:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 429:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 430:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 431:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 432:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 433:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 434:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 435:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 436:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 437:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 438:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 439:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 440:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 441:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 442:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 444:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 445:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 447:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 448:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 449:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 450:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 451:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 452:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 453:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 454:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 455:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 456:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 461:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 462:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 463:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 464:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 465:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 466:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 468:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 469:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 470:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 471:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 472:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 473:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 475:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 476:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 477:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 478:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 479:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 480:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 482:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 483:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = SORTBY_NULLS_LAST; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 485:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 486:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 489:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 490:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 491:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 492:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 493:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 494:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 495:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 496:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 497:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 498:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 499:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 500:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 501:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 502:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 503:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 504:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 505:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 506:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 507:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 508:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 509:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 510:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 511:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 512:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 513:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 514:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 516:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 517:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 518:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 519:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 520:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 521:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 522:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 523:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 524:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 525:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 526:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 527:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 528:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 529:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 530:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 531:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 532:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 533:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 534:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 537:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 538:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 539:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 541:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 542:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 543:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 544:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 545:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 547:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 548:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 549:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 550:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 551:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 552:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 553:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 554:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 555:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 556:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 557:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 558:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 559:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 560:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 561:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 562:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 563:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 564:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 565:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 566:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 567:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 568:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 569:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 570:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 571:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 572:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 573:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 574:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 575:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 576:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 577:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 578:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 579:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 581:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 582:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 583:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 584:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 585:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 586:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 587:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 588:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 589:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 590:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 592:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 593:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 594:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 595:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 596:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 597:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 598:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 599:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 600:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 601:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 602:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 603:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 604:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 605:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 609:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 610:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 611:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 612:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 613:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 614:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 615:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 616:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 617:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 618:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 619:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 620:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 621:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 622:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 623:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 624:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 625:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 626:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 627:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 628:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 629:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 630:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 631:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 632:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 633:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 634:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 635:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 636:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 637:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 638:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 639:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 640:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 641:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 642:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 643:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 644:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 646:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 647:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 648:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 649:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 650:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 651:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 652:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 654:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 655:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 656:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 657:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 658:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 659:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 660:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 661:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 662:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 663:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 664:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 665:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 666:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 667:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 668:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 669:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 670:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 671:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 672:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 673:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 674:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 675:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 676:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 677:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 678:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 680:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 681:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 682:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 683:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 688:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 689:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 691:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 692:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 693:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 694:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 695:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 696:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 697:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 698:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 699:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 700:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 701:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 702:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 703:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 704:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 705:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 706:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 707:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 708:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 709:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 710:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 711:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 712:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 713:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 714:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 715:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 716:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 717:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 718:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 719:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 720:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 721:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 722:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 723:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 724:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 725:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 726:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 727:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 728:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 729:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 730:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 731:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 732:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 733:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 734:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 735:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 736:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 737:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 738:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 739:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 740:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 742:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 743:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 751:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 752:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 753:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 754:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 755:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 756:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 757:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 758:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 759:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 760:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 761:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 762:
#line 2030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 764:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 765:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 766:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 767:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 768:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 769:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 771:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 772:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 773:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 774:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 775:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 776:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 778:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 780:
#line 2228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 781:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 782:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 783:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 784:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 787:
#line 2265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 789:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 791:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 792:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 793:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 794:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 795:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 796:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 797:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 798:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 799:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 800:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 801:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 802:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 803:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 804:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 805:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 806:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 807:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 808:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 809:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 810:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 811:
#line 2385 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = PG_IS_GREATEST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 812:
#line 2393 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = IS_LEAST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 813:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 814:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 815:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 816:
#line 2413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 817:
#line 2421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 818:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 819:
#line 2426 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 820:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 821:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 2441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 823:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 825:
#line 2461 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 2486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 827:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 828:
#line 2490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 829:
#line 2491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 830:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 831:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 832:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 833:
#line 2537 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 834:
#line 2554 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 835:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 836:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 837:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 838:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 839:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 840:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 841:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 842:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 843:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 844:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 845:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 846:
#line 2661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 847:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 848:
#line 2665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 849:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 850:
#line 2667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 851:
#line 2668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 852:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 853:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 854:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 855:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 856:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 857:
#line 2674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 858:
#line 2675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 859:
#line 2676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 860:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 861:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 862:
#line 2687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 863:
#line 2689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 864:
#line 2694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 865:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 866:
#line 2698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 867:
#line 2700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 868:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 869:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 870:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 871:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 872:
#line 2724 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 873:
#line 2728 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 874:
#line 2735 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 875:
#line 2739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 876:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 877:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 878:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 879:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 880:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 881:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 882:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 883:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 884:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 885:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 886:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 887:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 888:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 889:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 890:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 891:
#line 2802 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 892:
#line 2806 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 893:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 894:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 895:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 896:
#line 2837 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 897:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 898:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 899:
#line 2850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 900:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 901:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 902:
#line 2873 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 903:
#line 2876 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 904:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 905:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 906:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 907:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 908:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 909:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 910:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 911:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 912:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 913:
#line 2931 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 914:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 915:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 916:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 917:
#line 2940 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 918:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 919:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 920:
#line 2955 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 921:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 922:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 923:
#line 2977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 924:
#line 2978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 925:
#line 2982 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 926:
#line 2983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 927:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 928:
#line 2988 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 931:
#line 3002 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 932:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 933:
#line 3007 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 934:
#line 3008 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 935:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 936:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 937:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 938:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 939:
#line 3065 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 940:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 941:
#line 3078 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 943:
#line 3109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 944:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 945:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 946:
#line 3117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 947:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 948:
#line 3130 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 949:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 950:
#line 3145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 3149 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 3153 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 3166 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 955:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 956:
#line 3205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 957:
#line 3209 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 958:
#line 3215 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 959:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 960:
#line 3235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 961:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 962:
#line 3243 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 963:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 964:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 965:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 966:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 967:
#line 3267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 968:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 969:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 970:
#line 3274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 971:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 972:
#line 3278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 973:
#line 3282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 974:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 975:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 976:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 978:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 979:
#line 3301 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 980:
#line 3302 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 981:
#line 3303 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 982:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 983:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 984:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 985:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 990:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 991:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 992:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 993:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 998:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 999:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1000:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1001:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1002:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1003:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1004:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1005:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1006:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1007:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1008:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1009:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1010:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1011:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1012:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1013:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1014:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1015:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1016:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1017:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1018:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1019:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1020:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1021:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1022:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1023:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1024:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1025:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1026:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1032:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1033:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1034:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1035:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1036:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1037:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1038:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1039:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1040:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1041:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1042:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1043:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1044:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1045:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1046:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1047:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1048:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1049:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1050:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1051:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1052:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1053:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1054:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1055:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1056:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1057:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1058:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1059:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1060:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1061:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1062:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1063:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1064:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1065:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1066:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1067:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1068:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1069:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1070:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1071:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1072:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1073:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1074:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1075:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1077:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1078:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1079:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1080:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1081:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1082:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1083:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1084:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1085:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1086:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1087:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1088:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1089:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1090:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1091:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1092:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1093:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1094:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1095:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1096:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1097:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1098:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1099:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1100:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1101:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1103:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1104:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1105:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1106:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1107:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1112:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1113:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1114:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1115:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1116:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1117:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1118:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1119:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1120:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1121:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1122:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1123:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1124:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1125:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1126:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22048 "third_party/libpg_query/src_backend_parser_gram.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

